"
****************************************************************************
Copyright (c) 2000, 2019 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
Lars Vogel <Lars.Vogel@vogella.com> - Bug 455263
*****************************************************************************
",0,-1
"
This class provides access to a small number of SWT system-wide
methods, and in addition defines the public constants provided
by SWT.
<p>
By defining constants like UP and DOWN in a single class, SWT
can share common names and concepts at the same time minimizing
the number of classes, names and constants for the application
programmer.
</p><p>
Note that some of the constants provided by this class represent
optional, appearance related aspects of widgets which are available
either only on some window systems, or for a differing set of
widgets on each window system. These constants are marked
as <em>HINT</em>s. The set of widgets which support a particular
<em>HINT</em> may change from release to release, although we typically
will not withdraw support for a <em>HINT</em> once it is made available.
</p>
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",1,-2
"
The null event type (value is 0).
@since 3.0
",2,-3
"
The key down event type (value is 1).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Control#addKeyListener
@see org.eclipse.swt.widgets.Tracker#addKeyListener
@see org.eclipse.swt.events.KeyListener#keyPressed
@see org.eclipse.swt.events.KeyEvent
",3,-4
"
The key up event type (value is 2).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Control#addKeyListener
@see org.eclipse.swt.widgets.Tracker#addKeyListener
@see org.eclipse.swt.events.KeyListener#keyReleased
@see org.eclipse.swt.events.KeyEvent
",4,-5
"
The mouse down event type (value is 3).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Control#addMouseListener
@see org.eclipse.swt.events.MouseListener#mouseDown
@see org.eclipse.swt.events.MouseEvent
",5,-6
"
The mouse up event type (value is 4).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Control#addMouseListener
@see org.eclipse.swt.events.MouseListener#mouseUp
@see org.eclipse.swt.events.MouseEvent
",6,-7
"
The mouse move event type (value is 5).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Control#addMouseMoveListener
@see org.eclipse.swt.events.MouseMoveListener#mouseMove
@see org.eclipse.swt.events.MouseEvent
",7,-8
"
The mouse enter event type (value is 6).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Control#addMouseTrackListener
@see org.eclipse.swt.events.MouseTrackListener#mouseEnter
@see org.eclipse.swt.events.MouseEvent
",8,-9
"
The mouse exit event type (value is 7).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Control#addMouseTrackListener
@see org.eclipse.swt.events.MouseTrackListener#mouseExit
@see org.eclipse.swt.events.MouseEvent
",9,-10
"
The mouse double click event type (value is 8).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Control#addMouseListener
@see org.eclipse.swt.events.MouseListener#mouseDoubleClick
@see org.eclipse.swt.events.MouseEvent
",10,-11
"
The paint event type (value is 9).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Control#addPaintListener
@see org.eclipse.swt.events.PaintListener#paintControl
@see org.eclipse.swt.events.PaintEvent
",11,-12
"
The move event type (value is 10).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Control#addControlListener
@see org.eclipse.swt.widgets.TableColumn#addControlListener
@see org.eclipse.swt.widgets.Tracker#addControlListener
@see org.eclipse.swt.widgets.TreeColumn#addControlListener
@see org.eclipse.swt.events.ControlListener#controlMoved
@see org.eclipse.swt.events.ControlEvent
",12,-13
"
The resize event type (value is 11).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Control#addControlListener
@see org.eclipse.swt.widgets.TableColumn#addControlListener
@see org.eclipse.swt.widgets.Tracker#addControlListener
@see org.eclipse.swt.widgets.TreeColumn#addControlListener
@see org.eclipse.swt.events.ControlListener#controlResized
@see org.eclipse.swt.events.ControlEvent
",13,-14
"
The dispose event type (value is 12).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Widget#addDisposeListener
@see org.eclipse.swt.events.DisposeListener#widgetDisposed
@see org.eclipse.swt.events.DisposeEvent
",14,-15
"
The selection event type (value is 13).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Button#addSelectionListener
@see org.eclipse.swt.widgets.Combo#addSelectionListener
@see org.eclipse.swt.widgets.CoolItem#addSelectionListener
@see org.eclipse.swt.widgets.Link#addSelectionListener
@see org.eclipse.swt.widgets.List#addSelectionListener
@see org.eclipse.swt.widgets.MenuItem#addSelectionListener
@see org.eclipse.swt.widgets.Sash#addSelectionListener
@see org.eclipse.swt.widgets.Scale#addSelectionListener
@see org.eclipse.swt.widgets.ScrollBar#addSelectionListener
@see org.eclipse.swt.widgets.Slider#addSelectionListener
@see org.eclipse.swt.widgets.TabFolder#addSelectionListener
@see org.eclipse.swt.widgets.Table#addSelectionListener
@see org.eclipse.swt.widgets.TableColumn#addSelectionListener
@see org.eclipse.swt.widgets.ToolItem#addSelectionListener
@see org.eclipse.swt.widgets.TrayItem#addSelectionListener
@see org.eclipse.swt.widgets.Tree#addSelectionListener
@see org.eclipse.swt.widgets.TreeColumn#addSelectionListener
@see org.eclipse.swt.events.SelectionListener#widgetSelected
@see org.eclipse.swt.events.SelectionEvent
",15,-16
"
The default selection event type (value is 14).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Combo#addSelectionListener
@see org.eclipse.swt.widgets.List#addSelectionListener
@see org.eclipse.swt.widgets.Spinner#addSelectionListener
@see org.eclipse.swt.widgets.Table#addSelectionListener
@see org.eclipse.swt.widgets.Text#addSelectionListener
@see org.eclipse.swt.widgets.TrayItem#addSelectionListener
@see org.eclipse.swt.widgets.Tree#addSelectionListener
@see org.eclipse.swt.events.SelectionListener#widgetDefaultSelected
@see org.eclipse.swt.events.SelectionEvent
",16,-17
"
The focus in event type (value is 15).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Control#addFocusListener
@see org.eclipse.swt.events.FocusListener#focusGained
@see org.eclipse.swt.events.FocusEvent
",17,-18
"
The focus out event type (value is 16).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Control#addFocusListener
@see org.eclipse.swt.events.FocusListener#focusLost
@see org.eclipse.swt.events.FocusEvent
",18,-19
"
The expand event type (value is 17).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Tree#addTreeListener
@see org.eclipse.swt.events.TreeListener#treeExpanded
@see org.eclipse.swt.events.TreeEvent
",19,-20
"
The collapse event type (value is 18).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Tree#addTreeListener
@see org.eclipse.swt.events.TreeListener#treeCollapsed
@see org.eclipse.swt.events.TreeEvent
",20,-21
"
The iconify event type (value is 19).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Shell#addShellListener
@see org.eclipse.swt.events.ShellListener#shellIconified
@see org.eclipse.swt.events.ShellEvent
",21,-22
"
The de-iconify event type (value is 20).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Shell#addShellListener
@see org.eclipse.swt.events.ShellListener#shellDeiconified
@see org.eclipse.swt.events.ShellEvent
",22,-23
"
The close event type (value is 21).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Shell#addShellListener
@see org.eclipse.swt.events.ShellListener#shellClosed
@see org.eclipse.swt.events.ShellEvent
",23,-24
"
The show event type (value is 22).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Menu#addMenuListener
@see org.eclipse.swt.events.MenuListener#menuShown
@see org.eclipse.swt.events.MenuEvent
",24,-25
"
The hide event type (value is 23).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Menu#addMenuListener
@see org.eclipse.swt.events.MenuListener#menuHidden
@see org.eclipse.swt.events.MenuEvent
",25,-26
"
The modify event type (value is 24).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Combo#addModifyListener
@see org.eclipse.swt.widgets.Spinner#addModifyListener
@see org.eclipse.swt.widgets.Text#addModifyListener
@see org.eclipse.swt.events.ModifyListener#modifyText
@see org.eclipse.swt.events.ModifyEvent
",26,-27
"
The verify event type (value is 25).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.custom.CCombo#addVerifyListener
@see org.eclipse.swt.widgets.Combo#addVerifyListener
@see org.eclipse.swt.custom.StyledText#addVerifyListener
@see org.eclipse.swt.widgets.Text#addVerifyListener
@see org.eclipse.swt.events.VerifyListener#verifyText
@see org.eclipse.swt.events.VerifyEvent
",27,-28
"
The activate event type (value is 26).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Shell#addShellListener
@see org.eclipse.swt.events.ShellListener#shellActivated
@see org.eclipse.swt.events.ShellEvent
",28,-29
"
The deactivate event type (value is 27).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Shell#addShellListener
@see org.eclipse.swt.events.ShellListener#shellDeactivated
@see org.eclipse.swt.events.ShellEvent
",29,-30
"
The help event type (value is 28).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Control#addHelpListener
@see org.eclipse.swt.widgets.Menu#addHelpListener
@see org.eclipse.swt.widgets.MenuItem#addHelpListener
@see org.eclipse.swt.events.HelpListener#helpRequested
@see org.eclipse.swt.events.HelpEvent
",30,-31
"
The drag detect event type (value is 29).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Control#addDragDetectListener
@see org.eclipse.swt.events.DragDetectListener#dragDetected
@see org.eclipse.swt.events.DragDetectEvent
@see org.eclipse.swt.dnd.DragSource
",31,-32
"
The arm event type (value is 30).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.MenuItem#addArmListener
@see org.eclipse.swt.events.ArmListener#widgetArmed
@see org.eclipse.swt.events.ArmEvent
",32,-33
"
The traverse event type (value is 31).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Control#addTraverseListener
@see org.eclipse.swt.events.TraverseListener#keyTraversed
@see org.eclipse.swt.events.TraverseEvent
",33,-34
"
The mouse hover event type (value is 32).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Control#addMouseTrackListener
@see org.eclipse.swt.events.MouseTrackListener#mouseHover
@see org.eclipse.swt.events.MouseEvent
",34,-35
"
The hardware key down event type (value is 33).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
",35,-36
"
The hardware key up event type (value is 34).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
",36,-37
"
The menu detect event type (value is 35).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Control#addMenuDetectListener
@see org.eclipse.swt.widgets.TrayItem#addMenuDetectListener
@see org.eclipse.swt.events.MenuDetectListener#menuDetected
@see org.eclipse.swt.events.MenuDetectEvent
@since 3.0
",37,-38
"
The set data event type (value is 36).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Table
@see org.eclipse.swt.widgets.Tree
@since 3.0
",38,-39
"
The mouse vertical wheel event type (value is 37).
@see org.eclipse.swt.widgets.Control#addMouseWheelListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@since 3.6
",39,-40
"
The mouse horizontal wheel event type (value is 38).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@since 3.6
",40,-41
"
The mouse wheel event type (value is 37).
This is a synonym for {@link #MouseVerticalWheel} (value is 37).
Newer applications should use {@link #MouseVerticalWheel} instead
of {@link #MouseWheel} to make code more understandable.
@see org.eclipse.swt.widgets.Control#addMouseWheelListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@since 3.1
",41,-42
"
The settings changed event type (value is 39).
<p>
The settings changed event is sent when an operating system
property, such as a system font or color, has been changed.
The event occurs after the property has been changed, but
before any widget is redrawn.  Applications that cache operating
system properties can use this event to update their caches.
A specific property change can be detected by querying the
new value of a property and comparing it with the equivalent
cached value.  The operating system automatically redraws and
lays out all widgets after this event is sent.
</p>
@see org.eclipse.swt.widgets.Display#addListener
@see org.eclipse.swt.widgets.Event
@since 3.2
",42,-43
"
The erase item event type (value is 40).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@since 3.2
",43,-44
"
The measure item event type (value is 41).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@since 3.2
",44,-45
"
The paint item event type (value is 42).
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@since 3.2
",45,-46
"
The IME composition event type (value is 43).
<p>
The IME composition event is sent to allow
custom text editors to implement in-line
editing of international text.
</p>
The detail field indicates the action to be taken:
<ul>
<li>{@link SWT#COMPOSITION_CHANGED}</li>
<li>{@link SWT#COMPOSITION_OFFSET}</li>
<li>{@link SWT#COMPOSITION_SELECTION}</li>
</ul>
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@since 3.4
",46,-47
"
The orientation change event type (value is 44).
<p>
On some platforms the orientation of text widgets
can be changed by keyboard shortcut.
The application can use the <code>doit</code> field
of the event to stop the change from happening.
</p>
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@since 3.6
",47,-48
"
The skin event type (value is 45).
<p>
The skin event is sent by the display when a widget needs to
be skinned.
</p>
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Widget#reskin(int)
@since 3.6
",48,-49
"
The open document event type (value is 46).
<p>
This event is sent when SWT receives notification that a document
should be opened.
</p>
@see org.eclipse.swt.widgets.Display#addListener
@see org.eclipse.swt.widgets.Event
@since 3.6
",49,-50
"
The touch event type (value is 47).
<p>
This event is sent when a touch has been performed
on a touch-based input source.
</p>
@see org.eclipse.swt.widgets.Display#addListener
@see org.eclipse.swt.widgets.Event
@since 3.7
",50,-51
"
The gesture event type (value is 48).
<p>
This event is sent when a gesture has been performed.
</p>
@see org.eclipse.swt.widgets.Display#addListener
@see org.eclipse.swt.widgets.Event
@see SWT#GESTURE_MAGNIFY
@see SWT#GESTURE_PAN
@see SWT#GESTURE_ROTATE
@see SWT#GESTURE_SWIPE
@since 3.7
",51,-52
"
The segments event type (value is 49).
<p>
This event is sent when text content has been changed.
</p>
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@see org.eclipse.swt.widgets.Text#addSegmentListener
@see org.eclipse.swt.events.SegmentEvent
@since 3.8
",52,-53
"
The PreEvent event type (value is 50).
<p>
This event is sent before an event other than {@link #PreExternalEventDispatch} or
{@link #PostExternalEventDispatch} is dispatched.
</p>
<p>
The detail field of the event contains the type of the following event.
</p>
@since 3.103
",53,-54
"
The PostEvent event type (value is 51).
<p>
This event is sent after an event other than {@link #PreExternalEventDispatch} or
{@link #PostExternalEventDispatch} is dispatched.
</p>
<p>
The detail field of the event contains the type of the prior event.
</p>
@since 3.103
",54,-55
"
The PreExternalEventDispatch event type (value is 52).
<p>
This event is sent before calling a blocking method that does its own event dispatch outside
of the SWT code.
</p>
@since 3.104
",55,-56
"
The PostExternalEventDispatch event type (value is 53).
<p>
This event is sent after calling a blocking method that does its own event dispatch outside
of the SWT code.
</p>
@since 3.104
",56,-57
"
@deprecated The same as PreExternalEventDispatch (value is 52).
@since 3.103
",57,-58
"
@deprecated The same as PostExternalEventDispatch (value is 53).
@since 3.103
",58,-59
"
The open URL event type (value is 54).
<p>
This event is sent when SWT receives notification that a URL
should be opened.
</p>
@see org.eclipse.swt.widgets.Display#addListener
@see org.eclipse.swt.widgets.Event
@since 3.107
",59,-60
"
The SWT zoom change event type (value is 55).
<p>
This event is sent on <code>Shell</code> when the SWT zoom has changed. The SWT
zoom changes when the operating system DPI or scale factor changes dynamically.
</p>
<p>
Note that this is a <em>HINT</em> and is not sent on platforms that do not
support dynamic DPI changes. This event is currently sent on Windows 10 and GTK
only.
</p>
@see org.eclipse.swt.widgets.Widget#addListener
@see org.eclipse.swt.widgets.Display#addFilter
@see org.eclipse.swt.widgets.Event
@since 3.108
",60,-61
"
The IME composition event detail that indicates
a change in the IME composition. The text field
of the event is the new composition text.
The start and end indicate the offsets where the
composition text should be inserted.
The styles and ranges are stored in the IME
object (value is 1).
@see SWT#ImeComposition
@since 3.4
",61,-62
"
The IME composition event detail that indicates
that the IME needs the offset for a given location.
The x and y fields of the event are used by the
application to determine the offset.
The index field of the event should be set to the
text offset at that location. The count field should
be set to indicate whether the location is closer to
the leading edge (0) or the trailing edge (1) (value is 2).
@see SWT#ImeComposition
@see org.eclipse.swt.graphics.TextLayout#getOffset(int, int, int[])
@since 3.4
",62,-63
"
The IME composition event detail that indicates
that IME needs the selected text and its start
and end offsets (value is 3).
@see SWT#ImeComposition
@since 3.4
",63,-64
"
Indicates that a user-interface component is being dragged,
for example dragging the thumb of a scroll bar (value is 1).
",64,-65
"
Event detail field that indicates a user-interface component
state is selected (value is 1&lt;&lt;1).
@since 3.2
",65,-66
"
Event detail field that indicates a user-interface component
state is focused (value is 1&lt;&lt;2).
@since 3.2
",66,-67
"
Event detail field that indicates a user-interface component
draws the background (value is 1&lt;&lt;3).
@since 3.2
",67,-68
"
Event detail field that indicates a user-interface component
draws the foreground (value is 1&lt;&lt;4).
@since 3.2
",68,-69
"
Event detail field that indicates a user-interface component
state is hot (value is 1&lt;&lt;5).
@since 3.3
",69,-70
"
Traversal event detail field value indicating that no
traversal action should be taken
(value is 0).
",70,-71
"
Traversal event detail field value indicating that the
key which designates that a dialog should be cancelled was
pressed; typically, this is the ESC key
(value is 1&lt;&lt;1).
",71,-72
"
Traversal event detail field value indicating that the
key which activates the default button in a dialog was
pressed; typically, this is the ENTER key
(value is 1&lt;&lt;2).
",72,-73
"
Traversal event detail field value indicating that the
key which designates that focus should be given to the
previous tab group was pressed; typically, this is the
SHIFT-TAB key sequence
(value is 1&lt;&lt;3).
",73,-74
"
Traversal event detail field value indicating that the
key which designates that focus should be given to the
next tab group was pressed; typically, this is the
TAB key
(value is 1&lt;&lt;4).
",74,-75
"
Traversal event detail field value indicating that the
key which designates that focus should be given to the
previous tab item was pressed; typically, this is either
the LEFT-ARROW or UP-ARROW keys
(value is 1&lt;&lt;5).
",75,-76
"
Traversal event detail field value indicating that the
key which designates that focus should be given to the
previous tab item was pressed; typically, this is either
the RIGHT-ARROW or DOWN-ARROW keys
(value is 1&lt;&lt;6).
",76,-77
"
Traversal event detail field value indicating that a
mnemonic key sequence was pressed
(value is 1&lt;&lt;7).
",77,-78
"
Traversal event detail field value indicating that the
key which designates that the previous page of a multi-page
window should be shown was pressed; typically, this
is the CTRL-PAGEUP key sequence
(value is 1&lt;&lt;8).
",78,-79
"
Traversal event detail field value indicating that the
key which designates that the next page of a multi-page
window should be shown was pressed; typically, this
is the CTRL-PAGEDOWN key sequence
(value is 1&lt;&lt;9).
",79,-80
"
Gesture event detail field value indicating that a continuous
gesture is about to begin.
@since 3.7
",80,-81
"
Gesture event detail field value indicating that a continuous
gesture has ended.
@since 3.7
",81,-82
"
Gesture event detail field value indicating that a
rotation gesture has happened. Only the rotation field
of the event is valid.
@since 3.7
",82,-83
"
Gesture event detail field value indicating that a
swipe gesture has happened.
@since 3.7
",83,-84
"
Gesture event detail field value indicating that a
magnification gesture has happened.
@since 3.7
",84,-85
"
Gesture event detail field value indicating that a
panning (two-finger scroll) gesture has happened.
@since 3.7
",85,-86
"
A constant indicating that a finger touched the device.
@see org.eclipse.swt.widgets.Touch#state
@since 3.7
",86,-87
"
A constant indicating that a finger moved on the device.
@see org.eclipse.swt.widgets.Touch#state
@since 3.7
",87,-88
"
A constant indicating that a finger was lifted from the device.
@see org.eclipse.swt.widgets.Touch#state
@since 3.7
",88,-89
"
MenuDetect event detail value indicating that a context menu
was requested by a mouse or other pointing device (value is 0).
@since 3.8
",89,-90
"
MenuDetect event detail value indicating that a context menu
was requested by a keyboard or other focus-based device (value is 1).
@since 3.8
",90,-91
"
A constant indicating that widgets have changed.
(value is 1&lt;&lt;1).
<p><b>Used By:</b></p>
<ul>
<li><code>Composite</code> layout</li>
</ul>
@see org.eclipse.swt.widgets.Composite#layout(org.eclipse.swt.widgets.Control[], int)
@since 3.6
",91,-92
"
A constant indicating that a given operation should be deferred.
(value is 1&lt;&lt;2).
<p><b>Used By:</b></p>
<ul>
<li><code>Composite</code> layout</li>
</ul>
@see org.eclipse.swt.widgets.Composite#layout(org.eclipse.swt.widgets.Control[], int)
@since 3.6
",92,-93
"
A constant known to be zero (0), typically used in operations
which take bit flags to indicate that ""no bits are set"".
",93,-94
"
A constant known to be zero (0), used in operations which
take pointers to indicate a null argument.
",94,-95
"
Indicates that a default should be used (value is -1).
",95,-96
"
Indicates that a property is off (value is 0).
@since 3.1
",96,-97
"
Indicates that a property is on (value is 1).
@since 3.1
",97,-98
"
Indicates low quality (value is 1).
@since 3.1
",98,-99
"
Indicates high quality (value is 2).
@since 3.1
",99,-100
"
Style constant for menu bar behavior (value is 1&lt;&lt;1).
<p><b>Used By:</b></p>
<ul>
<li><code>Menu</code></li>
</ul>
",100,-101
"
Style constant for drop down menu/list behavior (value is 1&lt;&lt;2).
<p><b>Used By:</b></p>
<ul>
<li><code>Menu</code></li>
<li><code>ToolItem</code></li>
<li><code>CoolItem</code></li>
<li><code>Combo</code></li>
<li><code>DateTime</code></li>
</ul>
",101,-102
"
Style constant for pop up menu behavior (value is 1&lt;&lt;3).
<p><b>Used By:</b></p>
<ul>
<li><code>Menu</code></li>
</ul>
",102,-103
"
Style constant for line separator behavior (value is 1&lt;&lt;1).
<p><b>Used By:</b></p>
<ul>
<li><code>Label</code></li>
<li><code>MenuItem</code></li>
<li><code>ToolItem</code></li>
</ul>
",103,-104
"
Constant representing a flexible space separator in a ToolBar.
<p><b>Used By:</b></p>
<ul>
<li><code>ToolItem.setWidth()</code></li>
</ul>
@since 3.7
",104,-105
"
Style constant for toggle button behavior (value is 1&lt;&lt;1).
<p><b>Used By:</b></p>
<ul>
<li><code>Button</code></li>
</ul>
",105,-106
"
Style constant for arrow button behavior (value is 1&lt;&lt;2).
<p><b>Used By:</b></p>
<ul>
<li><code>Button</code></li>
</ul>
",106,-107
"
Style constant for push button behavior (value is 1&lt;&lt;3).
<p><b>Used By:</b></p>
<ul>
<li><code>Button</code></li>
<li><code>MenuItem</code></li>
<li><code>ToolItem</code></li>
</ul>
",107,-108
"
Style constant for radio button behavior (value is 1&lt;&lt;4).
<p><b>Used By:</b></p>
<ul>
<li><code>Button</code></li>
<li><code>MenuItem</code></li>
<li><code>ToolItem</code></li>
</ul>
",108,-109
"
Style constant for check box behavior (value is 1&lt;&lt;5).
<p><b>Used By:</b></p>
<ul>
<li><code>Button</code></li>
<li><code>MenuItem</code></li>
<li><code>ToolItem</code></li>
<li><code>Table</code></li>
<li><code>Tree</code></li>
</ul>
",109,-110
"
Style constant for cascade behavior (value is 1&lt;&lt;6).
<p><b>Used By:</b></p>
<ul>
<li><code>MenuItem</code></li>
</ul>
",110,-111
"
Style constant for multi-selection behavior in lists
and multiple line support on text fields (value is 1&lt;&lt;1).
<p><b>Used By:</b></p>
<ul>
<li><code>Text</code></li>
<li><code>List</code></li>
<li><code>Table</code></li>
<li><code>Tree</code></li>
<li><code>FileDialog</code></li>
</ul>
",111,-112
"
Style constant for single selection behavior in lists
and single line support on text fields (value is 1&lt;&lt;2).
<p><b>Used By:</b></p>
<ul>
<li><code>Text</code></li>
<li><code>List</code></li>
<li><code>Table</code></li>
<li><code>Tree</code></li>
</ul>
",112,-113
"
Style constant for read-only behavior (value is 1&lt;&lt;3).
<p><b>Used By:</b></p>
<ul>
<li><code>Combo</code></li>
<li><code>Text</code></li>
</ul>
",113,-114
"
Style constant for automatic line wrap behavior (value is 1&lt;&lt;6).
<p><b>Used By:</b></p>
<ul>
<li><code>Button</code></li>
<li><code>Label</code></li>
<li><code>Text</code></li>
<li><code>ToolBar</code></li>
<li><code>Spinner</code></li>
</ul>
",114,-115
"
Style constant for search behavior (value is 1&lt;&lt;7).
<p><b>Used By:</b></p>
<ul>
<li><code>Text</code></li>
</ul>
@since 3.3
",115,-116
"
Style constant for simple (not drop down) behavior (value is 1&lt;&lt;6).
<br>Note that this is a <em>HINT</em>.
<p><b>Used By:</b></p>
<ul>
<li><code>Combo</code></li>
</ul>
",116,-117
"
Style constant for password behavior (value is 1&lt;&lt;22).
<p><b>Used By:</b></p>
<ul>
<li><code>Text</code></li>
</ul>
@since 3.0
",117,-118
"
Style constant for shadow in behavior (value is 1&lt;&lt;2).
<br>Note that this is a <em>HINT</em>.
<p><b>Used By:</b></p>
<ul>
<li><code>Label</code></li>
<li><code>Group</code></li>
</ul>
",118,-119
"
Style constant for shadow out behavior (value is 1&lt;&lt;3).
<br>Note that this is a <em>HINT</em>.
<p><b>Used By:</b></p>
<ul>
<li><code>Label</code></li>
<li><code>Group</code></li>
<li><code>ToolBar</code></li>
</ul>
",119,-120
"
Style constant for shadow etched in behavior (value is 1&lt;&lt;4).
<br>Note that this is a <em>HINT</em>. It is currently ignored on all platforms.
<p><b>Used By:</b></p>
<ul>
<li><code>Group</code></li>
</ul>
",120,-121
"
Style constant for shadow etched out behavior (value is 1&lt;&lt;6).
<br>Note that this is a <em>HINT</em>. It is currently ignored on all platforms.
<p><b>Used By:</b></p>
<ul>
<li><code>Group</code></li>
</ul>
",121,-122
"
Style constant for no shadow behavior (value is 1&lt;&lt;5).
<br>Note that this is a <em>HINT</em>.
<p><b>Used By:</b></p>
<ul>
<li><code>Label</code></li>
<li><code>Group</code></li>
</ul>
",122,-123
"
Style constant for progress bar behavior (value is 1&lt;&lt;1).
<p><b>Used By:</b></p>
<ul>
<li><code>ProgressBar</code></li>
</ul>
",123,-124
"
Style constant for tool window behavior (value is 1&lt;&lt;2).
<p>
A tool window is a window intended to be used as a floating toolbar.
It typically has a title bar that is shorter than a normal title bar,
and the window title is typically drawn using a smaller font.
<br>Note that this is a <em>HINT</em>.
</p><p><b>Used By:</b></p>
<ul>
<li><code>Decorations</code> and subclasses</li>
</ul>
",124,-125
"
Style constant to ensure no trimmings are used (value is 1&lt;&lt;3).
<br>Note that this overrides all other trim styles.
<p><b>Used By:</b></p>
<ul>
<li><code>Decorations</code> and subclasses</li>
</ul>
",125,-126
"
Style constant for resize box trim (value is 1&lt;&lt;4).
<p><b>Used By:</b></p>
<ul>
<li><code>Decorations</code> and subclasses</li>
<li><code>Tracker</code></li>
</ul>
",126,-127
"
Style constant for title area trim (value is 1&lt;&lt;5).
<p><b>Used By:</b></p>
<ul>
<li><code>Decorations</code> and subclasses</li>
</ul>
",127,-128
"
Style constant for close box trim (value is 1&lt;&lt;6,
since we do not distinguish between CLOSE style and MENU style).
<p><b>Used By:</b></p>
<ul>
<li><code>Decorations</code> and subclasses</li>
</ul>
",128,-129
"
Style constant for shell menu trim (value is 1&lt;&lt;6,
since we do not distinguish between CLOSE style and MENU style).
<p><b>Used By:</b></p>
<ul>
<li><code>Decorations</code> and subclasses</li>
</ul>
",129,-130
"
Style constant for minimize box trim (value is 1&lt;&lt;7).
<p><b>Used By:</b></p>
<ul>
<li><code>Decorations</code> and subclasses</li>
</ul>
",130,-131
"
Style constant for maximize box trim (value is 1&lt;&lt;10).
<p><b>Used By:</b></p>
<ul>
<li><code>Decorations</code> and subclasses</li>
</ul>
",131,-132
"
Style constant for the no move behavior (value is 1&lt;&lt;23).
Creates the title trim when no other trim style is specified.
Doesn't create the title trim when NO_TRIM is specified.
<p>Note that this is a <em>HINT</em>.
<p><b>Used By:</b></p>
<ul>
<li><code>Shell</code></li>
</ul>
@since 3.105
",132,-133
"
Style constant for horizontal scrollbar behavior (value is 1&lt;&lt;8).
<p><b>Used By:</b></p>
<ul>
<li><code>Scrollable</code> and subclasses</li>
</ul>
",133,-134
"
Style constant for vertical scrollbar behavior (value is 1&lt;&lt;9).
<p><b>Used By:</b></p>
<ul>
<li><code>Scrollable</code> and subclasses</li>
</ul>
",134,-135
"
Style constant for no scrollbar behavior (value is 1&lt;&lt;4).
<p>
When neither H_SCROLL or V_SCROLL are specified, controls
are free to create the default scroll bars for the control.
Using NO_SCROLL overrides the default and forces the control
to have no scroll bars.
<b>Used By:</b></p>
<ul>
<li><code>Tree</code></li>
<li><code>Table</code></li>
</ul>
@since 3.4
",135,-136
"
Style constant for bordered behavior (value is 1&lt;&lt;11).
<br>Note that this is a <em>HINT</em>.
<p><b>Used By:</b></p>
<ul>
<li><code>Control</code> and subclasses</li>
</ul>
",136,-137
"
Style constant indicating that the window manager should clip
a widget's children with respect to its viewable area. (value is 1&lt;&lt;12).
<br>Note that this is a <em>HINT</em>.
<p><b>Used By:</b></p>
<ul>
<li><code>Control</code> and subclasses</li>
</ul>
",137,-138
"
Style constant indicating that the window manager should clip
a widget's siblings with respect to its viewable area. (value is 1&lt;&lt;13).
<br>Note that this is a <em>HINT</em>.
<p><b>Used By:</b></p>
<ul>
<li><code>Control</code> and subclasses</li>
</ul>
",138,-139
"
Style constant for always on top behavior (value is 1&lt;&lt;14).
<br>Note that this is a <em>HINT</em>.
<p><b>Used By:</b></p>
<ul>
<li><code>Shell</code> and subclasses</li>
</ul>
",139,-140
"
Style constant for sheet window behavior (value is 1&lt;&lt;28).
<p>
A sheet window is a window intended to be used as a temporary modal
dialog that is attached to a parent window. It is typically used to
prompt the user before proceeding. The window trim, positioning and
general look of a sheet window is platform specific. For example,
on the Macintosh, at the time this documentation was written, the
window title is not visible.
<br>Note that this is a <em>HINT</em>.
</p><p><b>Used By:</b></p>
<ul>
<li><code>Dialog</code> and subclasses</li>
<li><code>Shell</code> and subclasses</li>
</ul>
@since 3.5
",140,-141
"
Trim style convenience constant for the most common top level shell appearance
(value is CLOSE|TITLE|MIN|MAX|RESIZE).
<p><b>Used By:</b></p>
<ul>
<li><code>Shell</code></li>
</ul>
",141,-142
"
Trim style convenience constant for the most common dialog shell appearance
(value is CLOSE|TITLE|BORDER).
<p><b>Used By:</b></p>
<ul>
<li><code>Shell</code></li>
</ul>
",142,-143
"
Style constant for modeless behavior (value is 0).
<br>Note that this is a <em>HINT</em>.
<p><b>Used By:</b></p>
<ul>
<li><code>Dialog</code></li>
<li><code>Shell</code></li>
</ul>
",143,-144
"
Style constant for primary modal behavior (value is 1&lt;&lt;15).
<br>Note that this is a <em>HINT</em>.
<p><b>Used By:</b></p>
<ul>
<li><code>Dialog</code></li>
<li><code>Shell</code></li>
</ul>
",144,-145
"
Style constant for application modal behavior (value is 1&lt;&lt;16).
<br>Note that this is a <em>HINT</em>.
<p><b>Used By:</b></p>
<ul>
<li><code>Dialog</code></li>
<li><code>Shell</code></li>
</ul>
",145,-146
"
Style constant for system modal behavior (value is 1&lt;&lt;17).
<br>Note that this is a <em>HINT</em>.
<p><b>Used By:</b></p>
<ul>
<li><code>Dialog</code></li>
<li><code>Shell</code></li>
</ul>
",146,-147
"
Style constant for selection hiding behavior when the widget loses focus (value is 1&lt;&lt;15).
<br>Note that this is a <em>HINT</em>.
<p><b>Used By:</b></p>
<ul>
<li><code>Table</code></li>
</ul>
",147,-148
"
Style constant for full row selection behavior and
selection constant indicating that a full line should be
drawn. (value is 1&lt;&lt;16).
<br>Note that for some widgets this is a <em>HINT</em>.
<p><b>Used By:</b></p>
<ul>
<li><code>Table</code></li>
<li><code>Tree</code></li>
<li><code>StyledText</code></li>
<li><code>TextLayout</code></li>
</ul>
",148,-149
"
Style constant for flat appearance. (value is 1&lt;&lt;23).
<br>Note that this is a <em>HINT</em>.
<p><b>Used By:</b></p>
<ul>
<li><code>Button</code></li>
<li><code>ToolBar</code></li>
</ul>
",149,-150
"
Style constant for smooth appearance. (value is 1&lt;&lt;16).
<br>Note that this is a <em>HINT</em>.
<p><b>Used By:</b></p><ul>
<li><code>ProgressBar</code></li>
<li><code>Sash</code></li>
</ul>
",150,-151
"
Style constant for no background behavior (value is 1&lt;&lt;18).
<p>
By default, before a widget paints, the client area is filled with the current background.
When this style is specified, the background is not filled, and the application is responsible
for filling every pixel of the client area.
This style might be used as an alternative to ""double-buffering"" in order to reduce flicker.
This style does not mean ""transparent"" - widgets that are obscured will not draw through.
</p><p><b>Used By:</b></p>
<ul>
<li><code>Composite</code></li>
</ul>
",151,-152
"
Style constant for no focus from the mouse behavior (value is 1&lt;&lt;19).
<p>
Normally, when the user clicks on a control, focus is assigned to that
control, providing the control has no children.  Some controls, such as
tool bars and sashes, don't normally take focus when the mouse is clicked
or accept focus when assigned from within the program.  This style allows
Composites to implement ""no focus"" mouse behavior.
<br>Note that this is a <em>HINT</em>.
</p>
<p><b>Used By:</b></p>
<ul>
<li><code>Composite</code></li>
</ul>
",152,-153
"
Style constant for no redraw on resize behavior (value is 1&lt;&lt;20).
<p>
This style stops the entire client area from being invalidated when the size
of the Canvas changes. Specifically, when the size of the Canvas gets smaller,
the SWT.Paint event is not sent. When it gets bigger, an SWT.Paint event is
sent with a GC clipped to only the new areas to be painted. Without this
style, the entire client area will be repainted.
<br>Note that this is a <em>HINT</em>.
</p><p><b>Used By:</b></p>
<ul>
<li><code>Composite</code></li>
</ul>
",153,-154
"
Style constant for no paint event merging behavior (value is 1&lt;&lt;21).
<br>Note that this is a <em>HINT</em>.
<p><b>Used By:</b></p>
<ul>
<li><code>Composite</code></li>
</ul>
",154,-155
"
Style constant for preventing child radio group behavior (value is 1&lt;&lt;22).
<p><b>Used By:</b></p>
<ul>
<li><code>Composite</code></li>
<li><code>Menu</code></li>
</ul>
",155,-156
"
Style constant for left to right orientation (value is 1&lt;&lt;25).
<p>
When orientation is not explicitly specified, orientation is
inherited.  This means that children will be assigned the
orientation of their parent.  To override this behavior and
force an orientation for a child, explicitly set the orientation
of the child when that child is created.
<br>Note that this is a <em>HINT</em>.
</p>
<p><b>Used By:</b></p>
<ul>
<li><code>Control</code></li>
<li><code>Menu</code></li>
<li><code>GC</code></li>
</ul>
@since 2.1.2
",156,-157
"
Style constant for right to left orientation (value is 1&lt;&lt;26).
<p>
When orientation is not explicitly specified, orientation is
inherited.  This means that children will be assigned the
orientation of their parent.  To override this behavior and
force an orientation for a child, explicitly set the orientation
of the child when that child is created.
<br>Note that this is a <em>HINT</em>.
</p>
<p><b>Used By:</b></p>
<ul>
<li><code>Control</code></li>
<li><code>Menu</code></li>
<li><code>GC</code></li>
</ul>
@since 2.1.2
",157,-158
"
Style constant to indicate coordinate mirroring (value is 1&lt;&lt;27).
<p><b>Used By:</b></p>
<ul>
<li><code>Control</code></li>
<li><code>Menu</code></li>
</ul>
@since 2.1.2
",158,-159
"
Style constant to allow embedding (value is 1&lt;&lt;24).
<p><b>Used By:</b></p>
<ul>
<li><code>Composite</code></li>
</ul>
@since 3.0
",159,-160
"
Style constant to allow virtual data (value is 1&lt;&lt;28).
<p><b>Used By:</b></p>
<ul>
<li><code>Table</code></li>
<li><code>Tree</code></li>
</ul>
@since 3.0
",160,-161
"
Style constant to indicate double buffering (value is 1&lt;&lt;29).
<p><b>Used By:</b></p>
<ul>
<li><code>Control</code></li>
</ul>
@since 3.1
",161,-162
"
Style constant for transparent behavior (value is 1&lt;&lt;30).
<p>
By default, before a widget paints, the client area is filled with the current background.
When this style is specified, the background is not filled and widgets that are obscured
will draw through.
</p><p><b>Used By:</b></p>
<ul>
<li><code>Composite</code></li>
</ul>
@since 3.4
WARNING: THIS API IS UNDER CONSTRUCTION AND SHOULD NOT BE USED
",162,-163
"
Style constant to indicate base text direction (value is 1&lt;&lt;31).
<p>
When the bit is set, text direction mismatches the widget orientation.
<br>Note that this is a <em>HINT</em>.
</p>
<p><b>Used By:</b></p>
<ul>
<li><code>Control</code></li>
</ul>
@see org.eclipse.swt.widgets.Control#setTextDirection(int)
@see org.eclipse.swt.widgets.Control#getTextDirection()
@since 3.102
",163,-164
"
A bit mask to indicate Bidi ""auto"" text direction.
<p>
When the bit is set, text direction is derived from the direction of the
first strong Bidi character.
</p>
<br>Note that this is a <em>HINT</em> and it works on Windows only.
<p><b>Used By:</b></p>
<ul>
<li><code>Control</code></li>
<li><code>TextLayout</code></li>
</ul>
@see org.eclipse.swt.widgets.Control#setTextDirection(int)
@see org.eclipse.swt.graphics.TextLayout#setTextDirection(int)
@since 3.105
",164,-165
"
Style constant for align up behavior (value is 1&lt;&lt;7,
since align UP and align TOP are considered the same).
<p><b>Used By:</b></p>
<ul>
<li><code>Button</code> with <code>ARROW</code> style</li>
<li><code>Tracker</code></li>
<li><code>Table</code></li>
<li><code>Tree</code></li>
</ul>
",165,-166
"
Style constant to indicate single underline (value is 0).
<p><b>Used By:</b></p>
<ul>
<li><code>TextStyle</code></li>
</ul>
@since 3.4
",166,-167
"
Style constant to indicate double underline (value is 1).
<p><b>Used By:</b></p>
<ul>
<li><code>TextStyle</code></li>
</ul>
@since 3.4
",167,-168
"
Style constant to indicate error underline (value is 2).
<p><b>Used By:</b></p>
<ul>
<li><code>TextStyle</code></li>
</ul>
@since 3.4
",168,-169
"
Style constant to indicate squiggle underline (value is 3).
<p><b>Used By:</b></p>
<ul>
<li><code>TextStyle</code></li>
</ul>
@since 3.4
",169,-170
"
Style constant to indicate link underline (value is 0).
<p>
If the text color or the underline color are not set in the range
the usage of <code>UNDERLINE_LINK</code> will change these colors
to the preferred link color of the platform.<br>
Note that clients that use this style, such as <code>StyledText</code>,
will include code to track the mouse and change the cursor to the hand
cursor when mouse is over the link.
</p>
<p><b>Used By:</b></p>
<ul>
<li><code>TextStyle</code></li>
</ul>
@since 3.5
",170,-171
"
Style constant to indicate solid border (value is 1).
<p><b>Used By:</b></p>
<ul>
<li><code>TextStyle</code></li>
</ul>
@since 3.4
",171,-172
"
Style constant to indicate dashed border (value is 2).
<p><b>Used By:</b></p>
<ul>
<li><code>TextStyle</code></li>
</ul>
@since 3.4
",172,-173
"
Style constant to indicate dotted border (value is 4).
<p><b>Used By:</b></p>
<ul>
<li><code>TextStyle</code></li>
</ul>
@since 3.4
",173,-174
"
Style constant for align top behavior (value is 1&lt;&lt;7,
since align UP and align TOP are considered the same).
<p><b>Used By:</b></p>
<ul>
<li><code>FormAttachment</code> in a <code>FormLayout</code></li>
</ul>
",174,-175
"
Style constant for align down behavior (value is 1&lt;&lt;10,
since align DOWN and align BOTTOM are considered the same).
<p><b>Used By:</b></p>
<ul>
<li><code>Button</code> with <code>ARROW</code> style</li>
<li><code>Tracker</code></li>
<li><code>Table</code></li>
<li><code>Tree</code></li>
</ul>
",175,-176
"
Style constant for align bottom behavior (value is 1&lt;&lt;10,
since align DOWN and align BOTTOM are considered the same).
<p><b>Used By:</b></p>
<ul>
<li><code>FormAttachment</code> in a <code>FormLayout</code></li>
<li><code>TabFolder</code></li>
</ul>
",176,-177
"
Style constant for leading alignment (value is 1&lt;&lt;14).
<p><b>Used By:</b></p>
<ul>
<li><code>Button</code></li>
<li><code>Label</code></li>
<li><code>Text</code></li>
<li><code>TableColumn</code></li>
<li><code>TreeColumn</code></li>
<li><code>Tracker</code></li>
<li><code>FormAttachment</code> in a <code>FormLayout</code></li>
</ul>
@since 2.1.2
",177,-178
"
Style constant for align left behavior (value is 1&lt;&lt;14).
This is a synonym for {@link #LEAD} (value is 1&lt;&lt;14).  Newer
applications should use {@link #LEAD} instead of {@link #LEFT} to make code more
understandable on right-to-left platforms.
<p>
This constant can also be used to representing the left keyboard
location during a key event.
</p>
",178,-179
"
Style constant for trailing alignment (value is 1&lt;&lt;17).
<p><b>Used By:</b></p>
<ul>
<li><code>Button</code></li>
<li><code>Label</code></li>
<li><code>Text</code></li>
<li><code>TableColumn</code></li>
<li><code>TreeColumn</code></li>
<li><code>Tracker</code></li>
<li><code>FormAttachment</code> in a <code>FormLayout</code></li>
</ul>
@since 2.1.2
",179,-180
"
Style constant for align right behavior (value is 1&lt;&lt;17).
This is a synonym for {@link #TRAIL} (value is 1&lt;&lt;17).  Newer
applications should use {@link #TRAIL} instead of {@link #RIGHT} to make code more
understandable on right-to-left platforms.
<p>
This constant can also be used to representing the right keyboard
location during a key event.
</p>
",180,-181
"
Style constant for align center behavior (value is 1&lt;&lt;24).
<p><b>Used By:</b></p>
<ul>
<li><code>Button</code></li>
<li><code>Label</code></li>
<li><code>TableColumn</code></li>
<li><code>FormAttachment</code> in a <code>FormLayout</code></li>
</ul>
",181,-182
"
Style constant for horizontal alignment or orientation behavior (value is 1&lt;&lt;8).
<p><b>Used By:</b></p>
<ul>
<li><code>Label</code></li>
<li><code>ProgressBar</code></li>
<li><code>Sash</code></li>
<li><code>Scale</code></li>
<li><code>ScrollBar</code></li>
<li><code>Slider</code></li>
<li><code>ToolBar</code></li>
<li><code>FillLayout</code> type</li>
<li><code>RowLayout</code> type</li>
</ul>
",182,-183
"
Style constant for vertical alignment or orientation behavior (value is 1&lt;&lt;9).
<p><b>Used By:</b></p>
<ul>
<li><code>Label</code></li>
<li><code>ProgressBar</code></li>
<li><code>Sash</code></li>
<li><code>Scale</code></li>
<li><code>ScrollBar</code></li>
<li><code>Slider</code></li>
<li><code>ToolBar</code></li>
<li><code>CoolBar</code></li>
<li><code>FillLayout</code> type</li>
<li><code>RowLayout</code> type</li>
</ul>
",183,-184
"
Style constant for date display (value is 1&lt;&lt;5).
<p><b>Used By:</b></p>
<ul>
<li><code>DateTime</code></li>
</ul>
@since 3.3
",184,-185
"
Style constant for time display (value is 1&lt;&lt;7).
<p><b>Used By:</b></p>
<ul>
<li><code>DateTime</code></li>
</ul>
@since 3.3
",185,-186
"
Style constant for calendar display (value is 1&lt;&lt;10).
<p><b>Used By:</b></p>
<ul>
<li><code>DateTime</code></li>
</ul>
@since 3.3
",186,-187
"
Style constant for displaying week numbers in the calendar.
<br>Note that this is a <em>HINT</em> and is supported on Windows &amp; GTK platforms only.
<p><b>Used By:</b></p>
<ul>
<li><code>DateTime</code></li>
</ul>
@since 3.108
",187,-188
"
Style constant for short date/time format (value is 1&lt;&lt;15).
<p>
A short date displays the month and year.
A short time displays hours and minutes.
<br>Note that this is a <em>HINT</em>.
</p>
<p><b>Used By:</b></p>
<ul>
<li><code>DateTime</code></li>
</ul>
@since 3.3
",188,-189
"
Style constant for medium date/time format (value is 1&lt;&lt;16).
<p>
A medium date displays the day, month and year.
A medium time displays hours, minutes, and seconds.
<br>Note that this is a <em>HINT</em>.
</p>
<p><b>Used By:</b></p>
<ul>
<li><code>DateTime</code></li>
</ul>
@since 3.3
",189,-190
"
Style constant for long date/time format (value is 1&lt;&lt;28).
<p>
A long date displays the day, month and year.
A long time displays hours, minutes, and seconds.
The day and month names may be displayed.
<br>Note that this is a <em>HINT</em>.
</p>
<p><b>Used By:</b></p>
<ul>
<li><code>DateTime</code></li>
</ul>
@since 3.3
",190,-191
"
Style constant specifying that a Browser should use a Mozilla GRE
for rendering its content (value is 1&lt;&lt;15).
<p><b>Used By:</b></p>
<ul>
<li><code>Browser</code></li>
</ul>
@since 3.3
@deprecated This style is deprecated and will be removed in the future.
XULRunner as a browser renderer is no longer supported. Use
<code>SWT.WEBKIT</code> or <code>SWT.NONE</code> instead.
",191,-192
"
Style constant specifying that a Browser should use WebKit
for rendering its content (value is 1&lt;&lt;16).
<p><b>Used By:</b></p>
<ul>
<li><code>Browser</code></li>
</ul>
@since 3.7
",192,-193
"
Style constant for balloon behavior (value is 1&lt;&lt;12).
<p><b>Used By:</b></p>
<ul>
<li><code>ToolTip</code></li>
</ul>
@since 3.2
",193,-194
"
Style constant for alignment or orientation behavior (value is 1).
<p><b>Used By:</b></p>
<ul>
<li><code>GridLayout</code> type</li>
</ul>
",194,-195
"
Style constant for alignment or orientation behavior (value is 4).
<p><b>Used By:</b></p>
<ul>
<li><code>GridLayout</code> type</li>
</ul>
",195,-196
"
Input Method Editor style constant for double byte
input behavior (value is 1&lt;&lt;1).
",196,-197
"
Input Method Editor style constant for alpha
input behavior (value is 1&lt;&lt;2).
",197,-198
"
Input Method Editor style constant for native
input behavior (value is 1&lt;&lt;3).
",198,-199
"
Input Method Editor style constant for phonetic
input behavior (value is 1&lt;&lt;4).
",199,-200
"
Input Method Editor style constant for romanicized
input behavior (value is 1&lt;&lt;5).
",200,-201
"
ASCII character convenience constant for the backspace character
(value is the <code>char</code> '\b').
",201,-202
"
ASCII character convenience constant for the carriage return character
(value is the <code>char</code> '\r').
",202,-203
"
ASCII character convenience constant for the delete character
(value is the <code>char</code> with value 127).
",203,-204
"
ASCII character convenience constant for the escape character
(value is the <code>char</code> with value 27).
",204,-205
"
ASCII character convenience constant for the line feed character
(value is the <code>char</code> '\n').
",205,-206
"
ASCII character convenience constant for the tab character
(value is the <code>char</code> '\t').
@since 2.1
",206,-207
"
ASCII character convenience constant for the space character
(value is the <code>char</code> ' ').
@since 3.7
",207,-208
"
Keyboard and/or mouse event mask indicating that the ALT_GR key
was pushed on the keyboard when the event was generated
(value is 1 &lt;&lt; 15).
@since 3.108
",208,-209
"
keyboard and/or mouse event mask indicating that the ALT key
was pushed on the keyboard when the event was generated
(value is 1&lt;&lt;16).
",209,-210
"
Keyboard and/or mouse event mask indicating that the SHIFT key
was pushed on the keyboard when the event was generated
(value is 1&lt;&lt;17).
",210,-211
"
Keyboard and/or mouse event mask indicating that the CTRL key
was pushed on the keyboard when the event was generated
(value is 1&lt;&lt;18).
",211,-212
"
Keyboard and/or mouse event mask indicating that the CTRL key
was pushed on the keyboard when the event was generated. This
is a synonym for CTRL (value is 1&lt;&lt;18).
",212,-213
"
Keyboard and/or mouse event mask indicating that the COMMAND key
was pushed on the keyboard when the event was generated
(value is 1&lt;&lt;22).
@since 2.1
",213,-214
"
Keyboard and/or mouse event mask indicating all possible
keyboard modifiers.
To allow for the future, this mask  is intended to be used in
place of code that references  each individual keyboard mask.
For example, the following expression will determine whether
any modifier is pressed and will continue to work as new modifier
masks are added.
<code>(stateMask &amp; SWT.MODIFIER_MASK) != 0</code>.
@since 2.1
",214,-215
"
Keyboard and/or mouse event mask indicating that mouse button one (usually 'left')
was pushed when the event was generated. (value is 1&lt;&lt;19).
",215,-216
"
Keyboard and/or mouse event mask indicating that mouse button two (usually 'middle')
was pushed when the event was generated. (value is 1&lt;&lt;20).
",216,-217
"
Keyboard and/or mouse event mask indicating that mouse button three (usually 'right')
was pushed when the event was generated. (value is 1&lt;&lt;21).
",217,-218
"
Keyboard and/or mouse event mask indicating that mouse button four
was pushed when the event was generated. (value is 1&lt;&lt;23).
@since 3.1
",218,-219
"
Keyboard and/or mouse event mask indicating that mouse button five
was pushed when the event was generated. (value is 1&lt;&lt;25).
@since 3.1
",219,-220
"
Keyboard and/or mouse event mask indicating all possible
mouse buttons.
To allow for the future, this mask  is intended to be used
in place of code that references each individual button mask.
For example, the following expression will determine whether
any button is pressed and will continue to work as new button
masks are added.
<code>(stateMask &amp; SWT.BUTTON_MASK) != 0</code>.
@since 2.1
",220,-221
"
Keyboard and/or mouse event mask indicating that the MOD1 key
was pushed on the keyboard when the event was generated.
This is the primary keyboard modifier for the platform.
<p>
{@link #CTRL} on most platforms ({@link #COMMAND} on the Mac).
</p>
@since 2.1
",221,-222
"
Keyboard and/or mouse event mask indicating that the MOD2 key
was pushed on the keyboard when the event was generated.
This is the secondary keyboard modifier for the platform.
<p>
{@link #SHIFT} on most platforms.
</p>
@since 2.1
",222,-223
"
Keyboard and/or mouse event mask indicating that the MOD3 key
was pushed on the keyboard when the event was generated.
<p>
{@link #ALT} on most platforms.
</p>
@since 2.1
",223,-224
"
Keyboard and/or mouse event mask indicating that the MOD4 key
was pushed on the keyboard when the event was generated.
<p>
Undefined on most platforms ({@link #CTRL} on the Mac).
</p>
@since 2.1
",224,-225
"
Constants to indicate line scrolling (value is 1).
<p><b>Used By:</b></p>
<ul>
<li><code>Control</code></li>
</ul>
@since 3.1
",225,-226
"
Constants to indicate page scrolling (value is 2).
<p><b>Used By:</b></p>
<ul>
<li><code>Control</code></li>
</ul>
@since 3.1
",226,-227
"
Accelerator constant used to differentiate a key code from a
unicode character.
If this bit is set, then the key stroke
portion of an accelerator represents a key code.  If this bit
is not set, then the key stroke portion of an accelerator is
a unicode character.
The following expression is false:
<code>((SWT.MOD1 | SWT.MOD2 | 'T') &amp; SWT.KEYCODE_BIT) != 0</code>.
The following expression is true:
<code>((SWT.MOD3 | SWT.F2) &amp; SWT.KEYCODE_BIT) != 0</code>.
(value is (1&lt;&lt;24))
@since 2.1
",227,-228
"
Accelerator constant used to extract the key stroke portion of
an accelerator.
The key stroke may be a key code or a unicode
value.  If the key stroke is a key code <code>KEYCODE_BIT</code>
will be set.
@since 2.1
",228,-229
"
Keyboard event constant representing the UP ARROW key
(value is (1&lt;&lt;24)+1).
",229,-230
"
Keyboard event constant representing the DOWN ARROW key
(value is (1&lt;&lt;24)+2).
",230,-231
"
Keyboard event constant representing the LEFT ARROW key
(value is (1&lt;&lt;24)+3).
",231,-232
"
Keyboard event constant representing the RIGHT ARROW key
(value is (1&lt;&lt;24)+4).
",232,-233
"
Keyboard event constant representing the PAGE UP key
(value is (1&lt;&lt;24)+5).
",233,-234
"
Keyboard event constant representing the PAGE DOWN key
(value is (1&lt;&lt;24)+6).
",234,-235
"
Keyboard event constant representing the HOME key
(value is (1&lt;&lt;24)+7).
",235,-236
"
Keyboard event constant representing the END key
(value is (1&lt;&lt;24)+8).
<p>
Additional this constant is used by GridLayout for alignments.
</p>
",236,-237
"
Keyboard event constant representing the INSERT key
(value is (1&lt;&lt;24)+9).
",237,-238
"
Keyboard event constant representing the F1 key
(value is (1&lt;&lt;24)+10).
",238,-239
"
Keyboard event constant representing the F2 key
(value is (1&lt;&lt;24)+11).
",239,-240
"
Keyboard event constant representing the F3 key
(value is (1&lt;&lt;24)+12).
",240,-241
"
Keyboard event constant representing the F4 key
(value is (1&lt;&lt;24)+13).
",241,-242
"
Keyboard event constant representing the F5 key
(value is (1&lt;&lt;24)+14).
",242,-243
"
Keyboard event constant representing the F6 key
(value is (1&lt;&lt;24)+15).
",243,-244
"
Keyboard event constant representing the F7 key
(value is (1&lt;&lt;24)+16).
",244,-245
"
Keyboard event constant representing the F8 key
(value is (1&lt;&lt;24)+17).
",245,-246
"
Keyboard event constant representing the F9 key
(value is (1&lt;&lt;24)+18).
",246,-247
"
Keyboard event constant representing the F10 key
(value is (1&lt;&lt;24)+19).
",247,-248
"
Keyboard event constant representing the F11 key
(value is (1&lt;&lt;24)+20).
",248,-249
"
Keyboard event constant representing the F12 key
(value is (1&lt;&lt;24)+21).
",249,-250
"
Keyboard event constant representing the F13 key
(value is (1&lt;&lt;24)+22).
@since 3.0
",250,-251
"
Keyboard event constant representing the F14 key
(value is (1&lt;&lt;24)+23).
@since 3.0
",251,-252
"
Keyboard event constant representing the F15 key
(value is (1&lt;&lt;24)+24).
@since 3.0
",252,-253
"
Keyboard event constant representing the F16 key
(value is (1&lt;&lt;25)+25).
@since 3.6
",253,-254
"
Keyboard event constant representing the F17 key
(value is (1&lt;&lt;26)+26).
@since 3.6
",254,-255
"
Keyboard event constant representing the F18 key
(value is (1&lt;&lt;27)+27).
@since 3.6
",255,-256
"
Keyboard event constant representing the F19 key
(value is (1&lt;&lt;28)+28).
@since 3.6
",256,-257
"
Keyboard event constant representing the F20 key
(value is (1&lt;&lt;29)+29).
@since 3.6
",257,-258
"
Keyboard event constant representing the keypad location.
(value is 1&lt;&lt;1).
@since 3.6
",258,-259
"
Keyboard event constant representing the numeric key
pad multiply key (value is (1&lt;&lt;24)+42).
@since 3.0
",259,-260
"
Keyboard event constant representing the numeric key
pad add key (value is (1&lt;&lt;24)+43).
@since 3.0
",260,-261
"
Keyboard event constant representing the numeric key
pad subtract key (value is (1&lt;&lt;24)+45).
@since 3.0
",261,-262
"
Keyboard event constant representing the numeric key
pad decimal key (value is (1&lt;&lt;24)+46).
@since 3.0
",262,-263
"
Keyboard event constant representing the numeric key
pad divide key (value is (1&lt;&lt;24)+47).
@since 3.0
",263,-264
"
Keyboard event constant representing the numeric key
pad zero key (value is (1&lt;&lt;24)+48).
@since 3.0
",264,-265
"
Keyboard event constant representing the numeric key
pad one key (value is (1&lt;&lt;24)+49).
@since 3.0
",265,-266
"
Keyboard event constant representing the numeric key
pad two key (value is (1&lt;&lt;24)+50).
@since 3.0
",266,-267
"
Keyboard event constant representing the numeric key
pad three key (value is (1&lt;&lt;24)+51).
@since 3.0
",267,-268
"
Keyboard event constant representing the numeric key
pad four key (value is (1&lt;&lt;24)+52).
@since 3.0
",268,-269
"
Keyboard event constant representing the numeric key
pad five key (value is (1&lt;&lt;24)+53).
@since 3.0
",269,-270
"
Keyboard event constant representing the numeric key
pad six key (value is (1&lt;&lt;24)+54).
@since 3.0
",270,-271
"
Keyboard event constant representing the numeric key
pad seven key (value is (1&lt;&lt;24)+55).
@since 3.0
",271,-272
"
Keyboard event constant representing the numeric key
pad eight key (value is (1&lt;&lt;24)+56).
@since 3.0
",272,-273
"
Keyboard event constant representing the numeric key
pad nine key (value is (1&lt;&lt;24)+57).
@since 3.0
",273,-274
"
Keyboard event constant representing the numeric key
pad equal key (value is (1&lt;&lt;24)+61).
@since 3.0
",274,-275
"
Keyboard event constant representing the numeric key
pad enter key (value is (1&lt;&lt;24)+80).
@since 3.0
",275,-276
"
Keyboard event constant representing the help
key (value is (1&lt;&lt;24)+81).
NOTE: The HELP key maps to the key labeled ""help"",
not ""F1"". If your keyboard does not have a HELP key,
you will never see this key press.  To listen for
help on a control, use SWT.Help.
@since 3.0
@see SWT#Help
",276,-277
"
Keyboard event constant representing the caps
lock key (value is (1&lt;&lt;24)+82).
@since 3.0
",277,-278
"
Keyboard event constant representing the num
lock key (value is (1&lt;&lt;24)+83).
@since 3.0
",278,-279
"
Keyboard event constant representing the scroll
lock key (value is (1&lt;&lt;24)+84).
@since 3.0
",279,-280
"
Keyboard event constant representing the pause
key (value is (1&lt;&lt;24)+85).
@since 3.0
",280,-281
"
Keyboard event constant representing the break
key (value is (1&lt;&lt;24)+86).
@since 3.0
",281,-282
"
Keyboard event constant representing the print screen
key (value is (1&lt;&lt;24)+87).
@since 3.0
",282,-283
"
The <code>MessageBox</code> style constant for error icon
behavior (value is 1).
",283,-284
"
The <code>MessageBox</code> style constant for information icon
behavior (value is 1&lt;&lt;1).
",284,-285
"
The <code>MessageBox</code> style constant for question icon
behavior (value is 1&lt;&lt;2).
",285,-286
"
The <code>MessageBox</code> style constant for warning icon
behavior (value is 1&lt;&lt;3).
",286,-287
"
The <code>MessageBox</code> style constant for ""working"" icon
behavior (value is 1&lt;&lt;4).
",287,-288
"
The style constant for ""search"" icon. This style constant is
used with <code>Text</code> in combination with <code>SWT.SEARCH
</code> (value is 1&lt;&lt;9).
<p><b>Used By:</b></p>
<ul>
<li><code>Text</code></li>
</ul>
@see #SEARCH
@see #ICON_CANCEL
@since 3.5
",288,-289
"
The style constant for ""cancel"" icon. This style constant is
used with <code>Text</code> in combination with <code>SWT.SEARCH
</code> (value is 1&lt;&lt;8).
<p><b>Used By:</b></p>
<ul>
<li><code>Text</code></li>
</ul>
@see #SEARCH
@see #ICON_SEARCH
@since 3.5
",289,-290
"
The <code>MessageBox</code> style constant for an OK button;
valid combinations are OK, OK|CANCEL
(value is 1&lt;&lt;5).
",290,-291
"
The <code>MessageBox</code> style constant for YES button;
valid combinations are YES|NO, YES|NO|CANCEL
(value is 1&lt;&lt;6).
",291,-292
"
The <code>MessageBox</code> style constant for NO button;
valid combinations are YES|NO, YES|NO|CANCEL
(value is 1&lt;&lt;7).
",292,-293
"
The <code>MessageBox</code> style constant for a CANCEL button;
valid combinations are OK|CANCEL, YES|NO|CANCEL, RETRY|CANCEL
(value is 1&lt;&lt;8).
<p><b>Used By:</b></p>
<ul>
<li><code>MessageBox</code></li>
</ul>
",293,-294
"
The <code>MessageBox</code> style constant for an ABORT button;
the only valid combination is ABORT|RETRY|IGNORE
(value is 1&lt;&lt;9).
",294,-295
"
The <code>MessageBox</code> style constant for a RETRY button;
valid combinations are ABORT|RETRY|IGNORE, RETRY|CANCEL
(value is 1&lt;&lt;10).
",295,-296
"
The <code>MessageBox</code> style constant for an IGNORE button;
the only valid combination is ABORT|RETRY|IGNORE
(value is 1&lt;&lt;11).
",296,-297
"
The <code>FileDialog</code> style constant for open file dialog behavior
(value is 1&lt;&lt;12).
",297,-298
"
The <code>FileDialog</code> style constant for save file dialog behavior
(value is 1&lt;&lt;13).
",298,-299
"
The <code>Composite</code> constant to indicate that
an attribute (such as background) is not inherited
by the children (value is 0).
@since 3.2
",299,-300
"
The <code>Composite</code> constant to indicate that
an attribute (such as background) is inherited by
children who choose this value as their ""default""
(value is 1).  For example, a label child will
typically choose to inherit the background color
of a composite while a list or table will not.
@since 3.2
",300,-301
"
The <code>Composite</code> constant to indicate that
an attribute (such as background) is inherited by
all children.
@since 3.2
",301,-302
"
Default color white (value is 1).
",302,-303
"
Default color black (value is 2).
",303,-304
"
Default color red (value is 3).
",304,-305
"
Default color dark red (value is 4).
",305,-306
"
Default color green (value is 5).
",306,-307
"
Default color dark green (value is 6).
",307,-308
"
Default color yellow (value is 7).
",308,-309
"
Default color dark yellow (value is 8).
",309,-310
"
Default color blue (value is 9).
",310,-311
"
Default color dark blue (value is 10).
",311,-312
"
Default color magenta (value is 11).
",312,-313
"
Default color dark magenta (value is 12).
",313,-314
"
Default color cyan (value is 13).
",314,-315
"
Default color dark cyan (value is 14).
",315,-316
"
Default color gray (value is 15).
",316,-317
"
Default color dark gray (value is 16).
",317,-318
"
System color used to paint dark shadow areas (value is 17).
",318,-319
"
System color used to paint normal shadow areas (value is 18).
",319,-320
"
System color used to paint light shadow areas (value is 19).
",320,-321
"
System color used to paint highlight shadow areas (value is 20).
",321,-322
"
System color used to paint foreground areas (value is 21).
",322,-323
"
System color used to paint background areas (value is 22).
",323,-324
"
System color used to paint border areas (value is 23).
",324,-325
"
System color used to paint list foreground areas (value is 24).
",325,-326
"
System color used to paint list background areas (value is 25).
",326,-327
"
System color used to paint list selection background areas (value is 26).
",327,-328
"
System color used to paint list selected text (value is 27).
",328,-329
"
System color used to paint tooltip text (value is 28).
",329,-330
"
System color used to paint tooltip background areas (value is 29).
",330,-331
"
System color used to paint title text (value is 30).
",331,-332
"
System color used to paint title background areas (value is 31).
",332,-333
"
System color used to paint title background gradient (value is 32).
",333,-334
"
System color used to paint inactive title text (value is 33).
",334,-335
"
System color used to paint inactive title background areas (value is 34).
",335,-336
"
System color used to paint inactive title background gradient (value is 35).
",336,-337
"
System color used to paint link text (value is 36).
@since 3.102
",337,-338
"
System color used to paint with alpha 0 (value is 37).
<p>
This pseudo-color can be used to set a transparent background on SWT
controls. <br>
Note that this is a <em>HINT</em> and may be overridden by the platform.
For example:
<ul>
<li>{@link org.eclipse.swt.widgets.Combo Combo},
{@link org.eclipse.swt.widgets.List List} and
{@link org.eclipse.swt.widgets.Tree Tree} support transparent background
on GTK3 and Windows only.</li>
<li>{@link org.eclipse.swt.widgets.Text Text} supports transparent
background on Windows only whereas {@link org.eclipse.swt.widgets.Table
Table} supports transparent background on GTK3 only.</li>
</ul>
@since 3.104
",338,-339
"
System color used to paint disabled text background areas (value is 38).
@since 3.112
",339,-340
"
System color used to paint disabled foreground areas (value is 39).
@since 3.112
",340,-341
"
Draw constant indicating whether the drawing operation
should fill the background (value is 1&lt;&lt;0).
",341,-342
"
Draw constant indicating whether the string drawing operation
should handle line-delimiters (value is 1&lt;&lt;1).
",342,-343
"
Draw constant indicating whether the string drawing operation
should expand TAB characters (value is 1&lt;&lt;2).
",343,-344
"
Draw constant indicating whether the string drawing operation
should handle mnemonics (value is 1&lt;&lt;3).
",344,-345
"
Selection constant indicating that a line delimiter should be
drawn (value is 1&lt;&lt;17).
<p><b>Used By:</b></p>
<ul>
<li><code>TextLayout</code></li>
</ul>
@see #FULL_SELECTION
@see #LAST_LINE_SELECTION
@since 3.3
",345,-346
"
Selection constant indicating that the last line is selected
to the end and should be drawn using either a line delimiter
or full line selection (value is 1&lt;&lt;20).
<p><b>Used By:</b></p>
<ul>
<li><code>TextLayout</code></li>
</ul>
@see #DELIMITER_SELECTION
@see #FULL_SELECTION
@since 3.3
",346,-347
"
SWT error constant indicating that no error number was specified
(value is 1).
",347,-348
"
SWT error constant indicating that no more handles for an
operating system resource are available
(value is 2).
",348,-349
"
SWT error constant indicating that no more callback resources are available
(value is 3).
",349,-350
"
SWT error constant indicating that a null argument was passed in
(value is 4).
",350,-351
"
SWT error constant indicating that an invalid argument was passed in
(value is 5).
",351,-352
"
SWT error constant indicating that a value was found to be
outside the allowable range
(value is 6).
",352,-353
"
SWT error constant indicating that a value which can not be
zero was found to be
(value is 7).
",353,-354
"
SWT error constant indicating that the underlying operating
system was unable to provide the value of an item
(value is 8).
",354,-355
"
SWT error constant indicating that the underlying operating
system was unable to provide the selection
(value is 9).
",355,-356
"
SWT error constant indicating that the matrix is not invertible
(value is 10).
@since 3.1
",356,-357
"
SWT error constant indicating that the underlying operating
system was unable to provide the height of an item
(value is 11).
",357,-358
"
SWT error constant indicating that the underlying operating
system was unable to provide the text of a widget
(value is 12).
",358,-359
"
SWT error constant indicating that the underlying operating
system was unable to set the text of a widget
(value is 13).
",359,-360
"
SWT error constant indicating that the underlying operating
system was unable to add an item
(value is 14).
",360,-361
"
SWT error constant indicating that the underlying operating
system was unable to remove an item
(value is 15).
",361,-362
"
SWT error constant indicating that the graphics library
is not available
(value is 16).
",362,-363
"
SWT error constant indicating that a particular feature has
not been implemented on this platform
(value is 20).
",363,-364
"
SWT error constant indicating that a menu which needed
to have the drop down style had some other style instead
(value is 21).
",364,-365
"
SWT error constant indicating that an attempt was made to
invoke an SWT operation which can only be executed by the
user-interface thread from some other thread
(value is 22).
",365,-366
"
SWT error constant indicating that an attempt was made to
invoke an SWT operation using a widget which had already
been disposed
(value is 24).
",366,-367
"
SWT error constant indicating that a menu item which needed
to have the cascade style had some other style instead
(value is 27).
",367,-368
"
SWT error constant indicating that the underlying operating
system was unable to set the selection of a widget
(value is 28).
",368,-369
"
SWT error constant indicating that the underlying operating
system was unable to set the menu
(value is 29).
",369,-370
"
SWT error constant indicating that the underlying operating
system was unable to set the enabled state
(value is 30).
",370,-371
"
SWT error constant indicating that the underlying operating
system was unable to provide enabled/disabled state information
(value is 31).
",371,-372
"
SWT error constant indicating that a provided widget can
not be used as a parent in the current operation
(value is 32).
",372,-373
"
SWT error constant indicating that a menu which needed
to have the menu bar style had some other style instead
(value is 33).
",373,-374
"
SWT error constant indicating that the underlying operating
system was unable to provide count information
(value is 36).
",374,-375
"
SWT error constant indicating that a menu which needed
to have the pop up menu style had some other style instead
(value is 37).
",375,-376
"
SWT error constant indicating that a graphics operation
was attempted with an image of an unsupported depth
(value is 38).
",376,-377
"
SWT error constant indicating that an input/output operation
failed during the execution of an SWT operation
(value is 39).
",377,-378
"
SWT error constant indicating that a graphics operation
was attempted with an image having an invalid format
(value is 40).
",378,-379
"
SWT error constant indicating that a graphics operation
was attempted with an image having a valid but unsupported
format
(value is 42).
",379,-380
"
SWT error constant indicating that an attempt was made
to subclass an SWT widget class without implementing the
<code>checkSubclass()</code> method
(value is 43).
For additional information see the comment in
<code>Widget.checkSubclass()</code>.
@see org.eclipse.swt.widgets.Widget#checkSubclass
",380,-381
"
SWT error constant indicating that an attempt was made to
invoke an SWT operation using a graphics object which had
already been disposed
(value is 44).
",381,-382
"
SWT error constant indicating that an attempt was made to
invoke an SWT operation using a device which had already
been disposed
(value is 45).
",382,-383
"
SWT error constant indicating that an exception happened
when executing a runnable
(value is 46).
",383,-384
"
SWT error constant indicating that an unsatisfied link
error occurred while attempting to load a library
(value is 47).
@since 3.1
",384,-385
"
SWT error constant indicating that a font is not valid
(value is 48).
@since 3.1
",385,-386
"
SWT error constant indicating that an attempt was made to
use an BrowserFunction object which had already been disposed
(value is 49).
@since 3.5
",386,-387
"
SWT error constant indicating that an exception happened
when evaluating a javascript expression
(value is 50).
@since 3.5
",387,-388
"
SWT error constant indicating that an invalid value was returned
(value is 51).
@since 3.5
",388,-389
"
Constant indicating that an image or operation is of type bitmap  (value is 0).
",389,-390
"
Constant indicating that an image or operation is of type icon  (value is 1).
",390,-391
"
The <code>Image</code> constructor argument indicating that
the new image should be a copy of the image provided as
an argument  (value is 0).
",391,-392
"
The <code>Image</code> constructor argument indicating that
the new image should have the appearance of a ""disabled""
(using the platform's rules for how this should look)
copy of the image provided as an argument  (value is 1).
",392,-393
"
The <code>Image</code> constructor argument indicating that
the new image should have the appearance of a ""gray scaled""
copy of the image provided as an argument  (value is 2).
",393,-394
"
Constant to indicate an error state (value is 1).
<p><b>Used By:</b></p>
<ul>
<li><code>ProgressBar</code></li>
</ul>
@since 3.4
",394,-395
"
Constant to a indicate a paused state (value is 4).
<p><b>Used By:</b></p>
<ul>
<li><code>ProgressBar</code></li>
</ul>
@since 3.4
",395,-396
"
The font style constant indicating a normal weight, non-italic font
(value is 0). This constant is also used with <code>ProgressBar</code>
to indicate a normal state.
<p><b>Used By:</b></p>
<ul>
<li><code>ProgressBar</code></li>
</ul>
",396,-397
"
The font style constant indicating a bold weight font
(value is 1&lt;&lt;0).
",397,-398
"
The font style constant indicating an italic font
(value is 1&lt;&lt;1).
",398,-399
"
System arrow cursor  (value is 0).
",399,-400
"
System wait cursor  (value is 1).
",400,-401
"
System cross hair cursor  (value is 2).
",401,-402
"
System app startup cursor  (value is 3).
",402,-403
"
System help cursor  (value is 4).
",403,-404
"
System resize all directions cursor (value is 5).
",404,-405
"
System resize north-east-south-west cursor  (value is 6).
",405,-406
"
System resize north-south cursor  (value is 7).
",406,-407
"
System resize north-west-south-east cursor  (value is 8).
",407,-408
"
System resize west-east cursor  (value is 9).
",408,-409
"
System resize north cursor  (value is 10).
",409,-410
"
System resize south cursor  (value is 11).
",410,-411
"
System resize east cursor  (value is 12).
",411,-412
"
System resize west cursor  (value is 13).
",412,-413
"
System resize north-east cursor (value is 14).
",413,-414
"
System resize south-east cursor (value is 15).
",414,-415
"
System resize south-west cursor (value is 16).
",415,-416
"
System resize north-west cursor (value is 17).
",416,-417
"
System up arrow cursor  (value is 18).
",417,-418
"
System i-beam cursor (value is 19).
",418,-419
"
System ""not allowed"" cursor (value is 20).
",419,-420
"
System hand cursor (value is 21).
",420,-421
"
Line drawing style for flat end caps (value is 1).
@see org.eclipse.swt.graphics.GC#setLineCap(int)
@see org.eclipse.swt.graphics.GC#getLineCap()
@since 3.1
",421,-422
"
Line drawing style for rounded end caps (value is 2).
@see org.eclipse.swt.graphics.GC#setLineCap(int)
@see org.eclipse.swt.graphics.GC#getLineCap()
@since 3.1
",422,-423
"
Line drawing style for square end caps (value is 3).
@see org.eclipse.swt.graphics.GC#setLineCap(int)
@see org.eclipse.swt.graphics.GC#getLineCap()
@since 3.1
",423,-424
"
Line drawing style for miter joins (value is 1).
@see org.eclipse.swt.graphics.GC#setLineJoin(int)
@see org.eclipse.swt.graphics.GC#getLineJoin()
@since 3.1
",424,-425
"
Line drawing  style for rounded joins (value is 2).
@see org.eclipse.swt.graphics.GC#setLineJoin(int)
@see org.eclipse.swt.graphics.GC#getLineJoin()
@since 3.1
",425,-426
"
Line drawing style for bevel joins (value is 3).
@see org.eclipse.swt.graphics.GC#setLineJoin(int)
@see org.eclipse.swt.graphics.GC#getLineJoin()
@since 3.1
",426,-427
"
Line drawing style for solid lines  (value is 1).
",427,-428
"
Line drawing style for dashed lines (value is 2).
",428,-429
"
Line drawing style for dotted lines (value is 3).
",429,-430
"
Line drawing style for alternating dash-dot lines (value is 4).
",430,-431
"
Line drawing style for dash-dot-dot lines (value is 5).
",431,-432
"
Line drawing style for custom dashed lines (value is 6).
@see org.eclipse.swt.graphics.GC#setLineDash(int[])
@see org.eclipse.swt.graphics.GC#getLineDash()
@since 3.1
",432,-433
"
Path constant that represents a ""move to"" operation (value is 1).
@since 3.1
",433,-434
"
Path constant that represents a ""line to"" operation (value is 2).
@since 3.1
",434,-435
"
Path constant that represents a ""quadratic curve to"" operation (value is 3).
@since 3.1
",435,-436
"
Path constant that represents a ""cubic curve to"" operation (value is 4).
@since 3.1
",436,-437
"
Path constant that represents a ""close"" operation (value is 5).
@since 3.1
",437,-438
"
Even odd rule for filling operations (value is 1).
@since 3.1
",438,-439
"
Winding rule for filling operations (value is 2).
@since 3.1
",439,-440
"
Image format constant indicating an unknown image type (value is -1).
",440,-441
"
Image format constant indicating a Windows BMP format image (value is 0).
",441,-442
"
Image format constant indicating a run-length encoded
Windows BMP format image (value is 1).
",442,-443
"
Image format constant indicating a GIF format image (value is 2).
",443,-444
"
Image format constant indicating a ICO format image (value is 3).
",444,-445
"
Image format constant indicating a JPEG format image (value is 4).
",445,-446
"
Image format constant indicating a PNG format image (value is 5).
",446,-447
"
Image format constant indicating a TIFF format image (value is 6).
",447,-448
"
Image format constant indicating an OS/2 BMP format image (value is 7).
",448,-449
"
Image format constant indicating a SVG format image (value is 8).
<br>Note that this is a <em>HINT</em> and is currently only supported on GTK.
@since 3.113
",449,-450
"
GIF image disposal method constants indicating that the
disposal method is unspecified (value is 0).
",450,-451
"
GIF image disposal method constants indicating that the
disposal method is to do nothing; that is, to leave the
previous image in place (value is 1).
",451,-452
"
GIF image disposal method constants indicating that the
the previous images should be covered with the background
color before displaying the next image (value is 2).
",452,-453
"
GIF image disposal method constants indicating that the
disposal method is to restore the previous picture
(value is 3).
",453,-454
"
Image transparency constant indicating that the image
contains no transparency information (value is 0).
",454,-455
"
Image transparency constant indicating that the image
contains alpha transparency information (value is 1&lt;&lt;0).
",455,-456
"
Image transparency constant indicating that the image
contains a transparency mask (value is 1&lt;&lt;1).
",456,-457
"
Image transparency constant indicating that the image
contains a transparent pixel (value is 1&lt;&lt;2).
",457,-458
"
The character movement type (value is 1&lt;&lt;0).
This constant is used to move a text offset over a character.
@see org.eclipse.swt.graphics.TextLayout#getNextOffset(int, int)
@see org.eclipse.swt.graphics.TextLayout#getPreviousOffset(int, int)
@since 3.0
",458,-459
"
The cluster movement type (value is 1&lt;&lt;1).
This constant is used to move a text offset over a cluster.
A cluster groups one or more characters. A cluster is
undivisible, this means that a caret offset can not be placed in the
middle of a cluster.
@see org.eclipse.swt.graphics.TextLayout#getNextOffset(int, int)
@see org.eclipse.swt.graphics.TextLayout#getPreviousOffset(int, int)
@since 3.0
",459,-460
"
The word movement type (value is 1&lt;&lt;2).
This constant is used to move a text offset over a word.
The behavior of this constant depends on the platform and on the
direction of the movement. For example, on Windows the stop is
always at the start of the word. On GTK and Mac the stop is at the end
of the word if the direction is next and at the start of the word if the
direction is previous.
@see org.eclipse.swt.graphics.TextLayout#getNextOffset(int, int)
@see org.eclipse.swt.graphics.TextLayout#getPreviousOffset(int, int)
@since 3.0
",460,-461
"
The word end movement type (value is 1&lt;&lt;3).
This constant is used to move a text offset to the next or previous
word end. The behavior of this constant does not depend on the platform.
@see org.eclipse.swt.graphics.TextLayout#getNextOffset(int, int)
@see org.eclipse.swt.graphics.TextLayout#getPreviousOffset(int, int)
@since 3.3
",461,-462
"
The word start movement type (value is 1&lt;&lt;4).
This constant is used to move a text offset to the next or previous
word start. The behavior of this constant does not depend on the platform.
@see org.eclipse.swt.graphics.TextLayout#getNextOffset(int, int)
@see org.eclipse.swt.graphics.TextLayout#getPreviousOffset(int, int)
@since 3.3
",462,-463
"
A constant indicating that a given operation should be performed on
all widgets (value is 1&lt;&lt;0).
<p><b>Used By:</b></p>
<ul>
<li><code>Composite</code> layout</li>
</ul>
@see org.eclipse.swt.widgets.Composite#layout(org.eclipse.swt.widgets.Control[], int)
@since 3.6
",463,-464
"
ID for the About menu item (value is -1).
@see org.eclipse.swt.widgets.MenuItem#setID(int)
@see org.eclipse.swt.widgets.MenuItem#getID()
@since 3.7
",464,-465
"
ID for the Preferences menu item (value is -2).
@see org.eclipse.swt.widgets.MenuItem#setID(int)
@see org.eclipse.swt.widgets.MenuItem#getID()
@since 3.7
",465,-466
"
ID for the Hide menu item (value is -3).
@see org.eclipse.swt.widgets.MenuItem#setID(int)
@see org.eclipse.swt.widgets.MenuItem#getID()
@since 3.7
",466,-467
"
ID for the Hide Others menu item (value is -4).
@see org.eclipse.swt.widgets.MenuItem#setID(int)
@see org.eclipse.swt.widgets.MenuItem#getID()
@since 3.7
",467,-468
"
ID for the Show All menu item (value is -5).
@see org.eclipse.swt.widgets.MenuItem#setID(int)
@see org.eclipse.swt.widgets.MenuItem#getID()
@since 3.7
",468,-469
"
ID for the Quit menu item (value is -6).
@see org.eclipse.swt.widgets.MenuItem#setID(int)
@see org.eclipse.swt.widgets.MenuItem#getID()
@since 3.7
",469,-470
"
Key name for setting and getting the skin class of a widget.
<p>
Note: SWT currently doesn't read or process this property. The only
effect of setting this property is to trigger a call to
{@link Widget#reskin(int) Widget#reskin(SWT.ALL)}.
</p>
@see org.eclipse.swt.widgets.Widget#getData(String)
@see org.eclipse.swt.widgets.Widget#setData(String, Object)
@since 3.6
",470,-471
"
Key name for setting and getting the skin id of a widget.
<p>
Note: SWT currently doesn't read or process this property. The only
effect of setting this property is to trigger a call to
{@link Widget#reskin(int) Widget#reskin(SWT.ALL)}.
</p>
@see org.eclipse.swt.widgets.Widget#getData(String)
@see org.eclipse.swt.widgets.Widget#setData(String, Object)
@since 3.6
",471,-472
"
The <code>Scrollable</code> constant to indicate that
the receiver is using overlay scrollbars. (value is 1)
@since 3.8
",472,-473
"
Returns a boolean indicating whether this SWT implementation can
be loaded.  Examples of criteria that may be used to determine this
include the OS and architecture of the JRE that is being used.
@return <code>true</code> if this SWT implementation can be loaded
and <code>false</code> otherwise
@since 3.8
",473,-474
"
Answers a concise, human readable description of the error code.
@param code the SWT error code.
@return a description of the error code.
@see SWT
",474,-475
"
Returns the NLS'ed message for the given argument.
@param key the key to look up
@return the message for the given key
@exception IllegalArgumentException <ul>
<li>ERROR_NULL_ARGUMENT - if the key is null</li>
</ul>
",475,-476
"
Returns the NLS'ed message for the given arguments.
@param key the key to look up
@param args the parameters to insert into the message
@return the message for the given parameterized key
@exception IllegalArgumentException <ul>
<li>ERROR_NULL_ARGUMENT - if the key or args are null</li>
</ul>
@since 3.8
",476,-477
"
Returns the SWT platform name.
Examples: ""win32"", ""gtk"", ""cocoa""
@return the SWT platform name
",477,-478
"
Returns the SWT version number as an integer.
Example: ""SWT051"" == 51
@return the SWT version number
",478,-479
"
Throws an appropriate exception based on the passed in error code.
@param code the SWT error code
",479,-480
"
Throws an appropriate exception based on the passed in error code.
The <code>throwable</code> argument should be either null, or the
throwable which caused SWT to throw an exception.
<p>
In SWT, errors are reported by throwing one of three exceptions:
</p>
<dl>
<dd>java.lang.IllegalArgumentException</dd>
<dt>thrown whenever one of the API methods is invoked with an illegal argument</dt>
<dd>org.eclipse.swt.SWTException (extends java.lang.RuntimeException)</dd>
<dt>thrown whenever a recoverable error happens internally in SWT</dt>
<dd>org.eclipse.swt.SWTError (extends java.lang.Error)</dd>
<dt>thrown whenever a <b>non-recoverable</b> error happens internally in SWT</dt>
</dl>
This method provides the logic which maps between error codes
and one of the above exceptions.
@param code the SWT error code.
@param throwable the exception which caused the error to occur.
@see SWTError
@see SWTException
@see IllegalArgumentException
",480,-481
"
Throws an appropriate exception based on the passed in error code.
The <code>throwable</code> argument should be either null, or the
throwable which caused SWT to throw an exception.
<p>
In SWT, errors are reported by throwing one of three exceptions:
</p>
<dl>
<dd>java.lang.IllegalArgumentException</dd>
<dt>thrown whenever one of the API methods is invoked with an illegal argument</dt>
<dd>org.eclipse.swt.SWTException (extends java.lang.RuntimeException)</dd>
<dt>thrown whenever a recoverable error happens internally in SWT</dt>
<dd>org.eclipse.swt.SWTError (extends java.lang.Error)</dd>
<dt>thrown whenever a <b>non-recoverable</b> error happens internally in SWT</dt>
</dl>
This method provides the logic which maps between error codes
and one of the above exceptions.
@param code the SWT error code.
@param throwable the exception which caused the error to occur.
@param detail more information about error.
@see SWTError
@see SWTException
@see IllegalArgumentException
@since 3.0
",481,-482
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",482,-483
"
This error is thrown whenever an unrecoverable error
occurs internally in SWT. The message text and error code
provide a further description of the problem. The exception
has a <code>throwable</code> field which holds the underlying
throwable that caused the problem (if this information is
available (i.e. it may be null)).
<p>
SWTErrors are thrown when something fails internally which
either leaves SWT in an unknown state (eg. the o/s call to
remove an item from a list returns an error code) or when SWT
is left in a known-to-be-unrecoverable state (eg. it runs out
of callback resources). SWTErrors should not occur in typical
programs, although ""high reliability"" applications should
still catch them.
</p><p>
This class also provides support methods used by SWT to match
error codes to the appropriate exception class (SWTError,
SWTException, or IllegalArgumentException) and to provide
human readable strings for SWT error codes.
</p>
@see SWTException
@see SWT#error(int)
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",483,-484
"
The SWT error code, one of SWT.ERROR_*.
",484,-485
"
The underlying throwable that caused the problem,
or null if this information is not available.
",485,-486
"
Constructs a new instance of this class with its
stack trace filled in. The error code is set to an
unspecified value.
",486,-487
"
Constructs a new instance of this class with its
stack trace and message filled in. The error code is
set to an unspecified value.  Specifying <code>null</code>
as the message is equivalent to specifying an empty string.
@param message the detail message for the exception
",487,-488
"
Constructs a new instance of this class with its
stack trace and error code filled in.
@param code the SWT error code
",488,-489
"
Constructs a new instance of this class with its
stack trace, error code and message filled in.
Specifying <code>null</code> as the message is
equivalent to specifying an empty string.
@param code the SWT error code
@param message the detail message for the exception
",489,-490
"
Returns the underlying throwable that caused the problem,
or null if this information is not available.
<p>
NOTE: This method overrides Throwable.getCause() that was
added to JDK1.4. It is necessary to override this method
in order for inherited printStackTrace() methods to work.
</p>
@return the underlying throwable
@since 3.1
",490,-491
"
Returns the string describing this SWTError object.
<p>
It is combined with the message string of the Throwable
which caused this SWTError (if this information is available).
</p>
@return the error message string of this SWTError object
",491,-492
"
Outputs a printable representation of this error's
stack trace on the standard error stream.
<p>
Note: printStackTrace(PrintStream) and printStackTrace(PrintWriter)
are not provided in order to maintain compatibility with CLDC.
</p>
",492,-493
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",493,-494
"
This runtime exception is thrown whenever a recoverable error
occurs internally in SWT. The message text and error code
provide a further description of the problem. The exception
has a <code>throwable</code> field which holds the underlying
exception that caused the problem (if this information is
available (i.e. it may be null)).
<p>
SWTExceptions are thrown when something fails internally,
but SWT is left in a known stable state (eg. a widget call
was made from a non-u/i thread, or there is failure while
reading an Image because the source file was corrupt).
</p>
@see SWTError
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",494,-495
"
The SWT error code, one of SWT.ERROR_*.
",495,-496
"
The underlying throwable that caused the problem,
or null if this information is not available.
",496,-497
"
Constructs a new instance of this class with its
stack trace filled in. The error code is set to an
unspecified value.
",497,-498
"
Constructs a new instance of this class with its
stack trace and message filled in. The error code is
set to an unspecified value.  Specifying <code>null</code>
as the message is equivalent to specifying an empty string.
@param message the detail message for the exception
",498,-499
"
Constructs a new instance of this class with its
stack trace and error code filled in.
@param code the SWT error code
",499,-500
"
Constructs a new instance of this class with its
stack trace, error code and message filled in.
Specifying <code>null</code> as the message is
equivalent to specifying an empty string.
@param code the SWT error code
@param message the detail message for the exception
",500,-501
"
Returns the underlying throwable that caused the problem,
or null if this information is not available.
<p>
NOTE: This method overrides Throwable.getCause() that was
added to JDK1.4. It is necessary to override this method
in order for inherited printStackTrace() methods to work.
</p>
@return the underlying throwable
@since 3.1
",501,-502
"
Returns the string describing this SWTException object.
<p>
It is combined with the message string of the Throwable
which caused this SWTException (if this information is available).
</p>
@return the error message string of this SWTException object
",502,-503
"
Outputs a printable representation of this exception's
stack trace on the standard error stream.
<p>
Note: printStackTrace(PrintStream) and printStackTrace(PrintWriter)
are not provided in order to maintain compatibility with CLDC.
</p>
",503,-504
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",504,-505
"
Instances of this class are sent as a result of
a widget such as a menu item being armed.
@see ArmListener
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",505,-506
"
Constructs a new instance of this class based on the
information in the given untyped event.
@param e the untyped event containing the information
",506,-507
"
****************************************************************************
Copyright (c) 2000, 2016 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
Lars Vogel <Lars.Vogel@vogella.com> - Bug 502576
*****************************************************************************
",507,-508
"
Classes which implement this interface provide a method
that deals with the event that is generated when a widget,
such as a menu item, is armed.
<p>
After creating an instance of a class that implements
this interface it can be added to a widget using the
<code>addArmListener</code> method and removed using
the <code>removeArmListener</code> method. When the
widget is armed, the widgetArmed method will be invoked.
</p>
@see ArmEvent
",508,-509
"
Sent when a widget is armed, or 'about to be selected'.
@param e an event containing information about the arm
",509,-510
"
****************************************************************************
Copyright (c) 2000, 2017 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",510,-511
"
This adapter class provides default implementations for the
methods described by the <code>ControlListener</code> interface.
<p>
Classes that wish to deal with <code>ControlEvent</code>s can
extend this class and override only the methods which they are
interested in.
</p>
<p>
An alternative to this class are the static helper methods
{@link ControlListener#controlMovedAdapter(java.util.function.Consumer)}
and
{@link ControlListener#controlResizedAdapter(java.util.function.Consumer)},
which accept a lambda expression or a method reference that implements the event consumer.
</p>
@see ControlListener
@see ControlEvent
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",511,-512
"
Sent when the location (x, y) of a control changes relative
to its parent (or relative to the display, for <code>Shell</code>s).
The default behavior is to do nothing.
@param e an event containing information about the move
",512,-513
"
Sent when the size (width, height) of a control changes.
The default behavior is to do nothing.
@param e an event containing information about the resize
",513,-514
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",514,-515
"
Instances of this class are sent as a result of
controls being moved or resized.
@see ControlListener
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",515,-516
"
Constructs a new instance of this class based on the
information in the given untyped event.
@param e the untyped event containing the information
",516,-517
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",517,-518
"
Classes which implement this interface provide methods
that deal with the events that are generated by moving
and resizing controls.
<p>
After creating an instance of a class that implements
this interface it can be added to a control using the
<code>addControlListener</code> method and removed using
the <code>removeControlListener</code> method. When a
control is moved or resized, the appropriate method will
be invoked.
</p>
@see ControlAdapter
@see ControlEvent
",518,-519
"
Sent when the location (x, y) of a control changes relative
to its parent (or relative to the display, for <code>Shell</code>s).
@param e an event containing information about the move
",519,-520
"
Sent when the size (width, height) of a control changes.
@param e an event containing information about the resize
",520,-521
"
Static helper method to create a <code>ControlListener</code> for the
{@link #controlMoved(ControlEvent e)}) method, given a lambda expression or a method reference.
@param c the consumer of the event
@return ControlListener
@since 3.107
",521,-522
"
Static helper method to create a <code>ControlListener</code> for the
{@link #controlResized(ControlEvent e)}) method, given a lambda expression or a method reference.
@param c the consumer of the event
@return ControlListener
@since 3.107
",522,-523
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",523,-524
"
Instances of this class are sent as a result of
widgets being disposed.
@see DisposeListener
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",524,-525
"
Constructs a new instance of this class based on the
information in the given untyped event.
@param e the untyped event containing the information
",525,-526
"
****************************************************************************
Copyright (c) 2000, 2016 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
Lars Vogel <Lars.Vogel@vogella.com> - Bug 502576
*****************************************************************************
",526,-527
"
Classes which implement this interface provide a method
that deals with the event that is generated when a widget
is disposed.
<p>
After creating an instance of a class that implements
this interface it can be added to a widget using the
<code>addDisposeListener</code> method and removed using
the <code>removeDisposeListener</code> method. When a
widget is disposed, the widgetDisposed method will
be invoked.
</p>
@see DisposeEvent
",527,-528
"
Sent when the widget is disposed.
@param e an event containing information about the dispose
",528,-529
"
****************************************************************************
Copyright (c) 2000, 2008 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",529,-530
"
Instances of this class are sent as a result of
a drag gesture.
@see DragDetectListener
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
@since 3.3
",530,-531
"
Constructs a new instance of this class based on the
information in the given untyped event.
@param e the untyped event containing the information
",531,-532
"
****************************************************************************
Copyright (c) 2000, 2016 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
Lars Vogel <Lars.Vogel@vogella.com> - Bug 502576
*****************************************************************************
",532,-533
"
Classes which implement this interface provide methods
that deal with the events that are generated when a drag
gesture is detected.
<p>
After creating an instance of a class that implements
this interface it can be added to a control using the
<code>addDragDetectListener</code> method and removed using
the <code>removeDragDetectListener</code> method. When the
drag is detected, the drageDetected method will be invoked.
</p>
@see DragDetectEvent
@since 3.3
",533,-534
"
Sent when a drag gesture is detected.
@param e an event containing information about the drag
",534,-535
"
****************************************************************************
Copyright (c) 2000, 2017 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",535,-536
"
This adapter class provides default implementations for the
methods described by the <code>ExpandListener</code> interface.
<p>
Classes that wish to deal with <code>ExpandEvent</code>s can
extend this class and override only the methods which they are
interested in.
</p>
<p>
An alternative to this class are the static helper methods
{@link ExpandListener#itemCollapsedAdapter(java.util.function.Consumer)}
and
{@link ExpandListener#itemExpandedAdapter(java.util.function.Consumer)},
which accept a lambda expression or a method reference that implements the event consumer.
</p>
@see ExpandListener
@see ExpandEvent
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
@since 3.2
",536,-537
"
Sent when an item is collapsed.
The default behavior is to do nothing.
@param e an event containing information about the operation
",537,-538
"
Sent when an item is expanded.
The default behavior is to do nothing.
@param e an event containing information about the operation
",538,-539
"
****************************************************************************
Copyright (c) 2000, 2008 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",539,-540
"
Instances of this class are sent as a result of
<code>ExpandItem</code>s being expanded or collapsed.
@see ExpandListener
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
@since 3.2
",540,-541
"
Constructs a new instance of this class based on the
information in the given untyped event.
@param e the untyped event containing the information
",541,-542
"
****************************************************************************
Copyright (c) 2000, 2017 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",542,-543
"
Classes which implement this interface provide methods
that deal with the expanding and collapsing of <code>ExpandItem</code>s.
<p>
After creating an instance of a class that implements
this interface it can be added to a <code>ExpandBar</code>
control using the <code>addExpandListener</code> method and
removed using the <code>removeExpandListener</code> method.
When a item of the <code>ExpandBar</code> is expanded or
collapsed, the appropriate method will be invoked.
</p>
@see ExpandAdapter
@see ExpandEvent
@since 3.2
",543,-544
"
Sent when an item is collapsed.
@param e an event containing information about the operation
",544,-545
"
Sent when an item is expanded.
@param e an event containing information about the operation
",545,-546
"
Static helper method to create a <code>ExpandListener</code> for the
{@link #itemCollapsed(ExpandEvent e)}) method, given a lambda expression or a method reference.
@param c the consumer of the event
@return ExpandListener
@since 3.107
",546,-547
"
Static helper method to create a <code>ExpandListener</code> for the
{@link #itemExpanded(ExpandEvent e)}) method, given a lambda expression or a method reference.
@param c the consumer of the event
@return ExpandListener
@since 3.107
",547,-548
"
****************************************************************************
Copyright (c) 2000, 2016 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",548,-549
"
This adapter class provides default implementations for the
methods described by the <code>FocusListener</code> interface.
<p>
Classes that wish to deal with <code>FocusEvent</code>s can
extend this class and override only the methods which they are
interested in.
</p>
@see FocusListener
@see FocusEvent
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",549,-550
"
Sent when a control gets focus.
The default behavior is to do nothing.
@param e an event containing information about the focus change
",550,-551
"
Sent when a control loses focus.
The default behavior is to do nothing.
@param e an event containing information about the focus change
",551,-552
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",552,-553
"
Instances of this class are sent as a result of
widgets gaining and losing focus.
@see FocusListener
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",553,-554
"
Constructs a new instance of this class based on the
information in the given untyped event.
@param e the untyped event containing the information
",554,-555
"
****************************************************************************
Copyright (c) 2000, 2016 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
Lars Vogel <Lars.Vogel@vogella.com> - Bug 506538
*****************************************************************************
",555,-556
"
Classes which implement this interface provide methods
that deal with the events that are generated as controls
gain and lose focus.
<p>
After creating an instance of a class that implements
this interface it can be added to a control using the
<code>addFocusListener</code> method and removed using
the <code>removeFocusListener</code> method. When a
control gains or loses focus, the appropriate method
will be invoked.
</p>
@see FocusAdapter
@see FocusEvent
",556,-557
"
Sent when a control gets focus.
@param e an event containing information about the focus change
",557,-558
"
Sent when a control loses focus.
@param e an event containing information about the focus change
",558,-559
"
Static helper method to create a <code>FocusListener</code> for the
{@link #focusGained(FocusEvent e)}) method with a lambda expression.
@param c the consumer of the event
@return FocusListener
@since 3.106
",559,-560
"
Static helper method to create a <code>FocusListener</code> for the
{@link #focusLost(FocusEvent e)}) method with a lambda expression.
@param c the consumer of the event
@return FocusListener
@since 3.106
",560,-561
"
****************************************************************************
Copyright (c) 2010, 2018 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",561,-562
"
Instances of this class are sent in response to
touch-based gestures that are triggered by the user.
@see GestureListener
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
@since 3.7
",562,-563
"
The state of the keyboard modifier keys and mouse masks
at the time the event was generated.
@see org.eclipse.swt.SWT#MODIFIER_MASK
@see org.eclipse.swt.SWT#BUTTON_MASK
",563,-564
"
The gesture type.
<ul>
<li>{@link org.eclipse.swt.SWT#GESTURE_BEGIN}</li>
<li>{@link org.eclipse.swt.SWT#GESTURE_END}</li>
<li>{@link org.eclipse.swt.SWT#GESTURE_MAGNIFY}</li>
<li>{@link org.eclipse.swt.SWT#GESTURE_PAN}</li>
<li>{@link org.eclipse.swt.SWT#GESTURE_ROTATE}</li>
<li>{@link org.eclipse.swt.SWT#GESTURE_SWIPE}</li>
</ul>
This field determines the <code>GestureEvent</code> fields that contain valid data.
",564,-565
"
The meaning of this field is dependent on the value of the <code>detail</code> field
and the platform.  It can represent either the x coordinate of the centroid of the
touches that make up the gesture, or the x coordinate of the cursor at the time the
gesture was performed.
",565,-566
"
The meaning of this field is dependent on the value of the <code>detail</code> field
and the platform.  It can represent either the y coordinate of the centroid of the
touches that make up the gesture, or the y coordinate of the cursor at the time the
gesture was performed.
",566,-567
"
This field is valid when the <code>detail</code> field is set to <code>GESTURE_ROTATE</code>.
It specifies the number of degrees rotated on the device since the gesture started. Positive
values indicate counter-clockwise rotation, and negative values indicate clockwise rotation.
",567,-568
"
This field is valid when the <code>detail</code> field is set to <code>GESTURE_SWIPE</code>
or <code>GESTURE_PAN</code>.  Both <code>xDirection</code> and <code>yDirection</code>
can be valid for an individual gesture.  The meaning of this field is dependent on the value
of the <code>detail</code> field.
<p>
If <code>detail</code> is <code>GESTURE_SWIPE</code> then a positive value indicates a swipe
to the right and a negative value indicates a swipe to the left.
If <code>detail</code> is <code>GESTURE_PAN</code> then a positive value indicates a pan to
the right by this field's count of points and a negative value indicates a pan to the left
by this field's count of points.
",568,-569
"
This field is valid when the <code>detail</code> field is set to <code>GESTURE_SWIPE</code>
or <code>GESTURE_PAN</code>.  Both <code>xDirection</code> and <code>yDirection</code>
can be valid for an individual gesture.  The meaning of this field is dependent on the value
of the <code>detail</code> field.
If <code>detail</code> is <code>GESTURE_SWIPE</code> then a positive value indicates a downward
swipe and a negative value indicates an upward swipe.
If <code>detail</code> is <code>GESTURE_PAN</code> then a positive value indicates a downward
pan by this field's count of points and a negative value indicates an upward pan by this
field's count of points.
",569,-570
"
This field is valid when the <code>detail</code> field is set to <code>GESTURE_MAGNIFY</code>.
This is the scale factor to be applied. This value will be 1.0 in the first received event with
<code>GESTURE_MAGNIFY</code>, and will then fluctuate in subsequent events as the user moves
their fingers.
",570,-571
"
This flag indicates whether the operation should be allowed.
Setting it to <code>false</code> will cancel the operation.
",571,-572
"
Constructs a new instance of this class based on the
information in the given untyped event.
@param e the untyped event containing the information
",572,-573
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the event
",573,-574
"
****************************************************************************
Copyright (c) 2010, 2016 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
Lars Vogel <Lars.Vogel@vogella.com> - Bug 502576
*****************************************************************************
",574,-575
"
Classes which implement this interface provide methods
that deal with the events that are generated as gestures
are triggered by the user interacting with a touch pad or
touch screen.
<p>
After creating an instance of a class that implements
this interface it can be added to a control using the
<code>addGestureListener</code> method and removed using
the <code>removeGestureListener</code> method. When a
gesture is triggered, the appropriate method will be invoked.
</p>
<p>
<b>Warning</b>: This API is currently only implemented on Windows and Cocoa.
SWT doesn't send Gesture or Touch events on GTK.
</p>
@see GestureEvent
@since 3.7
",575,-576
"
Sent when a recognized gesture has occurred.
@param e an event containing information about the gesture.
",576,-577
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",577,-578
"
Instances of this class are sent as a result of
help being requested for a widget.
@see HelpListener
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",578,-579
"
Constructs a new instance of this class based on the
information in the given untyped event.
@param e the untyped event containing the information
",579,-580
"
****************************************************************************
Copyright (c) 2000, 2016 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
Lars Vogel <Lars.Vogel@vogella.com> - Bug 502576
*****************************************************************************
",580,-581
"
Classes which implement this interface provide a method
that deals with the event that is generated when help is
requested for a control, typically when the user presses F1.
<p>
After creating an instance of a class that implements
this interface it can be added to a control using the
<code>addHelpListener</code> method and removed using
the <code>removeHelpListener</code> method. When help
is requested for a control, the helpRequested method
will be invoked.
</p>
@see HelpEvent
",581,-582
"
Sent when help is requested for a control, typically
when the user presses F1.
@param e an event containing information about the help
",582,-583
"
****************************************************************************
Copyright (c) 2000, 2016 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",583,-584
"
This adapter class provides default implementations for the
methods described by the <code>KeyListener</code> interface.
<p>
Classes that wish to deal with <code>KeyEvent</code>s can
extend this class and override only the methods which they are
interested in.
</p>
@see KeyListener
@see KeyEvent
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",584,-585
"
Sent when a key is pressed on the system keyboard.
The default behavior is to do nothing.
@param e an event containing information about the key press
",585,-586
"
Sent when a key is released on the system keyboard.
The default behavior is to do nothing.
@param e an event containing information about the key release
",586,-587
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",587,-588
"
Instances of this class are sent as a result of
keys being pressed and released on the keyboard.
<p>
When a key listener is added to a control, the control
will take part in widget traversal.  By default, all
traversal keys (such as the tab key and so on) are
delivered to the control.  In order for a control to take
part in traversal, it should listen for traversal events.
Otherwise, the user can traverse into a control but not
out.  Note that native controls such as table and tree
implement key traversal in the operating system.  It is
not necessary to add traversal listeners for these controls,
unless you want to override the default traversal.
</p>
@see KeyListener
@see TraverseListener
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",588,-589
"
the character represented by the key that was typed.
This is the final character that results after all modifiers have been
applied.  For example, when the user types Ctrl+A, the character value
is 0x01.  It is important that applications do not attempt to modify the
character value based on a stateMask (such as SWT.CTRL) or the resulting
character will not be correct.
",589,-590
"
the key code of the key that was typed,
as defined by the key code constants in class <code>SWT</code>.
When the character field of the event is ambiguous, this field
contains the unicode value of the original character.  For example,
typing Ctrl+M or Return both result in the character '\r' but the
keyCode field will also contain '\r' when Return was typed.
@see org.eclipse.swt.SWT
",590,-591
"
depending on the event, the location of key specified by the
keyCode or character. The possible values for this field are
<code>SWT.LEFT</code>, <code>SWT.RIGHT</code>, <code>SWT.KEYPAD</code>,
or <code>SWT.NONE</code> representing the main keyboard area.
<p>
The location field can be used to differentiate key events that have
the same key code and character but are generated by different keys
on the keyboard. For example, a key down event with the key code equal
to SWT.SHIFT can be generated by the left and the right shift keys on
the keyboard.
</p><p>
The location field can only be used to determine the location of
the key code or character in the current event. It does not include
information about the location of modifiers in the state mask.
</p>
@see org.eclipse.swt.SWT#LEFT
@see org.eclipse.swt.SWT#RIGHT
@see org.eclipse.swt.SWT#KEYPAD
@since 3.6
",591,-592
"
the state of the keyboard modifier keys and mouse masks
at the time the event was generated.
@see org.eclipse.swt.SWT#MODIFIER_MASK
@see org.eclipse.swt.SWT#BUTTON_MASK
",592,-593
"
A flag indicating whether the operation should be allowed.
Setting this field to <code>false</code> will cancel the operation.
",593,-594
"
Constructs a new instance of this class based on the
information in the given untyped event.
@param e the untyped event containing the information
",594,-595
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the event
",595,-596
"
****************************************************************************
Copyright (c) 2000, 2016 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
Lars Vogel <Lars.Vogel@vogella.com> - Bug 507185
*****************************************************************************
",596,-597
"
Classes which implement this interface provide methods
that deal with the events that are generated as keys
are pressed on the system keyboard.
<p>
After creating an instance of a class that implements
this interface it can be added to a control using the
<code>addKeyListener</code> method and removed using
the <code>removeKeyListener</code> method. When a
key is pressed or released, the appropriate method will
be invoked.
</p>
@see KeyAdapter
@see KeyEvent
",597,-598
"
Sent when a key is pressed on the system keyboard.
@param e an event containing information about the key press
",598,-599
"
Sent when a key is released on the system keyboard.
@param e an event containing information about the key release
",599,-600
"
Static helper method to create a <code>KeyListener</code> for the
{@link #keyPressed(KeyEvent e)}) method with a lambda expression.
@param c the consumer of the event
@return KeyListener
@since 3.106
",600,-601
"
Static helper method to create a <code>KeyListener</code> for the
{@link #keyReleased(KeyEvent e)}) method with a lambda expression.
@param c the consumer of the event
@return KeyListener
@since 3.106
",601,-602
"
****************************************************************************
Copyright (c) 2000, 2017 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",602,-603
"
This adapter class provides default implementations for the
methods described by the <code>MenuListener</code> interface.
<p>
Classes that wish to deal with <code>MenuEvent</code>s can
extend this class and override only the methods which they are
interested in.
</p>
<p>
An alternative to this class are the static helper methods
{@link MenuListener#menuHiddenAdapter(java.util.function.Consumer)}
and
{@link MenuListener#menuShownAdapter(java.util.function.Consumer)},
which accept a lambda expression or a method reference that implements the event consumer.
</p>
@see MenuListener
@see MenuEvent
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",603,-604
"
Sent when a menu is hidden.
The default behavior is to do nothing.
@param e an event containing information about the menu operation
",604,-605
"
Sent when a menu is shown.
The default behavior is to do nothing.
@param e an event containing information about the menu operation
",605,-606
"
****************************************************************************
Copyright (c) 2000, 2012 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",606,-607
"
Instances of this class are sent whenever the platform-
specific trigger for showing a context menu is detected.
@see MenuDetectListener
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
@since 3.3
",607,-608
"
The display-relative x coordinate of the pointer
at the time the context menu trigger occurred.
",608,-609
"
The display-relative y coordinate of the pointer
at the time the context menu trigger occurred.
",609,-610
"
A flag indicating whether the operation should be allowed.
Setting this field to <code>false</code> will cancel the operation.
",610,-611
"
The context menu trigger type.
<ul>
<li>{@link org.eclipse.swt.SWT#MENU_MOUSE}</li>
<li>{@link org.eclipse.swt.SWT#MENU_KEYBOARD}</li>
</ul>
A field indicating whether the context menu was triggered by a
pointing device such as a mouse (indicated by <code>MENU_MOUSE</code>),
or by a focus-based device such as a keyboard (<code>MENU_KEYBOARD</code>).
If the trigger was <code>MENU_KEYBOARD</code>, then the application should
provide new display-relative x and y coordinates based on the current
selection or the current focus.
@since 3.8
",611,-612
"
Constructs a new instance of this class based on the
information in the given untyped event.
@param e the untyped event containing the information
",612,-613
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the event
",613,-614
"
****************************************************************************
Copyright (c) 2000, 2016 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
Lars Vogel <Lars.Vogel@vogella.com> - Bug 502576
*****************************************************************************
",614,-615
"
Classes which implement this interface provide methods
that deal with the events that are generated when the
platform-specific trigger for showing a context menu is
detected.
<p>
After creating an instance of a class that implements
this interface it can be added to a control or TrayItem
using the <code>addMenuDetectListener</code> method and
removed using the <code>removeMenuDetectListener</code> method.
When the context menu trigger occurs, the
<code>menuDetected</code> method will be invoked.
</p>
@see MenuDetectEvent
@since 3.3
",615,-616
"
Sent when the platform-dependent trigger for showing a menu item is detected.
@param e an event containing information about the menu detect
",616,-617
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",617,-618
"
Instances of this class are sent as a result of
menus being shown and hidden.
@see MenuListener
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",618,-619
"
Constructs a new instance of this class based on the
information in the given untyped event.
@param e the untyped event containing the information
",619,-620
"
****************************************************************************
Copyright (c) 2000, 2017 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",620,-621
"
Classes which implement this interface provide methods
that deal with the hiding and showing of menus.
<p>
After creating an instance of a class that implements
this interface it can be added to a menu using the
<code>addMenuListener</code> method and removed using
the <code>removeMenuListener</code> method. When the
menu is hidden or shown, the appropriate method will
be invoked.
</p>
@see MenuAdapter
@see MenuEvent
",621,-622
"
Sent when a menu is hidden.
@param e an event containing information about the menu operation
",622,-623
"
Sent when a menu is shown.
@param e an event containing information about the menu operation
",623,-624
"
Static helper method to create a <code>MenuListener</code> for the
{@link #menuHidden(MenuEvent e)}) method, given a lambda expression or a method reference.
@param c the consumer of the event
@return MenuListener
@since 3.107
",624,-625
"
Static helper method to create a <code>MenuListener</code> for the
{@link #menuShown(MenuEvent e)}) method, given a lambda expression or a method reference.
@param c the consumer of the event
@return MenuListener
@since 3.107
",625,-626
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",626,-627
"
Instances of this class are sent as a result of
text being modified.
@see ModifyListener
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",627,-628
"
Constructs a new instance of this class based on the
information in the given untyped event.
@param e the untyped event containing the information
",628,-629
"
****************************************************************************
Copyright (c) 2000, 2016 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
Lars Vogel <Lars.Vogel@vogella.com> - Bug 502576
*****************************************************************************
",629,-630
"
Classes which implement this interface provide a method
that deals with the events that are generated when text
is modified.
<p>
After creating an instance of a class that implements
this interface it can be added to a text widget using the
<code>addModifyListener</code> method and removed using
the <code>removeModifyListener</code> method. When the
text is modified, the modifyText method will be invoked.
</p>
@see ModifyEvent
",630,-631
"
Sent when the text is modified.
@param e an event containing information about the modify
",631,-632
"
****************************************************************************
Copyright (c) 2000, 2016 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",632,-633
"
This adapter class provides default implementations for the
methods described by the <code>MouseListener</code> interface.
<p>
Classes that wish to deal with <code>MouseEvent</code>s
which occur as mouse buttons are pressed and released can
extend this class and override only the methods which they are
interested in.
</p>
@see MouseListener
@see MouseEvent
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",633,-634
"
Sent when a mouse button is pressed twice within the
(operating system specified) double click period.
The default behavior is to do nothing.
@param e an event containing information about the mouse double click
@see org.eclipse.swt.widgets.Display#getDoubleClickTime()
",634,-635
"
Sent when a mouse button is pressed.
The default behavior is to do nothing.
@param e an event containing information about the mouse button press
",635,-636
"
Sent when a mouse button is released.
The default behavior is to do nothing.
@param e an event containing information about the mouse button release
",636,-637
"
****************************************************************************
Copyright (c) 2000, 2012 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",637,-638
"
Instances of this class are sent whenever mouse
related actions occur. This includes mouse buttons
being pressed and released, the mouse pointer being
moved and the mouse pointer crossing widget boundaries.
<p>
Note: The <code>button</code> field is an integer that
represents the mouse button number.  This is not the same
as the <code>SWT</code> mask constants <code>BUTTONx</code>.
</p>
@see MouseListener
@see MouseMoveListener
@see MouseTrackListener
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",638,-639
"
the button that was pressed or released;
<ul>
<li>1 for the first button (usually 'left')</li>
<li>2 for the second button (usually 'middle')</li>
<li>3 for the third button (usually 'right')</li>
<li>etc.</li>
</ul>
",639,-640
"
the state of the keyboard modifier keys and mouse masks
at the time the event was generated.
@see org.eclipse.swt.SWT#MODIFIER_MASK
@see org.eclipse.swt.SWT#BUTTON_MASK
",640,-641
"
the widget-relative, x coordinate of the pointer
at the time the mouse button was pressed or released
",641,-642
"
the widget-relative, y coordinate of the pointer
at the time the mouse button was pressed or released
",642,-643
"
the number times the mouse has been clicked, as defined
by the operating system; 1 for the first click, 2 for the
second click and so on.
@since 3.3
",643,-644
"
Constructs a new instance of this class based on the
information in the given untyped event.
@param e the untyped event containing the information
",644,-645
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the event
",645,-646
"
****************************************************************************
Copyright (c) 2000, 2017 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
Lars Vogel <Lars.Vogel@vogella.com>  - Bug 513037
*****************************************************************************
",646,-647
"
Classes which implement this interface provide methods
that deal with the events that are generated as mouse buttons
are pressed.
<p>
After creating an instance of a class that implements
this interface it can be added to a control using the
<code>addMouseListener</code> method and removed using
the <code>removeMouseListener</code> method. When a
mouse button is pressed or released, the appropriate method
will be invoked.
</p>
@see MouseAdapter
@see MouseEvent
",647,-648
"
Sent when a mouse button is pressed twice within the
(operating system specified) double click period.
@param e an event containing information about the mouse double click
@see org.eclipse.swt.widgets.Display#getDoubleClickTime()
",648,-649
"
Sent when a mouse button is pressed.
@param e an event containing information about the mouse button press
",649,-650
"
Sent when a mouse button is released.
@param e an event containing information about the mouse button release
",650,-651
"
Static helper method to create a <code>MouseListener</code> for the
{@link #mouseDoubleClick(MouseEvent e)}) method with a lambda expression.
@param c the consumer of the event
@return MouseListener
@since 3.106
",651,-652
"
Static helper method to create a <code>MouseListener</code> for the
{@link #mouseDown(MouseEvent e)}) method with a lambda expression.
@param c the consumer of the event
@return MouseListener
@since 3.106
",652,-653
"
Static helper method to create a <code>MouseListener</code> for the
{@link #mouseUp(MouseEvent e)}) method with a lambda expression.
@param c the consumer of the event
@return MouseListener
@since 3.106
",653,-654
"
****************************************************************************
Copyright (c) 2000, 2016 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
Lars Vogel <Lars.Vogel@vogella.com> - Bug 502576
*****************************************************************************
",654,-655
"
Classes which implement this interface provide a method
that deals with the events that are generated as the mouse
pointer moves.
<p>
After creating an instance of a class that implements
this interface it can be added to a control using the
<code>addMouseMoveListener</code> method and removed using
the <code>removeMouseMoveListener</code> method. As the
mouse moves, the mouseMove method will be invoked.
</p>
@see MouseEvent
",655,-656
"
Sent when the mouse moves.
@param e an event containing information about the mouse move
",656,-657
"
****************************************************************************
Copyright (c) 2000, 2017 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",657,-658
"
This adapter class provides default implementations for the
methods described by the <code>MouseTrackListener</code> interface.
<p>
Classes that wish to deal with <code>MouseEvent</code>s which
occur as the mouse pointer passes (or hovers) over controls can
extend this class and override only the methods which they are
interested in.
</p>
<p>
An alternative to this class are the static helper methods
{@link MouseTrackListener#mouseEnterAdapter(java.util.function.Consumer)},
{@link MouseTrackListener#mouseExitAdapter(java.util.function.Consumer)}
and
{@link MouseTrackListener#mouseHoverAdapter(java.util.function.Consumer)},
which accept a lambda expression or a method reference that implements the event consumer.
</p>
@see MouseTrackListener
@see MouseEvent
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",658,-659
"
Sent when the mouse pointer passes into the area of
the screen covered by a control.
The default behavior is to do nothing.
@param e an event containing information about the mouse enter
",659,-660
"
Sent when the mouse pointer passes out of the area of
the screen covered by a control.
The default behavior is to do nothing.
@param e an event containing information about the mouse exit
",660,-661
"
Sent when the mouse pointer hovers (that is, stops moving
for an (operating system specified) period of time) over
a control.
The default behavior is to do nothing.
@param e an event containing information about the hover
",661,-662
"
****************************************************************************
Copyright (c) 2000, 2017 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",662,-663
"
Classes which implement this interface provide methods
that deal with the events that are generated as the mouse
pointer passes (or hovers) over controls.
<p>
After creating an instance of a class that implements
this interface it can be added to a control using the
<code>addMouseTrackListener</code> method and removed using
the <code>removeMouseTrackListener</code> method. When the
mouse pointer passes into or out of the area of the screen
covered by a control or pauses while over a control, the
appropriate method will be invoked.
</p>
@see MouseTrackAdapter
@see MouseEvent
",663,-664
"
Sent when the mouse pointer passes into the area of
the screen covered by a control.
@param e an event containing information about the mouse enter
",664,-665
"
Sent when the mouse pointer passes out of the area of
the screen covered by a control.
@param e an event containing information about the mouse exit
",665,-666
"
Sent when the mouse pointer hovers (that is, stops moving
for an (operating system specified) period of time) over
a control.
@param e an event containing information about the hover
",666,-667
"
Static helper method to create a <code>MouseTrackListener</code> for the
{@link #mouseEnter(MouseEvent e)}) method, given a lambda expression or a method reference.
@param c the consumer of the event
@return MouseTrackListener
@since 3.107
",667,-668
"
Static helper method to create a <code>MouseTrackListener</code> for the
{@link #mouseExit(MouseEvent e)}) method, given a lambda expression or a method reference.
@param c the consumer of the event
@return MouseTrackListener
@since 3.107
",668,-669
"
Static helper method to create a <code>MouseTrackListener</code> for the
{@link #mouseHover(MouseEvent e)}) method, given a lambda expression or a method reference.
@param c the consumer of the event
@return MouseTrackListener
@since 3.107
",669,-670
"
****************************************************************************
Copyright (c) 2000, 2017 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",670,-671
"
Classes which implement this interface provide a method
that deals with the event that is generated as the mouse
wheel is scrolled.
<p>
After creating an instance of a class that implements
this interface it can be added to a control using the
<code>addMouseWheelListener</code> method and removed using
the <code>removeMouseWheelListener</code> method. When the
mouse wheel is scrolled the <code>mouseScrolled</code> method
will be invoked.
</p>
@see MouseEvent
@since 3.3
",671,-672
"
Sent when the mouse wheel is scrolled.
@param e an event containing information about the mouse wheel action
",672,-673
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",673,-674
"
Instances of this class are sent as a result of
visible areas of controls requiring re-painting.
@see PaintListener
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",674,-675
"
the graphics context to use when painting
that is configured to use the colors, font and
damaged region of the control.  It is valid
only during the paint and must not be disposed
",675,-676
"
the x offset of the bounding rectangle of the
region that requires painting
",676,-677
"
the y offset of the bounding rectangle of the
region that requires painting
",677,-678
"
the width of the bounding rectangle of the
region that requires painting
",678,-679
"
the height of the bounding rectangle of the
region that requires painting
",679,-680
"
the number of following paint events which
are pending which may always be zero on
some platforms
",680,-681
"
Constructs a new instance of this class based on the
information in the given untyped event.
@param e the untyped event containing the information
",681,-682
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the event
",682,-683
"
****************************************************************************
Copyright (c) 2000, 2016 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
Lars Vogel <Lars.Vogel@vogella.com> - Bug 502576
*****************************************************************************
",683,-684
"
Classes which implement this interface provide methods
that deal with the events that are generated when the
control needs to be painted.
<p>
After creating an instance of a class that implements
this interface it can be added to a control using the
<code>addPaintListener</code> method and removed using
the <code>removePaintListener</code> method. When a
paint event occurs, the paintControl method will be
invoked.
</p>
@see PaintEvent
",684,-685
"
Sent when a paint event occurs for the control.
@param e an event containing information about the paint
",685,-686
"
****************************************************************************
Copyright (c) 2000, 2012 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",686,-687
"
This event is sent to SegmentListeners when a text content is to be modified.
The segments field can be used in conjunction with the segmentsChars field or
by itself. Setting only the segmentsChars field has no effect. When used by
itself, the segments field specify text ranges that should be treated as
separate segments.
<p>
The elements in the segments field specify the start offset of a segment
relative to the start of the text. They must follow the following rules:</p>
<ul>
<li>elements must be in ascending order and must not have duplicates
<li>elements must not exceed the text length
</ul>
In addition, the first element may be set to zero and the last element may
be set to the end of the line but this is not required.
<p>
The segments field may be left null if the entire text content doesn't
require segmentation.
</p>
A SegmentListener may be used when adjacent segments of right-to-left text
should not be reordered relative to each other. For example, within a Java
editor, you may wish multiple right-to-left string literals to be reordered
differently than the bidi algorithm specifies.
Example:
<pre>
stored text = ""R1R2R3"" + ""R4R5R6""
R1 to R6 are right-to-left characters. The quotation marks
are part of the text. The text is 13 characters long.
segments = null:
entire text content will be reordered and thus the two R2L segments
swapped (as per the bidi algorithm).
visual display (rendered on screen) = ""R6R5R4"" + ""R3R2R1""
segments = [0, 5, 8]
""R1R2R3"" will be reordered, followed by [blank]+[blank] and
""R4R5R6"".
visual display = ""R3R2R1"" + ""R6R5R4""
</pre>
<p>
The segments and segmentsChars fields can be used together to obtain different
types of bidi reordering and text display. The application can use these two fields
to insert Unicode Control Characters in specific offsets in the text, the character
at segmentsChars[i] is inserted at the offset specified by segments[i]. When both fields
are set, the rules for the segments field are less restrictive:
</p>
<ul>
<li>elements must be in ascending order, duplicates are allowed
<li>elements must not exceed the text length
</ul>
@since 3.8
",687,-688
"
The start offset of the <code>lineText</code> relative to text (always zero for single line widget)
",688,-689
"
Text used to calculate the segments
",689,-690
"
Text ranges that should be treated as separate segments (e.g. for bidi reordering)
",690,-691
"
Characters to be used in the segment boundaries (optional)
",691,-692
"
****************************************************************************
Copyright (c) 2000, 2016s IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
Lars Vogel <Lars.Vogel@vogella.com> - Bug 502576
*****************************************************************************
",692,-693
"
This listener interface may be implemented in order to receive
SegmentEvents.
@see SegmentEvent
@since 3.8
",693,-694
"
This method is called when text content is being modified.
<p>
The following event fields are used:<ul>
<li>event.lineText text content (input)</li>
<li>event.segments text offsets for segment characters (output)</li>
<li>event.segmentsChars characters that should be inserted (output, optional)</li>
</ul>
@param event the given event
@see SegmentEvent
",694,-695
"
****************************************************************************
Copyright (c) 2000, 2016 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",695,-696
"
This adapter class provides default implementations for the
methods described by the <code>SelectionListener</code> interface.
<p>
Classes that wish to deal with <code>SelectionEvent</code>s can
extend this class and override only the methods which they are
interested in.
</p>
<p>
An alternative to this class are the static helper methods
{@link SelectionListener#widgetSelectedAdapter(java.util.function.Consumer)}
and
{@link SelectionListener#widgetDefaultSelectedAdapter(java.util.function.Consumer)},
which accept a lambda expression or a method reference that implements the event consumer.
</p>
@see SelectionListener
@see SelectionEvent
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",696,-697
"
Sent when selection occurs in the control.
The default behavior is to do nothing.
@param e an event containing information about the selection
",697,-698
"
Sent when default selection occurs in the control.
The default behavior is to do nothing.
@param e an event containing information about the default selection
",698,-699
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",699,-700
"
Instances of this class are sent as a result of
widgets being selected.
<p>
Note: The fields that are filled in depend on the widget.
</p>
@see SelectionListener
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",700,-701
"
The item that was selected.
",701,-702
"
Extra detail information about the selection, depending on the widget.
<p><b>Sash</b></p>
<ul>
<li>{@link org.eclipse.swt.SWT#DRAG}</li>
</ul>
<p><b>ScrollBar and Slider</b></p>
<ul>
<li>{@link org.eclipse.swt.SWT#DRAG}</li>
<li>{@link org.eclipse.swt.SWT#HOME}</li>
<li>{@link org.eclipse.swt.SWT#END}</li>
<li>{@link org.eclipse.swt.SWT#ARROW_DOWN}</li>
<li>{@link org.eclipse.swt.SWT#ARROW_UP}</li>
<li>{@link org.eclipse.swt.SWT#PAGE_DOWN}</li>
<li>{@link org.eclipse.swt.SWT#PAGE_UP}</li>
</ul>
<p><b>Table and Tree</b></p>
<ul>
<li>{@link org.eclipse.swt.SWT#CHECK}</li>
</ul>
<p><b>Text</b></p>
<ul>
<li>{@link org.eclipse.swt.SWT#CANCEL}</li>
</ul>
<p><b>CoolItem and ToolItem</b></p>
<ul>
<li>{@link org.eclipse.swt.SWT#ARROW}</li>
</ul>
",702,-703
"
The x location of the selected area.
",703,-704
"
The y location of selected area.
",704,-705
"
The width of selected area.
",705,-706
"
The height of selected area.
",706,-707
"
The state of the keyboard modifier keys and mouse masks
at the time the event was generated.
<p>
<b>Note:</b> Mouse button states are currently not included consistently
for all widgets on all platforms. Clients should be prepared to receive
button states, but should not rely on getting them everywhere.
</p>
@see org.eclipse.swt.SWT#MODIFIER_MASK
@see org.eclipse.swt.SWT#BUTTON_MASK
",707,-708
"
The text of the hyperlink that was selected.
This will be either the text of the hyperlink or the value of its HREF,
if one was specified.
@see org.eclipse.swt.widgets.Link#setText(String)
@since 3.1
",708,-709
"
A flag indicating whether the operation should be allowed.
Setting this field to <code>false</code> will cancel the
operation, depending on the widget.
",709,-710
"
Constructs a new instance of this class based on the
information in the given untyped event.
@param e the untyped event containing the information
",710,-711
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the event
",711,-712
"
****************************************************************************
Copyright (c) 2000, 2016 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
Lars Vogel <Lars.Vogel@vogella.com>  - Bug 441116
*****************************************************************************
",712,-713
"
Classes which implement this interface provide methods
that deal with the events that are generated when selection
occurs in a control.
<p>
After creating an instance of a class that implements
this interface it can be added to a control using the
<code>addSelectionListener</code> method and removed using
the <code>removeSelectionListener</code> method. When
selection occurs in a control the appropriate method
will be invoked.
</p>
@see SelectionAdapter
@see SelectionEvent
",713,-714
"
Sent when selection occurs in the control.
<p>
For example, selection occurs in a List when the user selects
an item or items with the keyboard or mouse.  On some platforms,
the event occurs when a mouse button or key is pressed.  On others,
it happens when the mouse or key is released.  The exact key or
mouse gesture that causes this event is platform specific.
</p>
@param e an event containing information about the selection
",714,-715
"
Sent when default selection occurs in the control.
<p>
For example, on some platforms default selection occurs in a List
when the user double-clicks an item or types return in a Text.
On some platforms, the event occurs when a mouse button or key is
pressed.  On others, it happens when the mouse or key is released.
The exact key or mouse gesture that causes this event is platform
specific.
</p>
@param e an event containing information about the default selection
",715,-716
"
Static helper method to create a <code>SelectionListener</code> for the
{@link #widgetSelected(SelectionEvent e)}) method, given a lambda expression
or a method reference.
@param c the consumer of the event
@return SelectionListener
@since 3.106
",716,-717
"
Static helper method to create a <code>SelectionListener</code> for the
{@link #widgetDefaultSelected(SelectionEvent e)}) method, given a lambda expression
or a method reference.
@param c the consumer of the event
@return SelectionListener
@since 3.106
",717,-718
"
****************************************************************************
Copyright (c) 2000, 2017 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",718,-719
"
This adapter class provides default implementations for the
methods described by the <code>ShellListener</code> interface.
<p>
Classes that wish to deal with <code>ShellEvent</code>s can
extend this class and override only the methods which they are
interested in.
</p>
<p>
An alternative to this class are the static helper methods in
{@link ShellListener},
which accept a lambda expression or a method reference that implements the event consumer.
</p>
@see ShellListener
@see ShellEvent
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",719,-720
"
Sent when a shell becomes the active window.
The default behavior is to do nothing.
@param e an event containing information about the activation
",720,-721
"
Sent when a shell is closed.
The default behavior is to do nothing.
@param e an event containing information about the close
",721,-722
"
Sent when a shell stops being the active window.
The default behavior is to do nothing.
@param e an event containing information about the deactivation
",722,-723
"
Sent when a shell is un-minimized.
The default behavior is to do nothing.
@param e an event containing information about the un-minimization
",723,-724
"
Sent when a shell is minimized.
The default behavior is to do nothing.
@param e an event containing information about the minimization
",724,-725
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",725,-726
"
Instances of this class are sent as a result of
operations being performed on shells.
@see ShellListener
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",726,-727
"
A flag indicating whether the operation should be allowed.
Setting this field to <code>false</code> will cancel the operation.
",727,-728
"
Constructs a new instance of this class based on the
information in the given untyped event.
@param e the untyped event containing the information
",728,-729
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the event
",729,-730
"
****************************************************************************
Copyright (c) 2000, 2017 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",730,-731
"
Classes which implement this interface provide methods
that deal with changes in state of <code>Shell</code>s.
<p>
After creating an instance of a class that implements
this interface it can be added to a shell using the
<code>addShellListener</code> method and removed using
the <code>removeShellListener</code> method. When the
state of the shell changes, the appropriate method will
be invoked.
</p>
@see ShellAdapter
@see ShellEvent
",731,-732
"
Sent when a shell becomes the active window.
@param e an event containing information about the activation
",732,-733
"
Sent when a shell is closed.
@param e an event containing information about the close
",733,-734
"
Sent when a shell stops being the active window.
@param e an event containing information about the deactivation
",734,-735
"
Sent when a shell is un-minimized.
@param e an event containing information about the un-minimization
",735,-736
"
Sent when a shell is minimized.
@param e an event containing information about the minimization
",736,-737
"
Static helper method to create a <code>ShellListener</code> for the
{@link #shellActivated(ShellEvent e)}) method, given a lambda expression or a method reference.
@param c the consumer of the event
@return ShellListener
@since 3.107
",737,-738
"
Static helper method to create a <code>ShellListener</code> for the
{@link #shellClosed(ShellEvent e)}) method, given a lambda expression or a method reference.
@param c the consumer of the event
@return ShellListener
@since 3.107
",738,-739
"
Static helper method to create a <code>ShellListener</code> for the
{@link #shellDeactivated(ShellEvent e)}) method, given a lambda expression or a method reference.
@param c the consumer of the event
@return ShellListener
@since 3.107
",739,-740
"
Static helper method to create a <code>ShellListener</code> for the
{@link #shellDeiconified(ShellEvent e)}) method, given a lambda expression or a method reference.
@param c the consumer of the event
@return ShellListener
@since 3.107
",740,-741
"
Static helper method to create a <code>ShellListener</code> for the
{@link #shellIconified(ShellEvent e)}) method, given a lambda expression or a method reference.
@param c the consumer of the event
@return ShellListener
@since 3.107
",741,-742
"
****************************************************************************
Copyright (c) 2010, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",742,-743
"
Instances of this class are sent in response to
a touch-based input source being touched.
@see TouchListener
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
@since 3.7
",743,-744
"
The set of touches representing the state of all contacts with touch input
device at the time the event was generated.
@see org.eclipse.swt.widgets.Touch
",744,-745
"
The state of the keyboard modifier keys and mouse masks
at the time the event was generated.
@see org.eclipse.swt.SWT#MODIFIER_MASK
@see org.eclipse.swt.SWT#BUTTON_MASK
",745,-746
"
The widget-relative x coordinate of the pointer
at the time the touch occurred.
",746,-747
"
The widget-relative y coordinate of the pointer
at the time the touch occurred.
",747,-748
"
Constructs a new instance of this class based on the
information in the given untyped event.
@param e the untyped event containing the information
",748,-749
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the event
",749,-750
"
****************************************************************************
Copyright (c) 2010, 2016 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
Lars Vogel <Lars.Vogel@vogella.com> - Bug 502576
*****************************************************************************
",750,-751
"
Classes which implement this interface provide methods
that deal with the events that are generated as touches
occur on a touch-aware input surface.
<p>
After creating an instance of a class that implements
this interface it can be added to a control using the
<code>addTouchListener</code> method and removed using
the <code>removeTouchListener</code> method. When a
touch occurs or changes state, the <code>touch</code> method
will be invoked.
</p>
<p>
<b>Warning</b>: This API is currently only implemented on Windows and Cocoa.
SWT doesn't send Gesture or Touch events on GTK.
</p>
@see TouchEvent
@since 3.7
",751,-752
"
Sent when a touch sequence begins, changes state, or ends.
@param e an event containing information about the touch
",752,-753
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",753,-754
"
Instances of this class are sent as a result of
widget traversal actions.
<p>
The traversal event allows fine control over keyboard traversal
in a control both to implement traversal and override the default
traversal behavior defined by the system.  This is achieved using
two fields, <code>detail</code> and <code>doit</code>.
</p><p>
When a control is traversed, a traverse event is sent.  The detail
describes the type of traversal and the doit field indicates the default
behavior of the system.  For example, when a right arrow key is pressed
in a text control, the detail field is <code>TRAVERSE_ARROW_NEXT</code>
and the doit field is <code>false</code>, indicating that the system
will not traverse to the next tab item and the arrow key will be
delivered to the text control.  If the same key is pressed in a radio
button, the doit field will be <code>true</code>, indicating that
traversal is to proceed to the next tab item, possibly another radio
button in the group and that the arrow key is not to be delivered
to the radio button.
</p><p>
How can the traversal event be used to implement traversal?
When a tab key is pressed in a canvas, the detail field will be
<code>TRAVERSE_TAB_NEXT</code> and the doit field will be
<code>false</code>.  The default behavior of the system is to
provide no traversal for canvas controls.  This means that by
default in a canvas, a key listener will see every key that the
user types, including traversal keys.  To understand why this
is so, it is important to understand that only the widget implementor
can decide which traversal is appropriate for the widget.  Returning
to the <code>TRAVERSE_TAB_NEXT</code> example, a text widget implemented
by a canvas would typically want to use the tab key to insert a
tab character into the widget.  A list widget implementation, on the
other hand, would like the system default traversal behavior.  Using
only the doit flag, both implementations are possible.  The text widget
implementor sets doit to <code>false</code>, ensuring that the system
will not traverse and that the tab key will be delivered to key listeners.
The list widget implementor sets doit to <code>true</code>, indicating
that the system should perform tab traversal and that the key should not
be delivered to the list widget.
</p><p>
How can the traversal event be used to override system traversal?
When the return key is pressed in a single line text control, the
detail field is <code>TRAVERSE_RETURN</code> and the doit field
is <code>true</code>.  This means that the return key will be processed
by the default button, not the text widget.  If the text widget has
a default selection listener, it will not run because the return key
will be processed by the default button.  Imagine that the text control
is being used as an in-place editor and return is used to dispose the
widget.  Setting doit to <code>false</code> will stop the system from
activating the default button but the key will be delivered to the text
control, running the key and selection listeners for the text.  How
can <code>TRAVERSE_RETURN</code> be implemented so that the default button
will not be activated and the text widget will not see the return key?
This is achieved by setting doit to <code>true</code>, and the detail
to <code>TRAVERSE_NONE</code>.
</p><p>
Note: A widget implementor will typically implement traversal using
only the doit flag to either enable or disable system traversal.
</p>
@see TraverseListener
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",754,-755
"
The traversal type.
<ul>
<li>{@link org.eclipse.swt.SWT#TRAVERSE_NONE}</li>
<li>{@link org.eclipse.swt.SWT#TRAVERSE_ESCAPE}</li>
<li>{@link org.eclipse.swt.SWT#TRAVERSE_RETURN}</li>
<li>{@link org.eclipse.swt.SWT#TRAVERSE_TAB_NEXT}</li>
<li>{@link org.eclipse.swt.SWT#TRAVERSE_TAB_PREVIOUS}</li>
<li>{@link org.eclipse.swt.SWT#TRAVERSE_ARROW_NEXT}</li>
<li>{@link org.eclipse.swt.SWT#TRAVERSE_ARROW_PREVIOUS}</li>
<li>{@link org.eclipse.swt.SWT#TRAVERSE_MNEMONIC}</li>
<li>{@link org.eclipse.swt.SWT#TRAVERSE_PAGE_NEXT}</li>
<li>{@link org.eclipse.swt.SWT#TRAVERSE_PAGE_PREVIOUS}</li>
</ul>
Setting this field will change the type of traversal.
For example, setting the detail to <code>TRAVERSE_NONE</code>
causes no traversal action to be taken.
When used in conjunction with the <code>doit</code> field, the
traversal detail field can be useful when overriding the default
traversal mechanism for a control. For example, setting the doit
field to <code>false</code> will cancel the operation and allow
the traversal key stroke to be delivered to the control. Setting
the doit field to <code>true</code> indicates that the traversal
described by the detail field is to be performed.
",755,-756
"
Constructs a new instance of this class based on the
information in the given untyped event.
@param e the untyped event containing the information
",756,-757
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the event
",757,-758
"
****************************************************************************
Copyright (c) 2000, 2016 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
Lars Vogel <Lars.Vogel@vogella.com> - Bug 502576
*****************************************************************************
",758,-759
"
Classes which implement this interface provide a method
that deals with the events that are generated when a
traverse event occurs in a control.
<p>
After creating an instance of a class that implements
this interface it can be added to a control using the
<code>addTraverseListener</code> method and removed using
the <code>removeTraverseListener</code> method. When a
traverse event occurs in a control, the keyTraversed method
will be invoked.
</p>
@see TraverseEvent
",759,-760
"
Sent when a traverse event occurs in a control.
<p>
A traverse event occurs when the user presses a traversal
key. Traversal keys are typically tab and arrow keys, along
with certain other keys on some platforms. Traversal key
constants beginning with <code>TRAVERSE_</code> are defined
in the <code>SWT</code> class.
</p>
@param e an event containing information about the traverse
",760,-761
"
****************************************************************************
Copyright (c) 2000, 2017 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",761,-762
"
This adapter class provides default implementations for the
methods described by the <code>TreeListener</code> interface.
<p>
Classes that wish to deal with <code>TreeEvent</code>s can
extend this class and override only the methods which they are
interested in.
</p>
<p>
An alternative to this class are the static helper methods
{@link TreeListener#treeCollapsedAdapter(java.util.function.Consumer)}
and
{@link TreeListener#treeExpandedAdapter(java.util.function.Consumer)},
which accept a lambda expression or a method reference that implements the event consumer.
</p>
@see TreeListener
@see TreeEvent
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",762,-763
"
Sent when a tree branch is collapsed.
The default behavior is to do nothing.
@param e an event containing information about the tree operation
",763,-764
"
Sent when a tree branch is expanded.
The default behavior is to do nothing.
@param e an event containing information about the tree operation
",764,-765
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",765,-766
"
Instances of this class are sent as a result of
trees being expanded and collapsed.
@see TreeListener
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",766,-767
"
Constructs a new instance of this class based on the
information in the given untyped event.
@param e the untyped event containing the information
",767,-768
"
****************************************************************************
Copyright (c) 2000, 2017 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",768,-769
"
Classes which implement this interface provide methods
that deal with the expanding and collapsing of tree
branches.
<p>
After creating an instance of a class that implements
this interface it can be added to a tree control using the
<code>addTreeListener</code> method and removed using
the <code>removeTreeListener</code> method. When a branch
of the tree is expanded or collapsed, the appropriate method
will be invoked.
</p>
@see TreeAdapter
@see TreeEvent
",769,-770
"
Sent when a tree branch is collapsed.
@param e an event containing information about the tree operation
",770,-771
"
Sent when a tree branch is expanded.
@param e an event containing information about the tree operation
",771,-772
"
Static helper method to create a <code>TreeListener</code> for the
{@link #treeCollapsed(TreeEvent e)}) method, given a lambda expression or a method reference.
@param c the consumer of the event
@return TreeListener
@since 3.107
",772,-773
"
Static helper method to create a <code>TreeListener</code> for the
{@link #treeExpanded(TreeEvent e)}) method, given a lambda expression or a method reference.
@param c the consumer of the event
@return TreeListener
@since 3.107
",773,-774
"
****************************************************************************
Copyright (c) 2000, 2017 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",774,-775
"
This is the super class for all typed event classes provided
by SWT. Typed events contain particular information which is
applicable to the event occurrence.
@see org.eclipse.swt.widgets.Event
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",775,-776
"
the display where the event occurred
@since 2.0
",776,-777
"
the widget that issued the event
",777,-778
"
the time that the event occurred.
NOTE: This field is an unsigned integer and should
be AND'ed with 0xFFFFFFFFL so that it can be treated
as a signed long.
",778,-779
"
a field for application use
",779,-780
"
Constructs a new instance of this class.
@param object the object that fired the event
",780,-781
"
Constructs a new instance of this class based on the
information in the argument.
@param e the low level event to initialize the receiver with
",781,-782
"
Returns the name of the event. This is the name of
the class without the package name.
@return the name of the event
",782,-783
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the event
",783,-784
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",784,-785
"
Instances of this class are sent as a result of
widgets handling keyboard events
@see VerifyListener
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",785,-786
"
the range of text being modified.
Setting these fields has no effect.
",786,-787
"
the new text that will be inserted.
Setting this field will change the text that is about to
be inserted or deleted.
",787,-788
"
Constructs a new instance of this class based on the
information in the given untyped event.
@param e the untyped event containing the information
",788,-789
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the event
",789,-790
"
****************************************************************************
Copyright (c) 2000, 2016 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
Lars Vogel <Lars.Vogel@vogella.com> - Bug 502576
*****************************************************************************
",790,-791
"
Classes which implement this interface provide a method
that deals with the events that are generated when text
is about to be modified.
<p>
After creating an instance of a class that implements
this interface it can be added to a text control using the
<code>addVerifyListener</code> method and removed using
the <code>removeVerifyListener</code> method. When the
text is about to be modified, the verifyText method
will be invoked.
</p>
@see VerifyEvent
",791,-792
"
Sent when the text is about to be modified.
<p>
A verify event occurs after the user has done something
to modify the text (typically typed a key), but before
the text is modified. The doit field in the verify event
indicates whether or not to modify the text.
</p>
@param e an event containing information about the verify
",792,-793
"
****************************************************************************
Copyright (c) 2000, 2016 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",793,-794
"
Implementers of <code>Drawable</code> can have a graphics context (GC)
created for them, and then they can be drawn on by sending messages to
their associated GC. SWT images, and device objects such as the Display
device and the Printer device, are drawables.
<p>
<b>IMPORTANT:</b> This interface is <em>not</em> part of the SWT
public API. It is marked public only so that it can be shared
within the packages provided by SWT. It should never be
referenced from application code.
</p>
@see Device
@see Image
@see GC
",794,-795
"
Invokes platform specific functionality to allocate a new GC handle.
<p>
<b>IMPORTANT:</b> This method is <em>not</em> part of the public
API for <code>Drawable</code>. It is marked public only so that it
can be shared within the packages provided by SWT. It is not
available on all platforms, and should never be called from
application code.
</p>
@param data the platform specific GC data
@return the platform specific GC handle
@noreference This method is not intended to be referenced by clients.
",795,-796
"
Invokes platform specific functionality to dispose a GC handle.
<p>
<b>IMPORTANT:</b> This method is <em>not</em> part of the public
API for <code>Drawable</code>. It is marked public only so that it
can be shared within the packages provided by SWT. It is not
available on all platforms, and should never be called from
application code.
</p>
@param handle the platform specific GC handle
@param data the platform specific GC data
@noreference This method is not intended to be referenced by clients.
",796,-797
"
Returns <code>true</code> iff coordinates can be auto-scaled on this
drawable and <code>false</code> if not. E.g. a {@link GC} method should not
auto-scale the bounds of a figure drawn on a Printer device, but it may have
to auto-scale when drawing on a high-DPI Display monitor.
@return <code>true</code> if auto-scaling is enabled for this drawable
@noreference This method is not intended to be referenced by clients.
",797,-798
"
****************************************************************************
Copyright (c) 2000, 2016 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",798,-799
"
Instances of this class represent glyph metrics.
<p>
The hashCode() method in this class uses the values of the public
fields to compute the hash value. When storing instances of the
class in hashed collections, do not modify these fields after the
object has been inserted.
</p>
<p>
Application code does <em>not</em> need to explicitly release the
resources managed by each instance when those instances are no longer
required, and thus no <code>dispose()</code> method is provided.
</p>
@see TextStyle
@see TextLayout
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
@since 3.2
",799,-800
"
the ascent of the GlyphMetrics
",800,-801
"
the descent of the GlyphMetrics
",801,-802
"
the width of the GlyphMetrics
",802,-803
"
Constructs an instance of this class with the given
ascent, descent and width values.
@param ascent the GlyphMetrics ascent
@param descent the GlyphMetrics descent
@param width the GlyphMetrics width
@exception IllegalArgumentException <ul>
<li>ERROR_INVALID_ARGUMENT - if the ascent, descent or width argument is negative</li>
</ul>
",803,-804
"
Compares the argument to the receiver, and returns true
if they represent the <em>same</em> object using a class
specific comparison.
@param object the object to compare with this object
@return <code>true</code> if the object is the same as this object and <code>false</code> otherwise
@see #hashCode()
",804,-805
"
Returns an integer hash code for the receiver. Any two
objects that return <code>true</code> when passed to
<code>equals</code> must return the same value for this
method.
@return the receiver's hash
@see #equals(Object)
",805,-806
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the <code>GlyphMetrics</code>
",806,-807
"
****************************************************************************
Copyright (c) 2000, 2016 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",807,-808
"
Instances of this class are device-independent descriptions
of images. They are typically used as an intermediate format
between loading from or writing to streams and creating an
<code>Image</code>.
<p>
Note that the public fields <code>x</code>, <code>y</code>,
<code>disposalMethod</code> and <code>delayTime</code> are
typically only used when the image is in a set of images used
for animation.
</p>
@see Image
@see ImageLoader
@see <a href=""http://www.eclipse.org/swt/snippets/#image"">ImageData snippets</a>
@see <a href=""http://www.eclipse.org/swt/examples.php"">SWT Example: ImageAnalyzer</a>
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",808,-809
"
The width of the image, in pixels.
",809,-810
"
The height of the image, in pixels.
",810,-811
"
The color depth of the image, in bits per pixel.
<p>
Note that a depth of 8 or less does not necessarily
mean that the image is palette indexed, or
conversely that a depth greater than 8 means that
the image is direct color.  Check the associated
PaletteData's isDirect field for such determinations.
",811,-812
"
The scanline padding.
<p>
If one scanline of the image is not a multiple of
this number, it will be padded with zeros until it is.
</p>
",812,-813
"
The number of bytes per scanline.
<p>
This is a multiple of the scanline padding.
</p>
",813,-814
"
The pixel data of the image.
<p>
Note that for 16 bit depth images the pixel data is stored
in least significant byte order; however, for 24bit and
32bit depth images the pixel data is stored in most
significant byte order.
</p>
",814,-815
"
The color table for the image.
",815,-816
"
The transparent pixel.
<p>
Pixels with this value are transparent.
</p><p>
The default is -1 which means 'no transparent pixel'.
</p>
",816,-817
"
An icon-specific field containing the data from the icon mask.
<p>
This is a 1 bit bitmap stored with the most significant
bit first.  The number of bytes per scanline is
'((width + 7) / 8 + (maskPad - 1)) / maskPad * maskPad'.
</p><p>
The default is null which means 'no transparency mask'.
</p>
",817,-818
"
An icon-specific field containing the scanline pad of the mask.
<p>
If one scanline of the transparency mask is not a
multiple of this number, it will be padded with zeros until
it is.
</p>
",818,-819
"
The alpha data of the image.
<p>
Every pixel can have an <em>alpha blending</em> value that
varies from 0, meaning fully transparent, to 255 meaning
fully opaque.  The number of bytes per scanline is
'width'.
</p>
",819,-820
"
The global alpha value to be used for every pixel.
<p>
If this value is set, the <code>alphaData</code> field
is ignored and when the image is rendered each pixel
will be blended with the background an amount
proportional to this value.
</p><p>
The default is -1 which means 'no global alpha value'
</p>
",820,-821
"
The type of file from which the image was read.
It is expressed as one of the following values:
<dl>
<dt><code>IMAGE_BMP</code></dt>
<dd>Windows BMP file format, no compression</dd>
<dt><code>IMAGE_BMP_RLE</code></dt>
<dd>Windows BMP file format, RLE compression if appropriate</dd>
<dt><code>IMAGE_GIF</code></dt>
<dd>GIF file format</dd>
<dt><code>IMAGE_ICO</code></dt>
<dd>Windows ICO file format</dd>
<dt><code>IMAGE_JPEG</code></dt>
<dd>JPEG file format</dd>
<dt><code>IMAGE_PNG</code></dt>
<dd>PNG file format</dd>
</dl>
",821,-822
"
The x coordinate of the top left corner of the image
within the logical screen (this field corresponds to
the GIF89a Image Left Position value).
",822,-823
"
The y coordinate of the top left corner of the image
within the logical screen (this field corresponds to
the GIF89a Image Top Position value).
",823,-824
"
A description of how to dispose of the current image
before displaying the next.
It is expressed as one of the following values:
<dl>
<dt><code>DM_UNSPECIFIED</code></dt>
<dd>disposal method not specified</dd>
<dt><code>DM_FILL_NONE</code></dt>
<dd>do nothing - leave the image in place</dd>
<dt><code>DM_FILL_BACKGROUND</code></dt>
<dd>fill with the background color</dd>
<dt><code>DM_FILL_PREVIOUS</code></dt>
<dd>restore the previous picture</dd>
</dl>
(this field corresponds to the GIF89a Disposal Method value)
",824,-825
"
The time to delay before displaying the next image
in an animation (this field corresponds to the GIF89a
Delay Time value).
",825,-826
"
Arbitrary channel width data to 8-bit conversion table.
",826,-827
"
Scaled 8x8 Bayer dither matrix.
",827,-828
"
Constructs a new, empty ImageData with the given width, height,
depth and palette. The data will be initialized to an (all zero)
array of the appropriate size.
@param width the width of the image
@param height the height of the image
@param depth the depth of the image
@param palette the palette of the image (must not be null)
@exception IllegalArgumentException <ul>
<li>ERROR_INVALID_ARGUMENT - if the width or height is zero or negative, or if the depth is not
one of 1, 2, 4, 8, 16, 24 or 32</li>
<li>ERROR_NULL_ARGUMENT - if the palette is null</li>
</ul>
",828,-829
"
Constructs a new, empty ImageData with the given width, height,
depth, palette, scanlinePad and data.
@param width the width of the image
@param height the height of the image
@param depth the depth of the image
@param palette the palette of the image
@param scanlinePad the padding of each line, in bytes
@param data the data of the image
@exception IllegalArgumentException <ul>
<li>ERROR_INVALID_ARGUMENT - if the width or height is zero or negative, or if the depth is not
one of 1, 2, 4, 8, 16, 24 or 32, or the data array is too small to contain the image data</li>
<li>ERROR_NULL_ARGUMENT - if the palette or data is null</li>
<li>ERROR_CANNOT_BE_ZERO - if the scanlinePad is zero</li>
</ul>
",829,-830
"
Constructs an <code>ImageData</code> loaded from the specified
input stream. Throws an error if an error occurs while loading
the image, or if the image has an unsupported type.  Application
code is still responsible for closing the input stream.
<p>
This constructor is provided for convenience when loading a single
image only. If the stream contains multiple images, only the first
one will be loaded. To load multiple images, use
<code>ImageLoader.load()</code>.
</p><p>
This constructor may be used to load a resource as follows:
</p>
<pre>
static ImageData loadImageData (Class clazz, String string) {
InputStream stream = clazz.getResourceAsStream (string);
if (stream == null) return null;
ImageData imageData = null;
try {
imageData = new ImageData (stream);
} catch (SWTException ex) {
} finally {
try {
stream.close ();
} catch (IOException ex) {}
}
return imageData;
}
</pre>
@param stream the input stream to load the image from (must not be null)
@exception IllegalArgumentException <ul>
<li>ERROR_NULL_ARGUMENT - if the stream is null</li>
</ul>
@exception SWTException <ul>
<li>ERROR_IO - if an IO error occurs while reading from the stream</li>
<li>ERROR_INVALID_IMAGE - if the image stream contains invalid data</li>
<li>ERROR_UNSUPPORTED_FORMAT - if the image stream contains an unrecognized format</li>
</ul>
@see ImageLoader#load(InputStream)
",830,-831
"
Constructs an <code>ImageData</code> loaded from a file with the
specified name. Throws an error if an error occurs loading the
image, or if the image has an unsupported type.
<p>
This constructor is provided for convenience when loading a single
image only. If the file contains multiple images, only the first
one will be loaded. To load multiple images, use
<code>ImageLoader.load()</code>.
</p>
@param filename the name of the file to load the image from (must not be null)
@exception IllegalArgumentException <ul>
<li>ERROR_NULL_ARGUMENT - if the file name is null</li>
</ul>
@exception SWTException <ul>
<li>ERROR_IO - if an IO error occurs while reading from the file</li>
<li>ERROR_INVALID_IMAGE - if the image file contains invalid data</li>
<li>ERROR_UNSUPPORTED_FORMAT - if the image file contains an unrecognized format</li>
</ul>
",831,-832
"
Prevents uninitialized instances from being created outside the package.
",832,-833
"
Constructs an image data by giving values for all non-computable fields.
<p>
This method is for internal use, and is not described further.
</p>
",833,-834
"
Initializes all fields in the receiver. This method must be called
by all public constructors to ensure that all fields are initialized
for a new ImageData object. If a new field is added to the class,
then it must be added to this method.
<p>
This method is for internal use, and is not described further.
</p>
",834,-835
"
Invokes internal SWT functionality to create a new instance of
this class.
<p>
<b>IMPORTANT:</b> This method is <em>not</em> part of the public
API for <code>ImageData</code>. It is marked public only so that it
can be shared within the packages provided by SWT. It is subject
to change without notice, and should never be called from
application code.
</p>
<p>
This method is for internal use, and is not described further.
</p>
@noreference This method is not intended to be referenced by clients.
",835,-836
"
Returns a new instance of the same class as the receiver,
whose slots have been filled in with <em>copies</em> of
the values in the slots of the receiver. That is, the
returned object is a <em>deep copy</em> of the receiver.
@return a copy of the receiver.
",836,-837
"
Returns the alpha value at offset <code>x</code> in
scanline <code>y</code> in the receiver's alpha data.
The alpha value is between 0 (transparent) and
255 (opaque).
@param x the x coordinate of the pixel to get the alpha value of
@param y the y coordinate of the pixel to get the alpha value of
@return the alpha value at the given coordinates
@exception IllegalArgumentException <ul>
<li>ERROR_INVALID_ARGUMENT - if either argument is out of range</li>
</ul>
",837,-838
"
Returns <code>getWidth</code> alpha values starting at offset
<code>x</code> in scanline <code>y</code> in the receiver's alpha
data starting at <code>startIndex</code>. The alpha values
are unsigned, between <code>(byte)0</code> (transparent) and
<code>(byte)255</code> (opaque).
@param x the x position of the pixel to begin getting alpha values
@param y the y position of the pixel to begin getting alpha values
@param getWidth the width of the data to get
@param alphas the buffer in which to put the alpha values
@param startIndex the offset into the image to begin getting alpha values
@exception IndexOutOfBoundsException if getWidth is too large
@exception IllegalArgumentException <ul>
<li>ERROR_NULL_ARGUMENT - if pixels is null</li>
<li>ERROR_INVALID_ARGUMENT - if x or y is out of bounds</li>
<li>ERROR_INVALID_ARGUMENT - if getWidth is negative</li>
</ul>
",838,-839
"
Returns the pixel value at offset <code>x</code> in
scanline <code>y</code> in the receiver's data.
@param x the x position of the pixel to get
@param y the y position of the pixel to get
@return the pixel at the given coordinates
@exception IllegalArgumentException <ul>
<li>ERROR_INVALID_ARGUMENT - if either argument is out of bounds</li>
</ul>
@exception SWTException <ul>
<li>ERROR_UNSUPPORTED_DEPTH if the depth is not one of 1, 2, 4, 8, 16, 24 or 32</li>
</ul>
",839,-840
"
Returns <code>getWidth</code> pixel values starting at offset
<code>x</code> in scanline <code>y</code> in the receiver's
data starting at <code>startIndex</code>.
@param x the x position of the first pixel to get
@param y the y position of the first pixel to get
@param getWidth the width of the data to get
@param pixels the buffer in which to put the pixels
@param startIndex the offset into the byte array to begin storing pixels
@exception IndexOutOfBoundsException if getWidth is too large
@exception IllegalArgumentException <ul>
<li>ERROR_NULL_ARGUMENT - if pixels is null</li>
<li>ERROR_INVALID_ARGUMENT - if x or y is out of bounds</li>
<li>ERROR_INVALID_ARGUMENT - if getWidth is negative</li>
</ul>
@exception SWTException <ul>
<li>ERROR_UNSUPPORTED_DEPTH - if the depth is not one of 1, 2, 4 or 8
(For higher depths, use the int[] version of this method.)</li>
</ul>
",840,-841
"
Returns <code>getWidth</code> pixel values starting at offset
<code>x</code> in scanline <code>y</code> in the receiver's
data starting at <code>startIndex</code>.
@param x the x position of the first pixel to get
@param y the y position of the first pixel to get
@param getWidth the width of the data to get
@param pixels the buffer in which to put the pixels
@param startIndex the offset into the buffer to begin storing pixels
@exception IndexOutOfBoundsException if getWidth is too large
@exception IllegalArgumentException <ul>
<li>ERROR_NULL_ARGUMENT - if pixels is null</li>
<li>ERROR_INVALID_ARGUMENT - if x or y is out of bounds</li>
<li>ERROR_INVALID_ARGUMENT - if getWidth is negative</li>
</ul>
@exception SWTException <ul>
<li>ERROR_UNSUPPORTED_DEPTH - if the depth is not one of 1, 2, 4, 8, 16, 24 or 32</li>
</ul>
",841,-842
"
Returns an array of <code>RGB</code>s which comprise the
indexed color table of the receiver, or null if the receiver
has a direct color model.
@return the RGB values for the image or null if direct color
@see PaletteData#getRGBs()
",842,-843
"
Returns an <code>ImageData</code> which specifies the
transparency mask information for the receiver. If the
receiver has no transparency or is not an icon, returns
an opaque mask.
@return the transparency mask
",843,-844
"
Returns the image transparency type, which will be one of
<code>SWT.TRANSPARENCY_NONE</code>, <code>SWT.TRANSPARENCY_MASK</code>,
<code>SWT.TRANSPARENCY_PIXEL</code> or <code>SWT.TRANSPARENCY_ALPHA</code>.
@return the receiver's transparency type
",844,-845
"
Returns the byte order of the receiver.
@return MSB_FIRST or LSB_FIRST
",845,-846
"
Returns a copy of the receiver which has been stretched or
shrunk to the specified size. If either the width or height
is negative, the resulting image will be inverted in the
associated axis.
@param width the width of the new ImageData
@param height the height of the new ImageData
@return a scaled copy of the image
",846,-847
"
Sets the alpha value at offset <code>x</code> in
scanline <code>y</code> in the receiver's alpha data.
The alpha value must be between 0 (transparent)
and 255 (opaque).
@param x the x coordinate of the alpha value to set
@param y the y coordinate of the alpha value to set
@param alpha the value to set the alpha to
@exception IllegalArgumentException <ul>
<li>ERROR_INVALID_ARGUMENT - if x or y is out of bounds</li>
</ul>
",847,-848
"
Sets the alpha values starting at offset <code>x</code> in
scanline <code>y</code> in the receiver's alpha data to the
values from the array <code>alphas</code> starting at
<code>startIndex</code>. The alpha values must be between
<code>(byte)0</code> (transparent) and <code>(byte)255</code> (opaque)
@param x the x coordinate of the pixel to being setting the alpha values
@param y the y coordinate of the pixel to being setting the alpha values
@param putWidth the width of the alpha values to set
@param alphas the alpha values to set
@param startIndex the index at which to begin setting
@exception IndexOutOfBoundsException if putWidth is too large
@exception IllegalArgumentException <ul>
<li>ERROR_NULL_ARGUMENT - if pixels is null</li>
<li>ERROR_INVALID_ARGUMENT - if x or y is out of bounds</li>
<li>ERROR_INVALID_ARGUMENT - if putWidth is negative</li>
</ul>
",848,-849
"
Sets the pixel value at offset <code>x</code> in
scanline <code>y</code> in the receiver's data.
@param x the x coordinate of the pixel to set
@param y the y coordinate of the pixel to set
@param pixelValue the value to set the pixel to
@exception IllegalArgumentException <ul>
<li>ERROR_INVALID_ARGUMENT - if x or y is out of bounds</li>
</ul>
@exception SWTException <ul>
<li>ERROR_UNSUPPORTED_DEPTH if the depth is not one of 1, 2, 4, 8, 16, 24 or 32</li>
</ul>
",849,-850
"
Sets the pixel values starting at offset <code>x</code> in
scanline <code>y</code> in the receiver's data to the
values from the array <code>pixels</code> starting at
<code>startIndex</code>.
@param x the x position of the pixel to set
@param y the y position of the pixel to set
@param putWidth the width of the pixels to set
@param pixels the pixels to set
@param startIndex the index at which to begin setting
@exception IndexOutOfBoundsException if putWidth is too large
@exception IllegalArgumentException <ul>
<li>ERROR_NULL_ARGUMENT - if pixels is null</li>
<li>ERROR_INVALID_ARGUMENT - if x or y is out of bounds</li>
<li>ERROR_INVALID_ARGUMENT - if putWidth is negative</li>
</ul>
@exception SWTException <ul>
<li>ERROR_UNSUPPORTED_DEPTH if the depth is not one of 1, 2, 4, 8
(For higher depths, use the int[] version of this method.)</li>
</ul>
",850,-851
"
Sets the pixel values starting at offset <code>x</code> in
scanline <code>y</code> in the receiver's data to the
values from the array <code>pixels</code> starting at
<code>startIndex</code>.
@param x the x position of the pixel to set
@param y the y position of the pixel to set
@param putWidth the width of the pixels to set
@param pixels the pixels to set
@param startIndex the index at which to begin setting
@exception IndexOutOfBoundsException if putWidth is too large
@exception IllegalArgumentException <ul>
<li>ERROR_NULL_ARGUMENT - if pixels is null</li>
<li>ERROR_INVALID_ARGUMENT - if x or y is out of bounds</li>
<li>ERROR_INVALID_ARGUMENT - if putWidth is negative</li>
</ul>
@exception SWTException <ul>
<li>ERROR_UNSUPPORTED_DEPTH if the depth is not one of 1, 2, 4, 8, 16, 24 or 32</li>
</ul>
",851,-852
"
Returns a palette with 2 colors: black & white.
",852,-853
"
Gets the offset of the most significant bit for
the given mask.
",853,-854
"
Finds the closest match.
",854,-855
"
Blit operation bits to be OR'ed together to specify the desired operation.
",855,-856
"
Alpha mode, values 0 - 255 specify global alpha level
",856,-857
"
Byte and bit order constants.
",857,-858
"
Data types (internal)
",858,-859
"
Blits a direct palette image into a direct palette image.
<p>
Note: When the source and destination depth, order and masks
are pairwise equal and the blitter operation is BLIT_SRC,
the masks are ignored.  Hence when not changing the image
data format, 0 may be specified for the masks.
</p>
@param op the blitter operation: a combination of BLIT_xxx flags
(see BLIT_xxx constants)
@param srcData the source byte array containing image data
@param srcDepth the source depth: one of 8, 16, 24, 32
@param srcStride the source number of bytes per line
@param srcOrder the source byte ordering: one of MSB_FIRST or LSB_FIRST;
ignored if srcDepth is not 16 or 32
@param srcX the top-left x-coord of the source blit region
@param srcY the top-left y-coord of the source blit region
@param srcWidth the width of the source blit region
@param srcHeight the height of the source blit region
@param srcRedMask the source red channel mask
@param srcGreenMask the source green channel mask
@param srcBlueMask the source blue channel mask
@param alphaMode the alpha blending or mask mode, may be
an integer 0-255 for global alpha; ignored if BLIT_ALPHA
not specified in the blitter operations
(see ALPHA_MODE_xxx constants)
@param alphaData the alpha blending or mask data, varies depending
on the value of alphaMode and sometimes ignored
@param alphaStride the alpha data number of bytes per line
@param alphaX the top-left x-coord of the alpha blit region
@param alphaY the top-left y-coord of the alpha blit region
@param destData the destination byte array containing image data
@param destDepth the destination depth: one of 8, 16, 24, 32
@param destStride the destination number of bytes per line
@param destOrder the destination byte ordering: one of MSB_FIRST or LSB_FIRST;
ignored if destDepth is not 16 or 32
@param destX the top-left x-coord of the destination blit region
@param destY the top-left y-coord of the destination blit region
@param destWidth the width of the destination blit region
@param destHeight the height of the destination blit region
@param destRedMask the destination red channel mask
@param destGreenMask the destination green channel mask
@param destBlueMask the destination blue channel mask
@param flipX if true the resulting image is flipped along the vertical axis
@param flipY if true the resulting image is flipped along the horizontal axis
",859,-860
"
Blits an index palette image into an index palette image.
<p>
Note: The source and destination red, green, and blue
arrays may be null if no alpha blending or dither is to be
performed.
</p>
@param op the blitter operation: a combination of BLIT_xxx flags
(see BLIT_xxx constants)
@param srcData the source byte array containing image data
@param srcDepth the source depth: one of 1, 2, 4, 8
@param srcStride the source number of bytes per line
@param srcOrder the source byte ordering: one of MSB_FIRST or LSB_FIRST;
ignored if srcDepth is not 1
@param srcX the top-left x-coord of the source blit region
@param srcY the top-left y-coord of the source blit region
@param srcWidth the width of the source blit region
@param srcHeight the height of the source blit region
@param srcReds the source palette red component intensities
@param srcGreens the source palette green component intensities
@param srcBlues the source palette blue component intensities
@param alphaMode the alpha blending or mask mode, may be
an integer 0-255 for global alpha; ignored if BLIT_ALPHA
not specified in the blitter operations
(see ALPHA_MODE_xxx constants)
@param alphaData the alpha blending or mask data, varies depending
on the value of alphaMode and sometimes ignored
@param alphaStride the alpha data number of bytes per line
@param alphaX the top-left x-coord of the alpha blit region
@param alphaY the top-left y-coord of the alpha blit region
@param destData the destination byte array containing image data
@param destDepth the destination depth: one of 1, 2, 4, 8
@param destStride the destination number of bytes per line
@param destOrder the destination byte ordering: one of MSB_FIRST or LSB_FIRST;
ignored if destDepth is not 1
@param destX the top-left x-coord of the destination blit region
@param destY the top-left y-coord of the destination blit region
@param destWidth the width of the destination blit region
@param destHeight the height of the destination blit region
@param destReds the destination palette red component intensities
@param destGreens the destination palette green component intensities
@param destBlues the destination palette blue component intensities
@param flipX if true the resulting image is flipped along the vertical axis
@param flipY if true the resulting image is flipped along the horizontal axis
",860,-861
"
Blits an index palette image into a direct palette image.
<p>
Note: The source and destination masks and palettes must
always be fully specified.
</p>
@param op the blitter operation: a combination of BLIT_xxx flags
(see BLIT_xxx constants)
@param srcData the source byte array containing image data
@param srcDepth the source depth: one of 1, 2, 4, 8
@param srcStride the source number of bytes per line
@param srcOrder the source byte ordering: one of MSB_FIRST or LSB_FIRST;
ignored if srcDepth is not 1
@param srcX the top-left x-coord of the source blit region
@param srcY the top-left y-coord of the source blit region
@param srcWidth the width of the source blit region
@param srcHeight the height of the source blit region
@param srcReds the source palette red component intensities
@param srcGreens the source palette green component intensities
@param srcBlues the source palette blue component intensities
@param alphaMode the alpha blending or mask mode, may be
an integer 0-255 for global alpha; ignored if BLIT_ALPHA
not specified in the blitter operations
(see ALPHA_MODE_xxx constants)
@param alphaData the alpha blending or mask data, varies depending
on the value of alphaMode and sometimes ignored
@param alphaStride the alpha data number of bytes per line
@param alphaX the top-left x-coord of the alpha blit region
@param alphaY the top-left y-coord of the alpha blit region
@param destData the destination byte array containing image data
@param destDepth the destination depth: one of 8, 16, 24, 32
@param destStride the destination number of bytes per line
@param destOrder the destination byte ordering: one of MSB_FIRST or LSB_FIRST;
ignored if destDepth is not 16 or 32
@param destX the top-left x-coord of the destination blit region
@param destY the top-left y-coord of the destination blit region
@param destWidth the width of the destination blit region
@param destHeight the height of the destination blit region
@param destRedMask the destination red channel mask
@param destGreenMask the destination green channel mask
@param destBlueMask the destination blue channel mask
@param flipX if true the resulting image is flipped along the vertical axis
@param flipY if true the resulting image is flipped along the horizontal axis
",861,-862
"
Blits a direct palette image into an index palette image.
<p>
Note: The source and destination masks and palettes must
always be fully specified.
</p>
@param op the blitter operation: a combination of BLIT_xxx flags
(see BLIT_xxx constants)
@param srcData the source byte array containing image data
@param srcDepth the source depth: one of 8, 16, 24, 32
@param srcStride the source number of bytes per line
@param srcOrder the source byte ordering: one of MSB_FIRST or LSB_FIRST;
ignored if srcDepth is not 16 or 32
@param srcX the top-left x-coord of the source blit region
@param srcY the top-left y-coord of the source blit region
@param srcWidth the width of the source blit region
@param srcHeight the height of the source blit region
@param srcRedMask the source red channel mask
@param srcGreenMask the source green channel mask
@param srcBlueMask the source blue channel mask
@param alphaMode the alpha blending or mask mode, may be
an integer 0-255 for global alpha; ignored if BLIT_ALPHA
not specified in the blitter operations
(see ALPHA_MODE_xxx constants)
@param alphaData the alpha blending or mask data, varies depending
on the value of alphaMode and sometimes ignored
@param alphaStride the alpha data number of bytes per line
@param alphaX the top-left x-coord of the alpha blit region
@param alphaY the top-left y-coord of the alpha blit region
@param destData the destination byte array containing image data
@param destDepth the destination depth: one of 1, 2, 4, 8
@param destStride the destination number of bytes per line
@param destOrder the destination byte ordering: one of MSB_FIRST or LSB_FIRST;
ignored if destDepth is not 1
@param destX the top-left x-coord of the destination blit region
@param destY the top-left y-coord of the destination blit region
@param destWidth the width of the destination blit region
@param destHeight the height of the destination blit region
@param destReds the destination palette red component intensities
@param destGreens the destination palette green component intensities
@param destBlues the destination palette blue component intensities
@param flipX if true the resulting image is flipped along the vertical axis
@param flipY if true the resulting image is flipped along the horizontal axis
",862,-863
"
Computes the required channel shift from a mask.
",863,-864
"
Computes the required channel width (depth) from a mask.
",864,-865
"
Extracts a field from packed RGB data given a mask for that field.
",865,-866
"
Creates an ImageData containing one band's worth of a gradient filled
block.  If <code>vertical</code> is true, the band must be tiled
horizontally to fill a region, otherwise it must be tiled vertically.
@param width the width of the region to be filled
@param height the height of the region to be filled
@param vertical if true sweeps from top to bottom, else
sweeps from left to right
@param fromRGB the color to start with
@param toRGB the color to end with
@param redBits the number of significant red bits, 0 for palette modes
@param greenBits the number of significant green bits, 0 for palette modes
@param blueBits the number of significant blue bits, 0 for palette modes
@return the new ImageData
",866,-867
"
Renders a gradient onto a GC.
<p>
This is a GC helper.
</p>
@param gc the GC to render the gradient onto
@param device the device the GC belongs to
@param x the top-left x coordinate of the region to be filled
@param y the top-left y coordinate of the region to be filled
@param width the width of the region to be filled
@param height the height of the region to be filled
@param vertical if true sweeps from top to bottom, else
sweeps from left to right
@param fromRGB the color to start with
@param toRGB the color to end with
@param redBits the number of significant red bits, 0 for palette modes
@param greenBits the number of significant green bits, 0 for palette modes
@param blueBits the number of significant blue bits, 0 for palette modes
",867,-868
"
****************************************************************************
Copyright (c) 2000, 2006 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",868,-869
"
Internal class that separates ImageData from ImageLoader
to allow removal of ImageLoader from the toolkit.
",869,-870
"
****************************************************************************
Copyright (c) 2018 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",870,-871
"
Interface to provide a callback mechanism to get information about images
when the application is moved from a low DPI monitor to a high DPI monitor.
This provides API which will be called by SWT during the image rendering.
This interface needs to be implemented by client code to provide the
image information on demand.
@since 3.104
",871,-872
"
Returns the image data for the given zoom level.
<p>
If no image is available for a particular zoom level, this method should
return <code>null</code>. For <code>zoom == 100</code>, returning
<code>null</code> is not allowed, and SWT will throw an exception.
@param zoom
The zoom level in % of the standard resolution (which is 1
physical monitor pixel == 1 SWT logical point). Typically 100,
150, or 200.
@return the image data, or <code>null</code> if <code>zoom != 100</code>
and no image is available for the given zoom level.
@since 3.104
",872,-873
"
****************************************************************************
Copyright (c) 2018 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",873,-874
"
Interface to provide a callback mechanism to get information about images
when the application is moved from a low DPI monitor to a high DPI monitor.
This provides API which will be called by SWT during the image rendering.
This interface needs to be implemented by client code to provide the
image information on demand.
@since 3.104
",874,-875
"
Returns the image filePath for the given zoom level.
<p>
If no image is available for a particular zoom level, this method should
return <code>null</code>. For <code>zoom == 100</code>, returning
<code>null</code> is not allowed, and SWT will throw an exception.
@param zoom
The zoom level in % of the standard resolution (which is 1
physical monitor pixel == 1 SWT logical point). Typically 100,
150, or 200.
@return the image filePath, or <code>null</code> if
<code>zoom != 100</code> and no image is available for the given
zoom level.
@since 3.104
",875,-876
"
****************************************************************************
Copyright (c) 2000, 2017 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",876,-877
"
Instances of this class are sent as a result of the incremental
loading of image data.
<p>
<b>Notes:</b>
</p><ul>
<li>The number of events which will be sent when loading images
is not constant. It varies by image type, and for JPEG images it
varies from image to image.</li>
<li>For image sources which contain multiple images, the
<code>endOfImage</code> flag in the event will be set to true
after each individual image is loaded.</li>
</ul>
@see ImageLoader
@see ImageLoaderListener
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",877,-878
"
if the <code>endOfImage</code> flag is false, then this is a
partially complete copy of the current <code>ImageData</code>,
otherwise this is a completely loaded <code>ImageData</code>
",878,-879
"
the zero-based count of image data increments -- this is
equivalent to the number of events that have been generated
while loading a particular image
",879,-880
"
If this flag is true, then the current image data has been
completely loaded, otherwise the image data is only partially
loaded, and further ImageLoader events will occur unless an
exception is thrown
",880,-881
"
Constructs a new instance of this class given the event source and
the values to store in its fields.
@param source the ImageLoader that was loading when the event occurred
@param imageData the image data for the event
@param incrementCount the image data increment for the event
@param endOfImage the end of image flag for the event
",881,-882
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the event
",882,-883
"
****************************************************************************
Copyright (c) 2000, 2017 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",883,-884
"
Classes which implement this interface provide methods
that deal with the incremental loading of image data.
<p>
After creating an instance of a class that implements
this interface it can be added to an image loader using the
<code>addImageLoaderListener</code> method and removed using
the <code>removeImageLoaderListener</code> method. When
image data is either partially or completely loaded, this
method will be invoked.
</p>
@see ImageLoader
@see ImageLoaderEvent
",884,-885
"
Sent when image data is either partially or completely loaded.
<p>
The timing of when this method is called varies depending on
the format of the image being loaded.
</p>
@param e an event containing information about the image loading operation
",885,-886
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",886,-887
"
<code>LineAttributes</code> defines a set of line attributes that
can be modified in a GC.
<p>
Application code does <em>not</em> need to explicitly release the
resources managed by each instance when those instances are no longer
required, and thus no <code>dispose()</code> method is provided.
</p>
@see GC#getLineAttributes()
@see GC#setLineAttributes(LineAttributes)
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
@since 3.3
",887,-888
"
The line width.
",888,-889
"
The line style.
@see org.eclipse.swt.SWT#LINE_CUSTOM
@see org.eclipse.swt.SWT#LINE_DASH
@see org.eclipse.swt.SWT#LINE_DASHDOT
@see org.eclipse.swt.SWT#LINE_DASHDOTDOT
@see org.eclipse.swt.SWT#LINE_DOT
@see org.eclipse.swt.SWT#LINE_SOLID
",889,-890
"
The line cap style.
@see org.eclipse.swt.SWT#CAP_FLAT
@see org.eclipse.swt.SWT#CAP_ROUND
@see org.eclipse.swt.SWT#CAP_SQUARE
",890,-891
"
The line join style.
@see org.eclipse.swt.SWT#JOIN_BEVEL
@see org.eclipse.swt.SWT#JOIN_MITER
@see org.eclipse.swt.SWT#JOIN_ROUND
",891,-892
"
The line dash style for SWT.LINE_CUSTOM.
",892,-893
"
The line dash style offset for SWT.LINE_CUSTOM.
",893,-894
"
The line miter limit.
",894,-895
"
Create a new line attributes with the specified line width.
@param width the line width
",895,-896
"
Create a new line attributes with the specified line cap, join and width.
@param width the line width
@param cap the line cap style
@param join the line join style
",896,-897
"
Create a new line attributes with the specified arguments.
@param width the line width
@param cap the line cap style
@param join the line join style
@param style the line style
@param dash the line dash style
@param dashOffset the line dash style offset
@param miterLimit the line miter limit
",897,-898
"
Compares the argument to the receiver, and returns true
if they represent the <em>same</em> object using a class
specific comparison.
@param object the object to compare with this object
@return <code>true</code> if the object is the same as this object and <code>false</code> otherwise
@see #hashCode()
",898,-899
"
Returns an integer hash code for the receiver. Any two
objects that return <code>true</code> when passed to
<code>equals</code> must return the same value for this
method.
@return the receiver's hash
@see #equals(Object)
",899,-900
"
****************************************************************************
Copyright (c) 2000, 2015 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
Lars Vogel <Lars.Vogel@vogella.com> - Bug 483460
*****************************************************************************
",900,-901
"
Instances of this class describe the color data used by an image.
<p>
Depending on the depth of the image, the PaletteData can take one
of two forms, indicated by the isDirect field:
</p>
<dl>
<dt>
<em>isDirect is false</em>
</dt>
<dd>
If isDirect is <code>false</code>, this palette is an indexed
palette which maps pixel values to RGBs. The actual RGB values
may be retrieved by using the getRGBs() method.
</dd>
<dt>
<em>isDirect is true</em>
</dt>
<dd>
If isDirect is <code>true</code>, this palette is a direct color
palette. Instead of containing RGB values, it contains red,
green and blue mask and shift information which indicates how
the color components may be extracted from a given pixel.
This means that the RGB value is actually encoded in the pixel value.
<p>
In this case, the shift data is the number of bits required to shift
the RGB value to the left in order to align the high bit of the
corresponding mask with the high bit of the first byte. This number
may be negative, so care must be taken when shifting. For example,
with a red mask of 0xFF0000, the red shift would be -16. With a red
mask of 0x1F, the red shift would be 3.
</p>
</dd>
</dl>
@see Image
@see RGB
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",901,-902
"
true if the receiver is a direct palette,
and false otherwise
",902,-903
"
the RGB values for an indexed palette, where the
indices of the array correspond to pixel values
",903,-904
"
the red mask for a direct palette
",904,-905
"
the green mask for a direct palette
",905,-906
"
the blue mask for a direct palette
",906,-907
"
the red shift for a direct palette
",907,-908
"
the green shift for a direct palette
",908,-909
"
the blue shift for a direct palette
",909,-910
"
Constructs a new indexed palette given an array of RGB values.
@param colors the array of <code>RGB</code>s for the palette
@exception IllegalArgumentException <ul>
<li>ERROR_NULL_ARGUMENT - if the argument is null</li>
</ul>
",910,-911
"
Constructs a new direct palette given the red, green and blue masks.
@param redMask the red mask
@param greenMask the green mask
@param blueMask the blue mask
",911,-912
"
Returns the pixel value corresponding to the given <code>RGB</code>.
@param rgb the RGB to get the pixel value for
@return the pixel value for the given RGB
@exception IllegalArgumentException <ul>
<li>ERROR_NULL_ARGUMENT - if the argument is null</li>
<li>ERROR_INVALID_ARGUMENT - if the RGB is not found in the palette</li>
</ul>
",912,-913
"
Returns an <code>RGB</code> corresponding to the given pixel value.
@param pixel the pixel to get the RGB value for
@return the RGB value for the given pixel
@exception IllegalArgumentException <ul>
<li>ERROR_NULL_ARGUMENT - if the argument is null</li>
<li>ERROR_INVALID_ARGUMENT - if the pixel does not exist in the palette</li>
</ul>
",913,-914
"
Returns all the RGB values in the receiver if it is an
indexed palette, or null if it is a direct palette.
@return the <code>RGB</code>s for the receiver or null
",914,-915
"
Computes the shift value for a given mask.
@param mask the mask to compute the shift for
@return the shift amount
@see PaletteData
",915,-916
"
****************************************************************************
Copyright (c) 2000, 2008 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",916,-917
"
Instances of this class describe device-independent paths.
@see Path
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
@since 3.1
",917,-918
"
The type of each point.
",918,-919
"
The points of a path.
",919,-920
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",920,-921
"
Instances of this class represent places on the (x, y)
coordinate plane.
<p>
The coordinate space for rectangles and points is considered
to have increasing values downward and to the right from its
origin making this the normal, computer graphics oriented notion
of (x, y) coordinates rather than the strict mathematical one.
</p>
<p>
The hashCode() method in this class uses the values of the public
fields to compute the hash value. When storing instances of the
class in hashed collections, do not modify these fields after the
object has been inserted.
</p>
<p>
Application code does <em>not</em> need to explicitly release the
resources managed by each instance when those instances are no longer
required, and thus no <code>dispose()</code> method is provided.
</p>
@see Rectangle
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",921,-922
"
the x coordinate of the point
",922,-923
"
the y coordinate of the point
",923,-924
"
Constructs a new point with the given x and y coordinates.
@param x the x coordinate of the new point
@param y the y coordinate of the new point
",924,-925
"
Compares the argument to the receiver, and returns true
if they represent the <em>same</em> object using a class
specific comparison.
@param object the object to compare with this object
@return <code>true</code> if the object is the same as this object and <code>false</code> otherwise
@see #hashCode()
",925,-926
"
Returns an integer hash code for the receiver. Any two
objects that return <code>true</code> when passed to
<code>equals</code> must return the same value for this
method.
@return the receiver's hash
@see #equals(Object)
",926,-927
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the point
",927,-928
"
****************************************************************************
Copyright (c) 2000, 2013 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",928,-929
"
Instances of this class are descriptions of colors in
terms of the primary additive color model (red, green and
blue). A color may be described in terms of the relative
intensities of these three primary colors. The brightness
of each color is specified by a value in the range 0 to 255,
where 0 indicates no color (blackness) and 255 indicates
maximum intensity.
<p>
The hashCode() method in this class uses the values of the public
fields to compute the hash value. When storing instances of the
class in hashed collections, do not modify these fields after the
object has been inserted.
</p>
<p>
Application code does <em>not</em> need to explicitly release the
resources managed by each instance when those instances are no longer
required, and thus no <code>dispose()</code> method is provided.
</p>
@see Color
@see <a href=""http://www.eclipse.org/swt/snippets/#color"">Color and RGB snippets</a>
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",929,-930
"
the red component of the RGB
",930,-931
"
the green component of the RGB
",931,-932
"
the blue component of the RGB
",932,-933
"
Constructs an instance of this class with the given
red, green and blue values.
@param red the red component of the new instance
@param green the green component of the new instance
@param blue the blue component of the new instance
@exception IllegalArgumentException <ul>
<li>ERROR_INVALID_ARGUMENT - if the red, green or blue argument is not between 0 and 255</li>
</ul>
",933,-934
"
Constructs an instance of this class with the given
hue, saturation, and brightness.
@param hue the hue value for the HSB color (from 0 to 360)
@param saturation the saturation value for the HSB color (from 0 to 1)
@param brightness the brightness value for the HSB color (from 0 to 1)
@exception IllegalArgumentException <ul>
<li>ERROR_INVALID_ARGUMENT - if the hue is not between 0 and 360 or
the saturation or brightness is not between 0 and 1</li>
</ul>
@since 3.2
",934,-935
"
Returns the hue, saturation, and brightness of the color.
@return color space values in float format:<ul>
<li>hue (from 0 to 360)</li>
<li>saturation (from 0 to 1)</li>
<li>brightness (from 0 to 1)</li>
</ul>
@see #RGB(float, float, float)
@since 3.2
",935,-936
"
Compares the argument to the receiver, and returns true
if they represent the <em>same</em> object using a class
specific comparison.
@param object the object to compare with this object
@return <code>true</code> if the object is the same as this object and <code>false</code> otherwise
@see #hashCode()
",936,-937
"
Returns an integer hash code for the receiver. Any two
objects that return <code>true</code> when passed to
<code>equals</code> must return the same value for this
method.
@return the receiver's hash
@see #equals(Object)
",937,-938
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the <code>RGB</code>
",938,-939
"
****************************************************************************
Copyright (c) 2015, 2016 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",939,-940
"
Instances of this class are descriptions of colors in
terms of the primary additive color model (red, green, blue
and alpha). A color may be described in terms of the relative
intensities of these three primary colors. The brightness
of each color is specified by a value in the range 0 to 255,
where 0 indicates no color (blackness) and 255 indicates
maximum intensity and for alpha 0 indicates transparent and
255 indicates opaque.
<p>
The hashCode() method in this class uses the values of the public
fields to compute the hash value. When storing instances of the
class in hashed collections, do not modify these fields after the
object has been inserted.
</p>
<p>
Application code does <em>not</em> need to explicitly release the
resources managed by each instance when those instances are no longer
required, and thus no <code>dispose()</code> method is provided.
</p>
@see Color
@see <a href=""http://www.eclipse.org/swt/snippets/#color"">Color and RGB snippets</a>
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
@since 3.104
",940,-941
"
the RGB component of the RGBA
",941,-942
"
the alpha component of the RGBA
",942,-943
"
Constructs an instance of this class with the given
red, green, blue and alpha values.
@param red the red component of the new instance
@param green the green component of the new instance
@param blue the blue component of the new instance
@param alpha the alpha component of the new instance
@exception IllegalArgumentException <ul>
<li>ERROR_INVALID_ARGUMENT - if the red, green, blue or alpha argument is not between 0 and 255</li>
</ul>
",943,-944
"
Constructs an instance of this class with the given
hue, saturation, and brightness.
@param hue the hue value for the HSBA color (from 0 to 360)
@param saturation the saturation value for the HSBA color (from 0 to 1)
@param brightness the brightness value for the HSBA color (from 0 to 1)
@param alpha the alpha value for the HSBA color (from 0 to 255)
@exception IllegalArgumentException <ul>
<li>ERROR_INVALID_ARGUMENT - if the hue is not between 0 and 360 or
the saturation or brightness is not between 0 and 1 or if the alpha
is not between 0 and 255</li>
</ul>
",944,-945
"
Returns the hue, saturation, and brightness of the color.
@return color space values in float format:<ul>
<li>hue (from 0 to 360)</li>
<li>saturation (from 0 to 1)</li>
<li>brightness (from 0 to 1)</li>
<li>alpha (from 0 to 255)</li>
</ul>
@see #RGBA(float, float, float, float)
",945,-946
"
Compares the argument to the receiver, and returns true
if they represent the <em>same</em> object using a class
specific comparison.
@param object the object to compare with this object
@return <code>true</code> if the object is the same as this object and <code>false</code> otherwise
@see #hashCode()
",946,-947
"
Returns an integer hash code for the receiver. Any two
objects that return <code>true</code> when passed to
<code>equals</code> must return the same value for this
method.
@return the receiver's hash
@see #equals(Object)
",947,-948
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the <code>RGBA</code>
",948,-949
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",949,-950
"
Instances of this class represent rectangular areas in an
(x, y) coordinate system. The top left corner of the rectangle
is specified by its x and y values, and the extent of the
rectangle is specified by its width and height.
<p>
The coordinate space for rectangles and points is considered
to have increasing values downward and to the right from its
origin making this the normal, computer graphics oriented notion
of (x, y) coordinates rather than the strict mathematical one.
</p>
<p>
The hashCode() method in this class uses the values of the public
fields to compute the hash value. When storing instances of the
class in hashed collections, do not modify these fields after the
object has been inserted.
</p>
<p>
Application code does <em>not</em> need to explicitly release the
resources managed by each instance when those instances are no longer
required, and thus no <code>dispose()</code> method is provided.
</p>
@see Point
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",950,-951
"
the x coordinate of the rectangle
",951,-952
"
the y coordinate of the rectangle
",952,-953
"
the width of the rectangle
",953,-954
"
the height of the rectangle
",954,-955
"
Construct a new instance of this class given the
x, y, width and height values.
@param x the x coordinate of the origin of the rectangle
@param y the y coordinate of the origin of the rectangle
@param width the width of the rectangle
@param height the height of the rectangle
",955,-956
"
Destructively replaces the x, y, width and height values
in the receiver with ones which represent the union of the
rectangles specified by the receiver and the given rectangle.
<p>
The union of two rectangles is the smallest single rectangle
that completely covers both of the areas covered by the two
given rectangles.
</p>
@param rect the rectangle to merge with the receiver
@exception IllegalArgumentException <ul>
<li>ERROR_NULL_ARGUMENT - if the argument is null</li>
</ul>
",956,-957
"
Returns <code>true</code> if the point specified by the
arguments is inside the area specified by the receiver,
and <code>false</code> otherwise.
@param x the x coordinate of the point to test for containment
@param y the y coordinate of the point to test for containment
@return <code>true</code> if the rectangle contains the point and <code>false</code> otherwise
",957,-958
"
Returns <code>true</code> if the given point is inside the
area specified by the receiver, and <code>false</code>
otherwise.
@param pt the point to test for containment
@return <code>true</code> if the rectangle contains the point and <code>false</code> otherwise
@exception IllegalArgumentException <ul>
<li>ERROR_NULL_ARGUMENT - if the argument is null</li>
</ul>
",958,-959
"
Compares the argument to the receiver, and returns true
if they represent the <em>same</em> object using a class
specific comparison.
@param object the object to compare with this object
@return <code>true</code> if the object is the same as this object and <code>false</code> otherwise
@see #hashCode()
",959,-960
"
Returns an integer hash code for the receiver. Any two
objects that return <code>true</code> when passed to
<code>equals</code> must return the same value for this
method.
@return the receiver's hash
@see #equals(Object)
",960,-961
"
Destructively replaces the x, y, width and height values
in the receiver with ones which represent the intersection of the
rectangles specified by the receiver and the given rectangle.
@param rect the rectangle to intersect with the receiver
@exception IllegalArgumentException <ul>
<li>ERROR_NULL_ARGUMENT - if the argument is null</li>
</ul>
since 3.0
",961,-962
"
Returns a new rectangle which represents the intersection
of the receiver and the given rectangle.
<p>
The intersection of two rectangles is the rectangle that
covers the area which is contained within both rectangles.
</p>
@param rect the rectangle to intersect with the receiver
@return the intersection of the receiver and the argument
@exception IllegalArgumentException <ul>
<li>ERROR_NULL_ARGUMENT - if the argument is null</li>
</ul>
",962,-963
"
Returns <code>true</code> if the rectangle described by the
arguments intersects with the receiver and <code>false</code>
otherwise.
<p>
Two rectangles intersect if the area of the rectangle
representing their intersection is not empty.
</p>
@param x the x coordinate of the origin of the rectangle
@param y the y coordinate of the origin of the rectangle
@param width the width of the rectangle
@param height the height of the rectangle
@return <code>true</code> if the rectangle intersects with the receiver, and <code>false</code> otherwise
@exception IllegalArgumentException <ul>
<li>ERROR_NULL_ARGUMENT - if the argument is null</li>
</ul>
@see #intersection(Rectangle)
@see #isEmpty()
@since 3.0
",963,-964
"
Returns <code>true</code> if the given rectangle intersects
with the receiver and <code>false</code> otherwise.
<p>
Two rectangles intersect if the area of the rectangle
representing their intersection is not empty.
</p>
@param rect the rectangle to test for intersection
@return <code>true</code> if the rectangle intersects with the receiver, and <code>false</code> otherwise
@exception IllegalArgumentException <ul>
<li>ERROR_NULL_ARGUMENT - if the argument is null</li>
</ul>
@see #intersection(Rectangle)
@see #isEmpty()
",964,-965
"
Returns <code>true</code> if the receiver does not cover any
area in the (x, y) coordinate plane, and <code>false</code> if
the receiver does cover some area in the plane.
<p>
A rectangle is considered to <em>cover area</em> in the
(x, y) coordinate plane if both its width and height are
non-zero.
</p>
@return <code>true</code> if the receiver is empty, and <code>false</code> otherwise
",965,-966
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the rectangle
",966,-967
"
Returns a new rectangle which represents the union of
the receiver and the given rectangle.
<p>
The union of two rectangles is the smallest single rectangle
that completely covers both of the areas covered by the two
given rectangles.
</p>
@param rect the rectangle to perform union with
@return the union of the receiver and the argument
@exception IllegalArgumentException <ul>
<li>ERROR_NULL_ARGUMENT - if the argument is null</li>
</ul>
@see #add(Rectangle)
",967,-968
"
****************************************************************************
Copyright (c) 2000, 2010 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",968,-969
"
This class is the abstract superclass of all graphics resource objects.
Resources created by the application must be disposed.
<p>
IMPORTANT: This class is intended to be subclassed <em>only</em>
within the SWT implementation. However, it has not been marked
final to allow those outside of the SWT development team to implement
patched versions of the class in order to get around specific
limitations in advance of when those limitations can be addressed
by the team.  Any class built using subclassing to access the internals
of this class will likely fail to compile or run between releases and
may be strongly platform specific. Subclassing should not be attempted
without an intimate and detailed understanding of the workings of the
hierarchy. No support is provided for user-written classes which are
implemented as subclasses of this class.
</p>
@see #dispose
@see #isDisposed
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
@since 3.1
",969,-970
"
the device where this resource was created
",970,-971
"
Disposes of the operating system resources associated with
this resource. Applications must dispose of all resources
which they allocate.
This method does nothing if the resource is already disposed.
",971,-972
"
Returns the <code>Device</code> where this resource was
created.
@return <code>Device</code> the device of the receiver
@since 3.2
",972,-973
"
Returns <code>true</code> if the resource has been disposed,
and <code>false</code> otherwise.
<p>
This method gets the dispose state for the resource.
When a resource has been disposed, it is an error to
invoke any other method (except {@link #dispose()}) using the resource.
@return <code>true</code> when the resource is disposed and <code>false</code> otherwise
",973,-974
"
****************************************************************************
Copyright (c) 2000, 2018 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",974,-975
"
<code>TextStyle</code> defines a set of styles that can be applied
to a range of text.
<p>
The hashCode() method in this class uses the values of the public
fields to compute the hash value. When storing instances of the
class in hashed collections, do not modify these fields after the
object has been inserted.
</p>
<p>
Application code does <em>not</em> need to explicitly release the
resources managed by each instance when those instances are no longer
required, and thus no <code>dispose()</code> method is provided.
</p>
@see TextLayout
@see Font
@see Color
@see <a href=""http://www.eclipse.org/swt/snippets/#textlayout"">TextLayout, TextStyle snippets</a>
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
@since 3.0
",975,-976
"
the font of the style
",976,-977
"
the foreground of the style
",977,-978
"
the background of the style
",978,-979
"
the underline flag of the style. The default underline
style is <code>SWT.UNDERLINE_SINGLE</code>.
@since 3.1
",979,-980
"
the underline color of the style
@since 3.4
",980,-981
"
the underline style. This style is ignored when
<code>underline</code> is false.
<p>
This value should be one of <code>SWT.UNDERLINE_SINGLE</code>,
<code>SWT.UNDERLINE_DOUBLE</code>, <code>SWT.UNDERLINE_ERROR</code>,
<code>SWT.UNDERLINE_SQUIGGLE</code>, or <code>SWT.UNDERLINE_LINK</code>.
</p>
@see SWT#UNDERLINE_SINGLE
@see SWT#UNDERLINE_DOUBLE
@see SWT#UNDERLINE_ERROR
@see SWT#UNDERLINE_SQUIGGLE
@see SWT#UNDERLINE_LINK
@since 3.4
",981,-982
"
the strikeout flag of the style
@since 3.1
",982,-983
"
the strikeout color of the style
@since 3.4
",983,-984
"
the border style. The default border style is <code>SWT.NONE</code>.
<p>
This value should be one of <code>SWT.BORDER_SOLID</code>,
<code>SWT.BORDER_DASH</code>,<code>SWT.BORDER_DOT</code> or
<code>SWT.NONE</code>.
</p>
@see SWT#BORDER_SOLID
@see SWT#BORDER_DASH
@see SWT#BORDER_DOT
@see SWT#NONE
@since 3.4
",984,-985
"
the border color of the style
@since 3.4
",985,-986
"
the GlyphMetrics of the style
@since 3.2
",986,-987
"
the baseline rise of the style.
@since 3.2
",987,-988
"
the data. An user data field. It can be used to hold the HREF when the range
is used as a link or the embed object when the range is used with <code>GlyphMetrics</code>.
<p>
@since 3.5
",988,-989
"
Create an empty text style.
@since 3.4
",989,-990
"
Create a new text style with the specified font, foreground
and background.
@param font the font of the style, <code>null</code> if none
@param foreground the foreground color of the style, <code>null</code> if none
@param background the background color of the style, <code>null</code> if none
",990,-991
"
Create a new text style from an existing text style.
@param style the style to copy
@since 3.4
",991,-992
"
Compares the argument to the receiver, and returns true
if they represent the <em>same</em> object using a class
specific comparison.
@param object the object to compare with this object
@return <code>true</code> if the object is the same as this object and <code>false</code> otherwise
@see #hashCode()
",992,-993
"
Returns an integer hash code for the receiver. Any two
objects that return <code>true</code> when passed to
<code>equals</code> must return the same value for this
method.
@return the receiver's hash
@see #equals(Object)
",993,-994
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the <code>TextStyle</code>
",994,-995
"
****************************************************************************
Copyright (c) 2000, 2012 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",995,-996
"
Instances of this class represent entry points into Java
which can be invoked from operating system level callback
routines.
<p>
IMPORTANT: A callback is only valid when invoked on the
thread which created it. The results are undefined (and
typically bad) when a callback is passed out to the
operating system (or other code) in such a way that the
callback is called from a different thread.
",996,-997
"
Constructs a new instance of this class given an object
to send the message to, a string naming the method to
invoke and an argument count. Note that, if the object
is an instance of <code>Class</code> it is assumed that
the method is a static method on that class.
<p>Note, do not use this if the method arguments have a double, as arguments will be
shifted/corrupted. See Bug 510538. Instead use the following constructor: <br>
<code> Callback (Object, String, Type, Type [])</code></p>
@param object the object to send the message to
@param method the name of the method to invoke
@param argCount the number of arguments that the method takes
",997,-998
"
Constructs a new instance of this class given an object
to send the message to, a string naming the method to
invoke, an argument count and a flag indicating whether
or not the arguments will be passed in an array. Note
that, if the object is an instance of <code>Class</code>
it is assumed that the method is a static method on that
class.
<p>Note, do not use this if the method arguments have a double, as arguments will be
shifted/corrupted. See Bug 510538. Instead use the following constructor: <br>
<code> Callback (Object, String, Type, Type [])</code></p>
@param object the object to send the message to
@param method the name of the method to invoke
@param argCount the number of arguments that the method takes
@param isArrayBased <code>true</code> if the arguments should be passed in an array and false otherwise
",998,-999
"
Constructs a new instance of this class given an object
to send the message to, a string naming the method to
invoke, an argument count, a flag indicating whether
or not the arguments will be passed in an array and a value
to return when an exception happens. Note that, if
the object is an instance of <code>Class</code>
it is assumed that the method is a static method on that
class.
<p>Note, do not use this if the method arguments have a double, as arguments will be
shifted/corrupted. See Bug 510538. Instead use the following constructor: <br>
<code> Callback (Object, String, Type, Type [])</code></p>
@param object the object to send the message to
@param method the name of the method to invoke
@param argCount the number of arguments that the method takes
@param isArrayBased <code>true</code> if the arguments should be passed in an array and false otherwise
@param errorResult the return value if the java code throws an exception
",999,-1000
"
<p>Register the java method to be a C callback.
I.e, C will be able to make a call to this java method directly (through callback.c)</p>
<p>The other constructors hard-code int/long into the method signature:<br>
<code> long method (long ...) </code><br>
Which is suitable for int/long and pointers.<br>
This constructor is used if you need to use a different return/argument type, e.g double. See Bug 510538 </p>
<p> Note:
<ul>
<li> Array support is not implemented/supported by this constructor. Use other constructors.</li>
<li> If the object is an instance of <code>Class</code> it is assumed that
the method is a static method on that class. </li>
<li> Note, long types are converted to ints on 32 bit system automatically to account for smaller pointers.
This means if you use 'long', you need to cast int next to it. like: <code> long &#47;*int*&#47;</code> </li>
</ul></p>
<p>The following types are supported: <br>
<ul>
<li>void (for return values only) </li>
<li>int</li>
<li>long</li>
<li>byte</li>
<li>char</li>
<li>double</li>
<li>float</li>
<li>short</li>
<li>boolean</li>
</ul>
<p> For example if you want to link the following method: <br>
<code> void myMethod(long &#47;*int*&#47; arg1, double arg2) </code> <br>
Then you would call this callback like:<br>
<code> Callback (this, ""myMethod"", void.class, new Type []{long.class, double.class}); </code>
</p>
@param object the object to send the message to
@param method method the name of the method to invoke
@param returnType specify the type like  <code>void.class, long.class, double.class </code>
@param arguments specify the list of arguments like <code> new Type [] {long.class, double.class } </code>
",1000,-1001
"
Allocates the native level resources associated with the
callback. This method is only invoked from within the
constructor for the argument.
@param callback the callback to bind
@param object the callback's object
@param method the callback's method
@param signature the callback's method signature
@param argCount the callback's method argument count
@param isStatic whether the callback's method is static
@param isArrayBased whether the callback's method is array based
@param errorResult the callback's error result
",1001,-1002
"
Releases the native level resources associated with the callback,
and removes all references between the callback and
other objects. This helps to prevent (bad) application code
from accidentally holding onto extraneous garbage.
",1002,-1003
"
Returns the address of a block of machine code which will
invoke the callback represented by the receiver.
@return the callback address
",1003,-1004
"
Returns the SWT platform name.
@return the platform name of the currently running SWT
",1004,-1005
"
Returns the number of times the system has been recursively entered
through a callback.
<p>
Note: This should not be called by application code.
</p>
@return the entry count
@since 2.1
",1005,-1006
"
Indicates whether or not callbacks which are triggered at the
native level should cause the messages described by the matching
<code>Callback</code> objects to be invoked. This method is used
to safely shut down SWT when it is run within environments
which can generate spurious events.
<p>
Note: This should not be called by application code.
</p>
@param enable true if callbacks should be invoked
",1006,-1007
"
Returns whether or not callbacks which are triggered at the
native level should cause the messages described by the matching
<code>Callback</code> objects to be invoked. This method is used
to safely shut down SWT when it is run within environments
which can generate spurious events.
<p>
Note: This should not be called by application code.
</p>
@return true if callbacks should not be invoked
",1007,-1008
"
This might be called directly from native code in environments
which can generate spurious events. Check before removing it.
@deprecated
@param ignore true if callbacks should not be invoked
",1008,-1009
"
Immediately wipes out all native level state associated
with <em>all</em> callbacks.
<p>
<b>WARNING:</b> This operation is <em>extremely</em> dangerous,
and should never be performed by application code.
</p>
",1009,-1010
"
Releases the native level resources associated with the callback.
@see #dispose
",1010,-1011
"
****************************************************************************
Copyright (c) 2017 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1011,-1012
"
This class hold common constants and utility functions w.r.t. to SWT high DPI
functionality.
<p>
The {@code autoScaleUp(..)} methods convert from API coordinates (in
SWT points) to internal high DPI coordinates (in pixels) that interface with
native widgets.
</p>
<p>
The {@code autoScaleDown(..)} convert from high DPI pixels to API coordinates
(in SWT points).
</p>
@since 3.105
",1012,-1013
"
System property that controls the autoScale functionality.
<ul>
<li><b>false</b>: deviceZoom is set to 100%</li>
<li><b>integer</b>: deviceZoom depends on the current display resolution,
but only uses integer multiples of 100%. The detected native zoom is
generally rounded down (e.g. at 150%, will use 100%), unless close to
the next integer multiple (currently at 175%, will use 200%).</li>
<li><b>integer200</b>: like <b>integer</b>, but the maximal zoom level is 200%.</li>
<li><b>quarter</b>: deviceZoom depends on the current display resolution,
but only uses integer multiples of 25%. The detected native zoom is
rounded to the closest permissible value.</li>
<li><b>exact</b>: deviceZoom uses the native zoom (with 1% as minimal
step).</li>
<li><i>&lt;value&gt;</i>: deviceZoom uses the given integer value in
percent as zoom level.</li>
</ul>
The current default is ""integer200"".
",1013,-1014
"
System property that controls the method for scaling images:
<ul>
<li>""nearest"": nearest-neighbor interpolation, may look jagged</li>
<li>""smooth"": smooth edges, may look blurry</li>
</ul>
The current default is to use ""nearest"", except on
GTK when the deviceZoom is not an integer multiple of 100%.
The smooth strategy currently doesn't work on Win32 and Cocoa, see
<a href=""https://bugs.eclipse.org/493455"">bug 493455</a>.
",1014,-1015
"
Auto-scale down ImageData
",1015,-1016
"
Auto-scale up float array dimensions.
",1016,-1017
"
Auto-scale up float array dimensions if enabled for Drawable class.
",1017,-1018
"
Auto-scale down int dimensions.
",1018,-1019
"
Auto-scale down int dimensions if enabled for Drawable class.
",1019,-1020
"
Auto-scale down float dimensions.
",1020,-1021
"
Auto-scale down float dimensions if enabled for Drawable class.
",1021,-1022
"
Returns a new scaled down Point.
",1022,-1023
"
Returns a new scaled down Point if enabled for Drawable class.
",1023,-1024
"
Returns a new scaled down Rectangle.
",1024,-1025
"
Returns a new scaled down Rectangle if enabled for Drawable class.
",1025,-1026
"
Auto-scale image with ImageData
",1026,-1027
"
Returns a new rectangle as per the scaleFactor.
",1027,-1028
"
Auto-scale up ImageData
",1028,-1029
"
Auto-scale up int dimensions.
",1029,-1030
"
Auto-scale up int dimensions using Native DPI
",1030,-1031
"
Auto-scale up int dimensions if enabled for Drawable class.
",1031,-1032
"
Returns a new scaled up Point.
",1032,-1033
"
Returns a new scaled up Point if enabled for Drawable class.
",1033,-1034
"
Returns a new scaled up Rectangle.
",1034,-1035
"
Returns a new scaled up Rectangle if enabled for Drawable class.
",1035,-1036
"
Returns Scaling factor from the display
@return float scaling factor
",1036,-1037
"
Compute the zoom value based on the DPI value.
@return zoom
",1037,-1038
"
Gets Image data at specified zoom level, if image is missing then
fall-back to 100% image. If provider or fall-back image is not available,
throw error.
",1038,-1039
"
Gets Image file path at specified zoom level, if image is missing then
fall-back to 100% image. If provider or fall-back image is not available,
throw error.
",1039,-1040
"
AutoScale ImageDataProvider.
",1040,-1041
"
****************************************************************************
Copyright (c) 2016 Google Inc and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
Stefan Xenos (Google) - initial API and implementation
*****************************************************************************
",1041,-1042
"
****************************************************************************
Copyright (c) 2000, 2018 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1042,-1043
"
Abstract factory class for loading/unloading images from files or streams
in various image file formats.
",1043,-1044
"
Return whether or not the specified input stream
represents a supported file format.
",1044,-1045
"
Read the specified input stream, and return the
device independent image array represented by the stream.
",1045,-1046
"
Read the specified input stream using the specified loader, and
return the device independent image array represented by the stream.
",1046,-1047
"
Write the device independent image array stored in the specified loader
to the specified output stream using the specified file format.
",1047,-1048
"
Write the device independent image array stored in the specified loader
to the specified output stream.
",1048,-1049
"
****************************************************************************
Copyright (c) 2000, 2012 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1049,-1050
"
Answer a palette containing numGrays
shades of gray, ranging from black to white.
",1050,-1051
"
Load the GIF image(s) stored in the input stream.
Return an array of ImageData representing the image(s).
",1051,-1052
"
Read and return the next block or extension identifier from the file.
",1052,-1053
"
Read a control extension.
Return the extension block data.
",1053,-1054
"
We have just read the Comment extension identifier
from the input stream. Read in the rest of the comment
and return it. GIF comment blocks are variable size.
",1054,-1055
"
We have just read the PlainText extension identifier
from the input stream. Read in the plain text info and text,
and return the text. GIF plain text blocks are variable size.
",1055,-1056
"
We have just read the GraphicsControl extension identifier
from the input stream. Read in the control information, store
it, and return it.
",1056,-1057
"
We have just read the Application extension identifier
from the input stream.  Read in the rest of the extension,
look for and store 'number of repeats', and return the data.
",1057,-1058
"
Return a DeviceIndependentImage representing the
image block at the current position in the input stream.
Throw an error if an error occurs.
",1058,-1059
"
Read a palette from the input stream.
",1059,-1060
"
Write out a GraphicsControlBlock to describe
the specified device independent image.
",1060,-1061
"
Write the specified palette to the output stream.
",1061,-1062
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1062,-1063
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1063,-1064
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1064,-1065
"
****************************************************************************
Copyright (c) 2000, 2014 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
This source file is based in part on the work of the Independent JPEG Group (IJG)
and is made available under the terms contained in the about_files/IJG_README
file accompanying this program.
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1065,-1066
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1066,-1067
"
****************************************************************************
Copyright (c) 2000, 2014 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
This source file is based in part on the work of the Independent JPEG Group (IJG)
and is made available under the terms contained in the about_files/IJG_README
file accompanying this program.
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1067,-1068
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1068,-1069
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1069,-1070
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1070,-1071
"
JPEGHuffmanTable class actually represents two types of object:
1) A DHT (Define Huffman Tables) segment, which may represent
as many as 4 Huffman tables. In this case, the tables are
stored in the allTables array.
2) A single Huffman table. In this case, the allTables array
will be null.
The 'reference' field is stored in both types of object, but
'initialize' is only called if the object represents a DHT.
",1071,-1072
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1072,-1073
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1073,-1074
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1074,-1075
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1075,-1076
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1076,-1077
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1077,-1078
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1078,-1079
"
The byte array containing the bytes to read.
",1079,-1080
"
The current position within the byte array <code>buf</code>. A value
equal to buf.length indicates no bytes available.  A value of
0 indicates the buffer is full.
",1080,-1081
"
Answer how many bytes were read.
",1081,-1082
"
Answers how many bytes are available for reading without blocking
",1082,-1083
"
Answer the next byte of the input stream.
",1083,-1084
"
Don't imitate the JDK behaviour of reading a random number
of bytes when you can actually read them all.
",1084,-1085
"
Reads at most <code>length</code> bytes from this LEDataInputStream and
stores them in byte array <code>buffer</code> starting at <code>offset</code>.
<p>
Answer the number of bytes actually read or -1 if no bytes were read and
end of stream was encountered.  This implementation reads bytes from
the pushback buffer first, then the target stream if more bytes are required
to satisfy <code>count</code>.
</p>
@param buffer the byte array in which to store the read bytes.
@param offset the offset in <code>buffer</code> to store the read bytes.
@param length the maximum number of bytes to store in <code>buffer</code>.
@return int the number of bytes actually read or -1 if end of stream.
@exception java.io.IOException if an IOException occurs.
",1085,-1086
"
Answer an integer comprised of the next
four bytes of the input stream.
",1086,-1087
"
Answer a short comprised of the next
two bytes of the input stream.
",1087,-1088
"
Push back the entire content of the given buffer <code>b</code>.
<p>
The bytes are pushed so that they would be read back b[0], b[1], etc.
If the push back buffer cannot handle the bytes copied from <code>b</code>,
an IOException will be thrown and no byte will be pushed back.
</p>
@param b the byte array containing bytes to push back into the stream
@exception 	java.io.IOException if the pushback buffer is too small
",1088,-1089
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1089,-1090
"
Write the specified number of bytes of the given byte array,
starting at the specified offset, to the output stream.
",1090,-1091
"
Write the given byte to the output stream.
",1091,-1092
"
Write the given byte to the output stream.
",1092,-1093
"
Write the four bytes of the given integer
to the output stream.
",1093,-1094
"
Write the two bytes of the given short
to the output stream.
",1094,-1095
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1095,-1096
"
Decode the input.
",1096,-1097
"
Decode the LZW-encoded bytes in the given byte stream
into the given DeviceIndependentImage.
",1097,-1098
"
Encode the image.
",1098,-1099
"
Encode the bytes into the given byte stream
from the given DeviceIndependentImage.
",1099,-1100
"
Encoding loop broken out to allow early return.
",1100,-1101
"
Initialize the receiver for decoding the given
byte array.
",1101,-1102
"
Initialize the receiver for encoding the given
byte array.
",1102,-1103
"
Answer the next code from the input byte array.
",1103,-1104
"
Answer the next pixel to encode in the image
",1104,-1105
"
Copy a row of pixel values from the image.
",1105,-1106
"
Output aCode to the output stream.
",1106,-1107
"
Copy a row of pixel values to the image.
",1107,-1108
"
Copy duplicate rows of pixel values to the image.
This is to fill in rows if the image is interlaced.
",1108,-1109
"
Read a block from the byte stream.
Return the number of bytes read.
Throw an exception if the block could not be read.
",1109,-1110
"
Write a block to the byte stream.
Throw an exception if the block could not be written.
",1110,-1111
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1111,-1112
"
****************************************************************************
Copyright (c) 2000, 2008 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1112,-1113
"
Answer a byte array containing the BMP representation of
the given device independent palette.
",1113,-1114
"
Unload the given image's data into the given byte stream.
Answer the number of bytes written.
",1114,-1115
"
Unload a DeviceIndependentImage using Windows .BMP format into the given
byte stream.
",1115,-1116
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1116,-1117
"
Skip over signature data. This has already been
verified in isFileFormat().
",1117,-1118
"
Load the PNG image from the byte stream.
",1118,-1119
"
Read and handle the next chunk of data from the
PNG file.
",1119,-1120
"
SWT does not support 16-bit depths. If this image uses
16-bit depths, convert the data to an 8-bit depth.
",1120,-1121
"
SWT does not support greyscale as a color type. For
plain grayscale, we create a palette. For Grayscale
with Alpha, however, we need to convert the pixels
to use RGB values.
Note: This method assumes that the bit depth of the
data has already been restricted to 8 or less.
",1121,-1122
"
PNG supports some color types and bit depths that are
unsupported by SWT. If the image uses an unsupported
color type (either of the gray scale types) or bit
depth (16), convert the data to an SWT-supported
format. Then assign the data into the ImageData given.
",1122,-1123
"
Read the image data from the data stream. This must handle
decoding the data, filtering, and interlacing.
",1123,-1124
"
Answer the number of bytes in a word-aligned row of pixel data.
",1124,-1125
"
Answer the number of bytes in each row of the image
data. Each PNG row is byte-aligned, so images with bit
depths less than a byte may have unused bits at the
end of each row. The value of these bits is undefined.
",1125,-1126
"
Answer the number of bytes needed to represent a pixel.
This value depends on the image's color type and bit
depth.
Note that this method rounds up if an image's pixel size
isn't byte-aligned.
",1126,-1127
"
Answer the number of bytes in a row of the given pixel
width. Each row is byte-aligned, so images with bit
depths less than a byte may have unused bits at the
end of each row. The value of these bits is undefined.
",1127,-1128
"
1. Read one of the seven frames of interlaced data.
2. Update the imageData.
3. Notify the image loader's listeners of the frame load.
",1128,-1129
"
Read the pixel data for an interlaced image from the
data stream.
",1129,-1130
"
Fire an event to let listeners know that an interlaced
frame has been loaded.
finalFrame should be true if the image has finished
loading, false if there are more frames to come.
",1130,-1131
"
Read the pixel data for a non-interlaced image from the
data stream.
Update the imageData to reflect the new data.
",1131,-1132
"
SWT does not support 16-bit depth color formats.
Convert the 16-bit data to 8-bit data.
The correct way to do this is to multiply each
16 bit value by the value:
(2^8 - 1) / (2^16 - 1).
The fast way to do this is just to drop the low
byte of the 16-bit value.
",1132,-1133
"
SWT does not support 16-bit depth color formats.
Convert the 16-bit data to 8-bit data.
The correct way to do this is to multiply each
16 bit value by the value:
(2^8 - 1) / (2^16 - 1).
The fast way to do this is just to drop the low
byte of the 16-bit value.
",1133,-1134
"
PNG supports four filtering types. These types are applied
per row of image data. This method unfilters the given row
based on the filterType.
",1134,-1135
"
****************************************************************************
Copyright (c) 2000, 2018 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1135,-1136
"
Construct a PngChunk using the reference bytes
given.
",1136,-1137
"
Construct a PngChunk with the specified number of
data bytes.
",1137,-1138
"
Get the PngChunk's reference byteArray;
",1138,-1139
"
Set the PngChunk's reference byteArray;
",1139,-1140
"
Get the 16-bit integer from the reference byte
array at the given offset.
",1140,-1141
"
Set the 16-bit integer in the reference byte
array at the given offset.
",1141,-1142
"
Get the 32-bit integer from the reference byte
array at the given offset.
",1142,-1143
"
Set the 32-bit integer in the reference byte
array at the given offset.
",1143,-1144
"
Get the length of the data component of this chunk.
This is not the length of the entire chunk.
",1144,-1145
"
Set the length of the data component of this chunk.
This is not the length of the entire chunk.
",1145,-1146
"
Get the chunk type. This is a four byte value.
Each byte should be an ASCII character.
The first byte is upper case if the chunk is critical.
The second byte is upper case if the chunk is publicly defined.
The third byte must be upper case.
The fourth byte is upper case if the chunk is unsafe to copy.
Public chunk types are defined by the PNG Development Group.
",1146,-1147
"
Set the chunk type. This is a four byte value.
Each byte should be an ASCII character.
The first byte is upper case if the chunk is critical.
The second byte is upper case if the chunk is publicly defined.
The third byte must be upper case.
The fourth byte is upper case if the chunk is unsafe to copy.
Public chunk types are defined by the PNG Development Group.
",1147,-1148
"
Get the chunk's data.
",1148,-1149
"
Set the chunk's data.
This method has two side-effects.
1. It will set the length field to be the length
of the data array given.
2. It will set the CRC field to the computed CRC
value of the data array given.
",1149,-1150
"
Get the CRC value for the chunk's data.
Ensure that the length field has a good
value before making this call.
",1150,-1151
"
Set the CRC value for the chunk's data.
Ensure that the length field has a good
value before making this call.
",1151,-1152
"
Get the chunk's total size including the length, type, and crc fields.
",1152,-1153
"
Compute the CRC value for the chunk's data. Answer
whether this value matches the value stored in the
chunk.
",1153,-1154
"
Answer the CRC value of chunk's data.
",1154,-1155
"
Read the next PNG chunk from the input stream given.
If unable to read a chunk, return null.
",1155,-1156
"
Answer whether the chunk is a valid PNG chunk.
",1156,-1157
"
Provided so that subclasses can override and add
data to the toString() call.
",1157,-1158
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the event
",1158,-1159
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1159,-1160
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1160,-1161
"
This method should be called when the image decoder thinks
that all of the compressed image data has been read. This
method will ensure that the next data value is an end of
block marker. If there are more blocks after this one,
the method will read them and ensure that they are empty.
",1161,-1162
"
****************************************************************************
Copyright (c) 2000, 2008 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1162,-1163
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1163,-1164
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1164,-1165
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1165,-1166
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1166,-1167
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1167,-1168
"
Answer whether the chunk is a valid IDAT chunk.
",1168,-1169
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1169,-1170
"
Answer whether the chunk is a valid IEND chunk.
",1170,-1171
"
****************************************************************************
Copyright (c) 2000, 2018 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1171,-1172
"
Construct a PNGChunk using the reference bytes
given.
",1172,-1173
"
Get the image's width in pixels.
",1173,-1174
"
Set the image's width in pixels.
",1174,-1175
"
Get the image's height in pixels.
",1175,-1176
"
Set the image's height in pixels.
",1176,-1177
"
Get the image's bit depth.
This is limited to the values 1, 2, 4, 8, or 16.
",1177,-1178
"
Set the image's bit depth.
This is limited to the values 1, 2, 4, 8, or 16.
",1178,-1179
"
Get the image's color type.
This is limited to the values:
0 - Grayscale image.
2 - RGB triple.
3 - Palette.
4 - Grayscale with Alpha channel.
6 - RGB with Alpha channel.
",1179,-1180
"
Set the image's color type.
This is limited to the values:
0 - Grayscale image.
2 - RGB triple.
3 - Palette.
4 - Grayscale with Alpha channel.
6 - RGB with Alpha channel.
",1180,-1181
"
Get the image's compression method.
This value must be 0.
",1181,-1182
"
Set the image's compression method.
This value must be 0.
",1182,-1183
"
Get the image's filter method.
This value must be 0.
",1183,-1184
"
Set the image's filter method.
This value must be 0.
",1184,-1185
"
Get the image's interlace method.
This value is limited to:
0 - No interlacing used.
1 - Adam7 interlacing used.
",1185,-1186
"
Set the image's interlace method.
This value is limited to:
0 - No interlacing used.
1 - Adam7 interlacing used.
",1186,-1187
"
Answer whether the chunk is a valid IHDR chunk.
",1187,-1188
"
Answer the pixel size in bits based on the color type
and bit depth.
",1188,-1189
"
Answer the pixel size in bits based on the color type
and bit depth.
",1189,-1190
"
****************************************************************************
Copyright (c) 2000, 2006 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1190,-1191
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1191,-1192
"
****************************************************************************
Copyright (c) 2000, 2018 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1192,-1193
"
Get the number of colors in this palette.
",1193,-1194
"
Get a PaletteData object representing the colors
stored in this PLTE chunk.
The result should be cached as the PLTE chunk
does not store the palette data created.
",1194,-1195
"
Set the data of a PLTE chunk to the colors
stored in the specified PaletteData object.
",1195,-1196
"
Answer whether the chunk is a valid PLTE chunk.
",1196,-1197
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1197,-1198
"
Answer whether the chunk is a valid tRNS chunk.
",1198,-1199
"
Answer the transparent pixel RGB value.
This is not valid for palette color types.
This is not valid for alpha color types.
This will convert a grayscale value into
a palette index.
It will compress a 6 byte RGB into a 3 byte
RGB.
",1199,-1200
"
Answer an array of Alpha values that correspond to the
colors in the palette.
This is only valid for the COLOR_TYPE_PALETTE color type.
",1200,-1201
"
****************************************************************************
Copyright (c) 2000, 2009 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1201,-1202
"
****************************************************************************
Copyright (c) 2000, 2009 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1202,-1203
"
Baseline TIFF decoder revision 6.0
Extension T4-encoding CCITT T.4 1D
",1203,-1204
"
****************************************************************************
Copyright (c) 2000, 2005 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1204,-1205
"
****************************************************************************
Copyright (c) 2000, 2005 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1205,-1206
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1206,-1207
"
Compress numBytes bytes of image data from src, storing in dest
(starting at 0), using the technique specified by comp.
If last is true, this indicates the last line of the image.
Answer the size of the compressed data.
",1207,-1208
"
Answer a byte array containing the BMP representation of
the given device independent palette.
",1208,-1209
"
Unload the given image's data into the given byte stream
using the given compression strategy.
Answer the number of bytes written.
Method modified to use the passed data if it is not null.
",1209,-1210
"
Prepare the given image's data for unloading into a byte stream
using no compression strategy.
Answer the number of bytes written.
Method modified to use the passed data if it is not null.
",1210,-1211
"
Unload a DeviceIndependentImage using Windows .BMP format into the given
byte stream.
",1211,-1212
"
****************************************************************************
Copyright (c) 2000, 2012 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1212,-1213
"
Answer the size in bytes of the file representation of the given
icon
",1213,-1214
"
Load one icon from the byte stream.
",1214,-1215
"
Unload a single icon
",1215,-1216
"
Unload the icon header for the given icon, calculating the offset.
",1216,-1217
"
Unload the mask data for an icon. The data is flipped vertically
and inverted.
",1217,-1218
"
Unload the shape data for an icon. The data is flipped vertically.
",1218,-1219
"
****************************************************************************
Copyright (c) 2005 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1219,-1220
"
****************************************************************************
Copyright (c) 2000, 2018 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1220,-1221
"
<code>FillLayout</code> is the simplest layout class. It lays out
controls in a single row or column, forcing them to be the same size.
<p>
Initially, the controls will all be as tall as the tallest control,
and as wide as the widest. <code>FillLayout</code> does not wrap,
but you can specify margins and spacing. You might use it to
lay out buttons in a task bar or tool bar, or to stack checkboxes
in a <code>Group</code>. <code>FillLayout</code> can also be used
when a <code>Composite</code> only has one child. For example,
if a <code>Shell</code> has a single <code>Group</code> child,
<code>FillLayout</code> will cause the <code>Group</code> to
completely fill the <code>Shell</code> (if margins are 0).
</p>
<p>
Example code: first a <code>FillLayout</code> is created and
its type field is set, and then the layout is set into the
<code>Composite</code>. Note that in a <code>FillLayout</code>,
children are always the same size, and they fill all available space.
</p>
<pre>
FillLayout fillLayout = new FillLayout();
fillLayout.type = SWT.VERTICAL;
shell.setLayout(fillLayout);
</pre>
@see <a href=""http://www.eclipse.org/swt/examples.php"">SWT Example: LayoutExample</a>
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",1221,-1222
"
type specifies how controls will be positioned
within the layout.
The default value is HORIZONTAL.
Possible values are: <ul>
<li>HORIZONTAL: Position the controls horizontally from left to right</li>
<li>VERTICAL: Position the controls vertically from top to bottom</li>
</ul>
",1222,-1223
"
marginWidth specifies the number of points of horizontal margin
that will be placed along the left and right edges of the layout.
The default value is 0.
@since 3.0
",1223,-1224
"
marginHeight specifies the number of points of vertical margin
that will be placed along the top and bottom edges of the layout.
The default value is 0.
@since 3.0
",1224,-1225
"
spacing specifies the number of points between the edge of one cell
and the edge of its neighbouring cell.
The default value is 0.
@since 3.0
",1225,-1226
"
Constructs a new instance of this class.
",1226,-1227
"
Constructs a new instance of this class given the type.
@param type the type of fill layout
@since 2.0
",1227,-1228
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the layout
",1228,-1229
"
****************************************************************************
Copyright (c) 2000, 2018 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1229,-1230
"
Instances of this class are used to define the edges of a control
within a <code>FormLayout</code>.
<p>
<code>FormAttachments</code> are set into the top, bottom, left,
and right fields of the <code>FormData</code> for a control.
For example:
</p>
<pre>
FormData data = new FormData();
data.top = new FormAttachment(0,5);
data.bottom = new FormAttachment(100,-5);
data.left = new FormAttachment(0,5);
data.right = new FormAttachment(100,-5);
button.setLayoutData(data);
</pre>
<p>
A <code>FormAttachment</code> defines where to attach the side of
a control by using the equation, y = ax + b. The ""a"" term represents
a fraction of the parent composite's width (from the left) or height
(from the top). It can be defined using a numerator and denominator,
or just a percentage value. If a percentage is used, the denominator
is set to 100. The ""b"" term in the equation represents an offset, in
points, from the attachment position. For example:</p>
<pre>
FormAttachment attach = new FormAttachment (20, -5);
</pre>
<p>
specifies that the side to which the <code>FormAttachment</code>
object belongs will lie at 20% of the parent composite, minus 5 points.
</p>
<p>
Control sides can also be attached to another control.
For example:</p>
<pre>
FormAttachment attach = new FormAttachment (button, 10);
</pre>
specifies that the side to which the <code>FormAttachment</code>
object belongs will lie in the same position as the adjacent side of
the <code>button</code> control, plus 10 points. The control side can
also be attached to the opposite side of the specified control.
For example:
<pre>
FormData data = new FormData ();
data.left = new FormAttachment (button, 0, SWT.LEFT);
</pre>
specifies that the left side of the control will lie in the same position
as the left side of the <code>button</code> control. The control can also
be attached in a position that will center the control on the specified
control. For example:
<pre>
data.left = new FormAttachment (button, 0, SWT.CENTER);
</pre>
specifies that the left side of the control will be positioned so that it is
centered between the left and right sides of the <code>button</code> control.
If the alignment is not specified, the default is to attach to the adjacent side.
@see FormLayout
@see FormData
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
@since 2.0
",1230,-1231
"
numerator specifies the numerator of the ""a"" term in the
equation, y = ax + b, which defines the attachment.
",1231,-1232
"
denominator specifies the denominator of the ""a"" term in the
equation, y = ax + b, which defines the attachment.
The default value is 100.
",1232,-1233
"
offset specifies the offset, in points, of the control side
from the attachment position.
If the offset is positive, then the control side is offset
to the right of or below the attachment position. If it is
negative, then the control side is offset to the left of or
above the attachment position.
This is equivalent to the ""b"" term in the equation y = ax + b.
The default value is 0.
",1233,-1234
"
control specifies the control to which the control side is
attached.
",1234,-1235
"
alignment specifies the alignment of the control side that is
attached to a control.
<p>
For top and bottom attachments, TOP, BOTTOM and CENTER are used. For left
and right attachments, LEFT, RIGHT and CENTER are used. If any other case
occurs, the default will be used instead.
</p>
<br>Possible values are: <ul>
<li>{@link SWT#TOP}: Attach the side to the top side of the specified control.</li>
<li>{@link SWT#BOTTOM}: Attach the side to the bottom side of the specified control.</li>
<li>{@link SWT#LEFT}: Attach the side to the left side of the specified control.</li>
<li>{@link SWT#RIGHT}: Attach the side to the right side of the specified control.</li>
<li>{@link SWT#CENTER}: Attach the side at a position which will center the control on the specified control.</li>
<li>{@link SWT#DEFAULT}: Attach the side to the adjacent side of the specified control.</li>
</ul>
",1235,-1236
"
Constructs a new instance of this class.
Since no numerator, denominator or offset is specified,
the attachment is treated as a percentage of the form.
The numerator is zero, the denominator is 100 and the
offset is zero.
@since 3.2
",1236,-1237
"
Constructs a new instance of this class given a numerator
Since no denominator or offset is specified, the default
is to treat the numerator as a percentage of the form, with a
denominator of 100. The offset is zero.
@param numerator the percentage of the position
@since 3.0
",1237,-1238
"
Constructs a new instance of this class given a numerator
and an offset. Since no denominator is specified, the default
is to treat the numerator as a percentage of the form, with a
denominator of 100.
@param numerator the percentage of the position
@param offset the offset of the side from the position
",1238,-1239
"
Constructs a new instance of this class given a numerator
and denominator and an offset. The position of the side is
given by the fraction of the form defined by the numerator
and denominator.
@param numerator the numerator of the position
@param denominator the denominator of the position
@param offset the offset of the side from the position
",1239,-1240
"
Constructs a new instance of this class given a control.
Since no alignment is specified, the default alignment is
to attach the side to the adjacent side of the specified
control. Since no offset is specified, an offset of 0 is
used.
@param control the control the side is attached to
",1240,-1241
"
Constructs a new instance of this class given a control
and an offset. Since no alignment is specified, the default
alignment is to attach the side to the adjacent side of the
specified control.
@param control the control the side is attached to
@param offset the offset of the side from the control
",1241,-1242
"
Constructs a new instance of this class given a control,
an offset and an alignment.  The possible alignment values are:
<dl>
<dt><b>{@link SWT#TOP}</b></dt>
<dd>the side will be attached to the top side of the specified control</dd>
<dt><b>{@link SWT#BOTTOM}</b></dt>
<dd>the side will be attached to the bottom side of the specified control</dd>
<dt><b>{@link SWT#LEFT}</b></dt>
<dd>the side will be attached to the left side of the specified control</dd>
<dt><b>{@link SWT#RIGHT}</b></dt>
<dd>the side will be attached to the right side of the specified control</dd>
<dt><b>{@link SWT#CENTER}</b></dt>
<dd>the side will be centered on the same side of the specified control</dd>
<dt><b>{@link SWT#DEFAULT}</b></dt>
<dd>the side will be attached to the adjacent side of the specified control</dd>
</dl>
@param control the control the side is attached to
@param offset the offset of the side from the control
@param alignment the alignment of the side to the control it is attached to,
one of TOP, BOTTOM, LEFT, RIGHT, CENTER, or DEFAULT
",1242,-1243
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the FormAttachment
",1243,-1244
"
****************************************************************************
Copyright (c) 2000, 2018 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1244,-1245
"
Instances of this class are used to define the attachments
of a control in a <code>FormLayout</code>.
<p>
To set a <code>FormData</code> object into a control, you use the
<code>setLayoutData ()</code> method. To define attachments for the
<code>FormData</code>, set the fields directly, like this:
</p>
<pre>
FormData data = new FormData();
data.left = new FormAttachment(0,5);
data.right = new FormAttachment(100,-5);
button.setLayoutData(formData);
</pre>
<p>
<code>FormData</code> contains the <code>FormAttachments</code> for
each edge of the control that the <code>FormLayout</code> uses to
determine the size and position of the control. <code>FormData</code>
objects also allow you to set the width and height of controls within
a <code>FormLayout</code>.
</p>
@see FormLayout
@see FormAttachment
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
@since 2.0
",1245,-1246
"
width specifies the preferred width in points. This value
is the wHint passed into Control.computeSize(int, int, boolean)
to determine the preferred size of the control.
The default value is SWT.DEFAULT.
@see Control#computeSize(int, int, boolean)
",1246,-1247
"
height specifies the preferred height in points. This value
is the hHint passed into Control.computeSize(int, int, boolean)
to determine the preferred size of the control.
The default value is SWT.DEFAULT.
@see Control#computeSize(int, int, boolean)
",1247,-1248
"
left specifies the attachment of the left side of
the control.
",1248,-1249
"
right specifies the attachment of the right side of
the control.
",1249,-1250
"
top specifies the attachment of the top of the control.
",1250,-1251
"
bottom specifies the attachment of the bottom of the
control.
",1251,-1252
"
Constructs a new instance of FormData using
default values.
",1252,-1253
"
Constructs a new instance of FormData according to the parameters.
A value of SWT.DEFAULT indicates that no minimum width or
no minimum height is specified.
@param width a minimum width for the control
@param height a minimum height for the control
",1253,-1254
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the FormData object
",1254,-1255
"
****************************************************************************
Copyright (c) 2000, 2018 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1255,-1256
"
Instances of this class control the position and size of the
children of a composite control by using <code>FormAttachments</code>
to optionally configure the left, top, right and bottom edges of
each child.
<p>
The following example code creates a <code>FormLayout</code> and then sets
it into a <code>Shell</code>:
</p>
<pre>
Display display = new Display ();
Shell shell = new Shell(display);
FormLayout layout = new FormLayout();
layout.marginWidth = 3;
layout.marginHeight = 3;
shell.setLayout(layout);
</pre>
<p>
To use a <code>FormLayout</code>, create a <code>FormData</code> with
<code>FormAttachment</code> for each child of <code>Composite</code>.
The following example code attaches <code>button1</code> to the top
and left edge of the composite and <code>button2</code> to the right
edge of <code>button1</code> and the top and right edges of the
composite:
</p>
<pre>
FormData data1 = new FormData();
data1.left = new FormAttachment(0, 0);
data1.top = new FormAttachment(0, 0);
button1.setLayoutData(data1);
FormData data2 = new FormData();
data2.left = new FormAttachment(button1);
data2.top = new FormAttachment(0, 0);
data2.right = new FormAttachment(100, 0);
button2.setLayoutData(data2);
</pre>
<p>
Each side of a child control can be attached to a position in the parent
composite, or to other controls within the <code>Composite</code> by
creating instances of <code>FormAttachment</code> and setting them into
the top, bottom, left, and right fields of the child's <code>FormData</code>.
</p>
<p>
If a side is not given an attachment, it is defined as not being attached
to anything, causing the child to remain at its preferred size.  If a child
is given no attachment on either the left or the right or top or bottom, it is
automatically attached to the left and top of the composite respectively.
The following code positions <code>button1</code> and <code>button2</code>
but relies on default attachments:
</p>
<pre>
FormData data2 = new FormData();
data2.left = new FormAttachment(button1);
data2.right = new FormAttachment(100, 0);
button2.setLayoutData(data2);
</pre>
<p>
IMPORTANT: Do not define circular attachments.  For example, do not attach
the right edge of <code>button1</code> to the left edge of <code>button2</code>
and then attach the left edge of <code>button2</code> to the right edge of
<code>button1</code>.  This will over constrain the layout, causing undefined
behavior.  The algorithm will terminate, but the results are undefined.
</p>
@see FormData
@see FormAttachment
@see <a href=""http://www.eclipse.org/swt/snippets/#formlayout"">FormLayout snippets</a>
@see <a href=""http://www.eclipse.org/swt/examples.php"">SWT Example: LayoutExample</a>
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
@since 2.0
",1256,-1257
"
marginWidth specifies the number of points of horizontal margin
that will be placed along the left and right edges of the layout.
The default value is 0.
",1257,-1258
"
marginHeight specifies the number of points of vertical margin
that will be placed along the top and bottom edges of the layout.
The default value is 0.
",1258,-1259
"
marginLeft specifies the number of points of horizontal margin
that will be placed along the left edge of the layout.
The default value is 0.
@since 3.1
",1259,-1260
"
marginTop specifies the number of points of vertical margin
that will be placed along the top edge of the layout.
The default value is 0.
@since 3.1
",1260,-1261
"
marginRight specifies the number of points of horizontal margin
that will be placed along the right edge of the layout.
The default value is 0.
@since 3.1
",1261,-1262
"
marginBottom specifies the number of points of vertical margin
that will be placed along the bottom edge of the layout.
The default value is 0.
@since 3.1
",1262,-1263
"
spacing specifies the number of points between the edge of one control
and the edge of its neighbouring control.
The default value is 0.
@since 3.0
",1263,-1264
"
Constructs a new instance of this class.
",1264,-1265
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the layout
",1265,-1266
"
****************************************************************************
Copyright (c) 2000, 2018 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1266,-1267
"
<code>GridData</code> is the layout data object associated with
<code>GridLayout</code>. To set a <code>GridData</code> object into a
control, you use the <code>Control.setLayoutData(Object)</code> method.
<p>
There are two ways to create a <code>GridData</code> object with certain
fields set. The first is to set the fields directly, like this:</p>
<pre>
GridData gridData = new GridData();
gridData.horizontalAlignment = GridData.FILL;
gridData.grabExcessHorizontalSpace = true;
button1.setLayoutData(gridData);
gridData = new GridData();
gridData.horizontalAlignment = GridData.FILL;
gridData.verticalAlignment = GridData.FILL;
gridData.grabExcessHorizontalSpace = true;
gridData.grabExcessVerticalSpace = true;
gridData.horizontalSpan = 2;
button2.setLayoutData(gridData);
</pre>
The second is to take advantage of <code>GridData</code> convenience constructors, for example:
<pre>
button1.setLayoutData(new GridData (SWT.FILL, SWT.CENTER, true, false));
button2.setLayoutData(new GridData (SWT.FILL, SWT.FILL, true, true, 2, 1));
</pre>
<p>
NOTE: Do not reuse <code>GridData</code> objects. Every control in a
<code>Composite</code> that is managed by a <code>GridLayout</code>
must have a unique <code>GridData</code> object. If the layout data
for a control in a <code>GridLayout</code> is null at layout time,
a unique <code>GridData</code> object is created for it.
</p>
@see GridLayout
@see Control#setLayoutData
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",1267,-1268
"
verticalAlignment specifies how controls will be positioned
vertically within a cell.
The default value is CENTER.
Possible values are: <ul>
<li>SWT.BEGINNING (or SWT.TOP): Position the control at the top of the cell</li>
<li>SWT.CENTER: Position the control in the vertical center of the cell</li>
<li>SWT.END (or SWT.BOTTOM): Position the control at the bottom of the cell</li>
<li>SWT.FILL: Resize the control to fill the cell vertically</li>
</ul>
",1268,-1269
"
horizontalAlignment specifies how controls will be positioned
horizontally within a cell.
The default value is BEGINNING.
Possible values are: <ul>
<li>SWT.BEGINNING (or SWT.LEFT): Position the control at the left of the cell</li>
<li>SWT.CENTER: Position the control in the horizontal center of the cell</li>
<li>SWT.END (or SWT.RIGHT): Position the control at the right of the cell</li>
<li>SWT.FILL: Resize the control to fill the cell horizontally</li>
</ul>
",1269,-1270
"
widthHint specifies the preferred width in points. This value
is the wHint passed into Control.computeSize(int, int, boolean)
to determine the preferred size of the control.
The default value is SWT.DEFAULT.
@see Control#computeSize(int, int, boolean)
",1270,-1271
"
heightHint specifies the preferred height in points. This value
is the hHint passed into Control.computeSize(int, int, boolean)
to determine the preferred size of the control.
The default value is SWT.DEFAULT.
@see Control#computeSize(int, int, boolean)
",1271,-1272
"
horizontalIndent specifies the number of points of indentation
that will be placed along the left side of the cell.
The default value is 0.
",1272,-1273
"
verticalIndent specifies the number of points of indentation
that will be placed along the top side of the cell.
The default value is 0.
@since 3.1
",1273,-1274
"
horizontalSpan specifies the number of column cells that the control
will take up.
The default value is 1.
",1274,-1275
"
verticalSpan specifies the number of row cells that the control
will take up.
The default value is 1.
",1275,-1276
"
<p>grabExcessHorizontalSpace specifies whether the width of the cell
changes depending on the size of the parent Composite.  If
grabExcessHorizontalSpace is <code>true</code>, the following rules
apply to the width of the cell:</p>
<ul>
<li>If extra horizontal space is available in the parent, the cell will
grow to be wider than its preferred width.  The new width
will be ""preferred width + delta"" where delta is the extra
horizontal space divided by the number of grabbing columns.</li>
<li>If there is not enough horizontal space available in the parent, the
cell will shrink until it reaches its minimum width as specified by
GridData.minimumWidth. The new width will be the maximum of
""minimumWidth"" and ""preferred width - delta"", where delta is
the amount of space missing divided by the number of grabbing columns.</li>
<li>If the parent is packed, the cell will be its preferred width
as specified by GridData.widthHint.</li>
<li>If the control spans multiple columns and there are no other grabbing
controls in any of the spanned columns, the last column in the span will
grab the extra space.  If there is at least one other grabbing control
in the span, the grabbing will be spread over the columns already
marked as grabExcessHorizontalSpace.</li>
</ul>
<p>The default value is false.</p>
@see GridData#minimumWidth
@see GridData#widthHint
",1276,-1277
"
<p>grabExcessVerticalSpace specifies whether the height of the cell
changes depending on the size of the parent Composite.  If
grabExcessVerticalSpace is <code>true</code>, the following rules
apply to the height of the cell:</p>
<ul>
<li>If extra vertical space is available in the parent, the cell will
grow to be taller than its preferred height.  The new height
will be ""preferred height + delta"" where delta is the extra
vertical space divided by the number of grabbing rows.</li>
<li>If there is not enough vertical space available in the parent, the
cell will shrink until it reaches its minimum height as specified by
GridData.minimumHeight. The new height will be the maximum of
""minimumHeight"" and ""preferred height - delta"", where delta is
the amount of space missing divided by the number of grabbing rows.</li>
<li>If the parent is packed, the cell will be its preferred height
as specified by GridData.heightHint.</li>
<li>If the control spans multiple rows and there are no other grabbing
controls in any of the spanned rows, the last row in the span will
grab the extra space.  If there is at least one other grabbing control
in the span, the grabbing will be spread over the rows already
marked as grabExcessVerticalSpace.</li>
</ul>
<p>The default value is false.</p>
@see GridData#minimumHeight
@see GridData#heightHint
",1277,-1278
"
minimumWidth specifies the minimum width in points.  This value
applies only if grabExcessHorizontalSpace is true. A value of
SWT.DEFAULT means that the minimum width will be the result
of Control.computeSize(int, int, boolean) where wHint is
determined by GridData.widthHint.
The default value is 0.
@since 3.1
@see Control#computeSize(int, int, boolean)
@see GridData#widthHint
",1278,-1279
"
minimumHeight specifies the minimum height in points.  This value
applies only if grabExcessVerticalSpace is true.  A value of
SWT.DEFAULT means that the minimum height will be the result
of Control.computeSize(int, int, boolean) where hHint is
determined by GridData.heightHint.
The default value is 0.
@since 3.1
@see Control#computeSize(int, int, boolean)
@see GridData#heightHint
",1279,-1280
"
exclude informs the layout to ignore this control when sizing
and positioning controls.  If this value is <code>true</code>,
the size and position of the control will not be managed by the
layout.  If this value is <code>false</code>, the size and
position of the control will be computed and assigned.
The default value is <code>false</code>.
@since 3.1
",1280,-1281
"
Value for horizontalAlignment or verticalAlignment.
Position the control at the top or left of the cell.
Not recommended. Use SWT.BEGINNING, SWT.TOP or SWT.LEFT instead.
",1281,-1282
"
Value for horizontalAlignment or verticalAlignment.
Position the control in the vertical or horizontal center of the cell
Not recommended. Use SWT.CENTER instead.
",1282,-1283
"
Value for horizontalAlignment or verticalAlignment.
Position the control at the bottom or right of the cell
Not recommended. Use SWT.END, SWT.BOTTOM or SWT.RIGHT instead.
",1283,-1284
"
Value for horizontalAlignment or verticalAlignment.
Resize the control to fill the cell horizontally or vertically.
Not recommended. Use SWT.FILL instead.
",1284,-1285
"
Style bit for <code>new GridData(int)</code>.
Position the control at the top of the cell.
Not recommended. Use
<code>new GridData(int, SWT.BEGINNING, boolean, boolean)</code>
instead.
",1285,-1286
"
Style bit for <code>new GridData(int)</code> to position the
control in the vertical center of the cell.
Not recommended. Use
<code>new GridData(int, SWT.CENTER, boolean, boolean)</code>
instead.
",1286,-1287
"
Style bit for <code>new GridData(int)</code> to position the
control at the bottom of the cell.
Not recommended. Use
<code>new GridData(int, SWT.END, boolean, boolean)</code>
instead.
",1287,-1288
"
Style bit for <code>new GridData(int)</code> to resize the
control to fill the cell vertically.
Not recommended. Use
<code>new GridData(int, SWT.FILL, boolean, boolean)</code>
instead
",1288,-1289
"
Style bit for <code>new GridData(int)</code> to position the
control at the left of the cell.
Not recommended. Use
<code>new GridData(SWT.BEGINNING, int, boolean, boolean)</code>
instead.
",1289,-1290
"
Style bit for <code>new GridData(int)</code> to position the
control in the horizontal center of the cell.
Not recommended. Use
<code>new GridData(SWT.CENTER, int, boolean, boolean)</code>
instead.
",1290,-1291
"
Style bit for <code>new GridData(int)</code> to position the
control at the right of the cell.
Not recommended. Use
<code>new GridData(SWT.END, int, boolean, boolean)</code>
instead.
",1291,-1292
"
Style bit for <code>new GridData(int)</code> to resize the
control to fill the cell horizontally.
Not recommended. Use
<code>new GridData(SWT.FILL, int, boolean, boolean)</code>
instead.
",1292,-1293
"
Style bit for <code>new GridData(int)</code> to resize the
control to fit the remaining horizontal space.
Not recommended. Use
<code>new GridData(int, int, true, boolean)</code>
instead.
",1293,-1294
"
Style bit for <code>new GridData(int)</code> to resize the
control to fit the remaining vertical space.
Not recommended. Use
<code>new GridData(int, int, boolean, true)</code>
instead.
",1294,-1295
"
Style bit for <code>new GridData(int)</code> to resize the
control to fill the cell vertically and to fit the remaining
vertical space.
FILL_VERTICAL = VERTICAL_ALIGN_FILL | GRAB_VERTICAL
Not recommended. Use
<code>new GridData(int, SWT.FILL, boolean, true)</code>
instead.
",1295,-1296
"
Style bit for <code>new GridData(int)</code> to resize the
control to fill the cell horizontally and to fit the remaining
horizontal space.
FILL_HORIZONTAL = HORIZONTAL_ALIGN_FILL | GRAB_HORIZONTAL
Not recommended. Use
<code>new GridData(SWT.FILL, int, true, boolean)</code>
instead.
",1296,-1297
"
Style bit for <code>new GridData(int)</code> to resize the
control to fill the cell horizontally and vertically and
to fit the remaining horizontal and vertical space.
FILL_BOTH = FILL_VERTICAL | FILL_HORIZONTAL
Not recommended. Use
<code>new GridData(SWT.FILL, SWT.FILL, true, true)</code>
instead.
",1297,-1298
"
Constructs a new instance of GridData using
default values.
",1298,-1299
"
Constructs a new instance based on the GridData style.
This constructor is not recommended.
@param style the GridData style
",1299,-1300
"
Constructs a new instance of GridData according to the parameters.
@param horizontalAlignment how control will be positioned horizontally within a cell,
one of: SWT.BEGINNING (or SWT.LEFT), SWT.CENTER, SWT.END (or SWT.RIGHT), or SWT.FILL
@param verticalAlignment how control will be positioned vertically within a cell,
one of: SWT.BEGINNING (or SWT.TOP), SWT.CENTER, SWT.END (or SWT.BOTTOM), or SWT.FILL
@param grabExcessHorizontalSpace whether cell will be made wide enough to fit the remaining horizontal space
@param grabExcessVerticalSpace whether cell will be made high enough to fit the remaining vertical space
@since 3.0
",1300,-1301
"
Constructs a new instance of GridData according to the parameters.
@param horizontalAlignment how control will be positioned horizontally within a cell,
one of: SWT.BEGINNING (or SWT.LEFT), SWT.CENTER, SWT.END (or SWT.RIGHT), or SWT.FILL
@param verticalAlignment how control will be positioned vertically within a cell,
one of: SWT.BEGINNING (or SWT.TOP), SWT.CENTER, SWT.END (or SWT.BOTTOM), or SWT.FILL
@param grabExcessHorizontalSpace whether cell will be made wide enough to fit the remaining horizontal space
@param grabExcessVerticalSpace whether cell will be made high enough to fit the remaining vertical space
@param horizontalSpan the number of column cells that the control will take up
@param verticalSpan the number of row cells that the control will take up
@since 3.0
",1301,-1302
"
Constructs a new instance of GridData according to the parameters.
A value of SWT.DEFAULT indicates that no minimum width or
no minimum height is specified.
@param width a minimum width for the column
@param height a minimum height for the row
@since 3.0
",1302,-1303
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the GridData object
",1303,-1304
"
****************************************************************************
Copyright (c) 2000, 2018 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1304,-1305
"
Instances of this class lay out the control children of a
<code>Composite</code> in a grid.
<p>
<code>GridLayout</code> has a number of configuration fields, and the
controls it lays out can have an associated layout data object, called
<code>GridData</code>. The power of <code>GridLayout</code> lies in the
ability to configure <code>GridData</code> for each control in the layout.
</p>
<p>
The following code creates a shell managed by a <code>GridLayout</code>
with 3 columns:</p>
<pre>
Display display = new Display();
Shell shell = new Shell(display);
GridLayout gridLayout = new GridLayout();
gridLayout.numColumns = 3;
shell.setLayout(gridLayout);
</pre>
<p>
The <code>numColumns</code> field is the most important field in a
<code>GridLayout</code>. Widgets are laid out in columns from left
to right, and a new row is created when <code>numColumns</code> + 1
controls are added to the <code>Composite</code>.
</p>
@see GridData
@see <a href=""http://www.eclipse.org/swt/snippets/#gridlayout"">GridLayout snippets</a>
@see <a href=""http://www.eclipse.org/swt/examples.php"">SWT Example: LayoutExample</a>
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",1305,-1306
"
numColumns specifies the number of cell columns in the layout.
If numColumns has a value less than 1, the layout will not
set the size and position of any controls.
The default value is 1.
",1306,-1307
"
makeColumnsEqualWidth specifies whether all columns in the layout
will be forced to have the same width.
The default value is false.
",1307,-1308
"
marginWidth specifies the number of points of horizontal margin
that will be placed along the left and right edges of the layout.
The default value is 5.
",1308,-1309
"
marginHeight specifies the number of points of vertical margin
that will be placed along the top and bottom edges of the layout.
The default value is 5.
",1309,-1310
"
marginLeft specifies the number of points of horizontal margin
that will be placed along the left edge of the layout.
The default value is 0.
@since 3.1
",1310,-1311
"
marginTop specifies the number of points of vertical margin
that will be placed along the top edge of the layout.
The default value is 0.
@since 3.1
",1311,-1312
"
marginRight specifies the number of points of horizontal margin
that will be placed along the right edge of the layout.
The default value is 0.
@since 3.1
",1312,-1313
"
marginBottom specifies the number of points of vertical margin
that will be placed along the bottom edge of the layout.
The default value is 0.
@since 3.1
",1313,-1314
"
horizontalSpacing specifies the number of points between the right
edge of one cell and the left edge of its neighbouring cell to
the right.
The default value is 5.
",1314,-1315
"
verticalSpacing specifies the number of points between the bottom
edge of one cell and the top edge of its neighbouring cell underneath.
The default value is 5.
",1315,-1316
"
Constructs a new instance of this class
with a single column.
",1316,-1317
"
Constructs a new instance of this class given the
number of columns, and whether or not the columns
should be forced to have the same width.
If numColumns has a value less than 1, the layout will not
set the size and position of any controls.
@param numColumns the number of columns in the grid
@param makeColumnsEqualWidth whether or not the columns will have equal width
@since 2.0
",1317,-1318
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the layout
",1318,-1319
"
****************************************************************************
Copyright (c) 2000, 2018 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1319,-1320
"
Each control controlled by a <code>RowLayout</code> can have its initial
width and height specified by setting a <code>RowData</code> object
into the control.
<p>
The following code uses a <code>RowData</code> object to change the initial
size of a <code>Button</code> in a <code>Shell</code>:
</p>
<pre>
Display display = new Display();
Shell shell = new Shell(display);
shell.setLayout(new RowLayout());
Button button1 = new Button(shell, SWT.PUSH);
button1.setText(""Button 1"");
button1.setLayoutData(new RowData(50, 40));
</pre>
@see RowLayout
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",1320,-1321
"
width specifies the desired width in points. This value
is the wHint passed into Control.computeSize(int, int, boolean)
to determine the preferred size of the control.
The default value is SWT.DEFAULT.
@see org.eclipse.swt.widgets.Control#computeSize(int, int, boolean)
",1321,-1322
"
height specifies the preferred height in points. This value
is the hHint passed into Control.computeSize(int, int, boolean)
to determine the preferred size of the control.
The default value is SWT.DEFAULT.
@see org.eclipse.swt.widgets.Control#computeSize(int, int, boolean)
",1322,-1323
"
exclude informs the layout to ignore this control when sizing
and positioning controls.  If this value is <code>true</code>,
the size and position of the control will not be managed by the
layout.  If this	value is <code>false</code>, the size and
position of the control will be computed and assigned.
The default value is <code>false</code>.
@since 3.1
",1323,-1324
"
Constructs a new instance of RowData using
default values.
",1324,-1325
"
Constructs a new instance of RowData according to the parameters.
A value of SWT.DEFAULT indicates that no minimum width or
no minimum height is specified.
@param width a minimum width for the control
@param height a minimum height for the control
",1325,-1326
"
Constructs a new instance of RowData according to the parameter.
A value of SWT.DEFAULT indicates that no minimum width or
no minimum height is specified.
@param point a point whose x coordinate specifies a minimum width for the control
and y coordinate specifies a minimum height for the control
",1326,-1327
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the RowData object
",1327,-1328
"
****************************************************************************
Copyright (c) 2000, 2018 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1328,-1329
"
Instances of this class determine the size and position of the
children of a <code>Composite</code> by placing them either in
horizontal rows or vertical columns within the parent <code>Composite</code>.
<p>
<code>RowLayout</code> aligns all controls in one row if the
<code>type</code> is set to horizontal, and one column if it is
set to vertical. It has the ability to wrap, and provides configurable
margins and spacing. <code>RowLayout</code> has a number of configuration
fields. In addition, the height and width of each control in a
<code>RowLayout</code> can be specified by setting a <code>RowData</code>
object into the control using <code>setLayoutData ()</code>.
</p>
<p>
The following example code creates a <code>RowLayout</code>, sets all
of its fields to non-default values, and then sets it into a
<code>Shell</code>.</p>
<pre>
RowLayout rowLayout = new RowLayout();
rowLayout.wrap = false;
rowLayout.pack = false;
rowLayout.justify = true;
rowLayout.type = SWT.VERTICAL;
rowLayout.marginLeft = 5;
rowLayout.marginTop = 5;
rowLayout.marginRight = 5;
rowLayout.marginBottom = 5;
rowLayout.spacing = 0;
shell.setLayout(rowLayout);
</pre>
If you are using the default field values, you only need one line of code:
<pre>
shell.setLayout(new RowLayout());
</pre>
@see RowData
@see <a href=""http://www.eclipse.org/swt/snippets/#rowlayout"">RowLayout snippets</a>
@see <a href=""http://www.eclipse.org/swt/examples.php"">SWT Example: LayoutExample</a>
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",1329,-1330
"
type specifies whether the layout places controls in rows or
columns.
The default value is HORIZONTAL.
Possible values are: <ul>
<li>HORIZONTAL: Position the controls horizontally from left to right</li>
<li>VERTICAL: Position the controls vertically from top to bottom</li>
</ul>
@since 2.0
",1330,-1331
"
marginWidth specifies the number of points of horizontal margin
that will be placed along the left and right edges of the layout.
The default value is 0.
@since 3.0
",1331,-1332
"
marginHeight specifies the number of points of vertical margin
that will be placed along the top and bottom edges of the layout.
The default value is 0.
@since 3.0
",1332,-1333
"
spacing specifies the number of points between the edge of one cell
and the edge of its neighbouring cell.
The default value is 3.
",1333,-1334
"
wrap specifies whether a control will be wrapped to the next
row if there is insufficient space on the current row.
The default value is true.
",1334,-1335
"
pack specifies whether all controls in the layout take
their preferred size.  If pack is false, all controls will
have the same size which is the size required to accommodate the
largest preferred height and the largest preferred width of all
the controls in the layout.
The default value is true.
",1335,-1336
"
fill specifies whether the controls in a row should be
all the same height for horizontal layouts, or the same
width for vertical layouts.
The default value is false.
@since 3.0
",1336,-1337
"
center specifies whether the controls in a row should be
centered vertically in each cell for horizontal layouts,
or centered horizontally in each cell for vertical layouts.
The default value is false.
@since 3.4
",1337,-1338
"
justify specifies whether the controls in a row should be
fully justified, with any extra space placed between the controls.
The default value is false.
",1338,-1339
"
marginLeft specifies the number of points of horizontal margin
that will be placed along the left edge of the layout.
The default value is 3.
",1339,-1340
"
marginTop specifies the number of points of vertical margin
that will be placed along the top edge of the layout.
The default value is 3.
",1340,-1341
"
marginRight specifies the number of points of horizontal margin
that will be placed along the right edge of the layout.
The default value is 3.
",1341,-1342
"
marginBottom specifies the number of points of vertical margin
that will be placed along the bottom edge of the layout.
The default value is 3.
",1342,-1343
"
Constructs a new instance of this class with type HORIZONTAL.
",1343,-1344
"
Constructs a new instance of this class given the type.
@param type the type of row layout
@since 2.0
",1344,-1345
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the layout
",1345,-1346
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1346,-1347
"
This class is the abstract superclass of the classes
that represent the built in platform dialogs.
A <code>Dialog</code> typically contains other widgets
that are not accessible. A <code>Dialog</code> is not
a <code>Widget</code>.
<p>
This class can also be used as the abstract superclass
for user-designed dialogs. Such dialogs usually consist
of a Shell with child widgets. The basic template for a
user-defined dialog typically looks something like this:</p>
<pre><code>
public class MyDialog extends Dialog {
Object result;
public MyDialog (Shell parent, int style) {
super (parent, style);
}
public MyDialog (Shell parent) {
this (parent, 0); // your default style bits go here (not the Shell's style bits)
}
public Object open () {
Shell parent = getParent();
Shell shell = new Shell(parent, SWT.DIALOG_TRIM | SWT.APPLICATION_MODAL);
shell.setText(getText());
// Your code goes here (widget creation, set result, etc).
shell.open();
Display display = parent.getDisplay();
while (!shell.isDisposed()) {
if (!display.readAndDispatch()) display.sleep();
}
return result;
}
}
</code></pre>
<p>
Note: The <em>modality</em> styles supported by this class
are treated as <em>HINT</em>s, because not all are supported
by every subclass on every platform. If a modality style is
not supported, it is ""upgraded"" to a more restrictive modality
style that is supported.  For example, if <code>PRIMARY_MODAL</code>
is not supported by a particular dialog, it would be upgraded to
<code>APPLICATION_MODAL</code>. In addition, as is the case
for shells, the window manager for the desktop on which the
instance is visible has ultimate control over the appearance
and behavior of the instance, including its modality.
</p>
<dl>
<dt><b>Styles:</b></dt>
<dd>APPLICATION_MODAL, PRIMARY_MODAL, SYSTEM_MODAL, SHEET</dd>
<dt><b>Events:</b></dt>
<dd>(none)</dd>
</dl>
<p>
Note: Only one of the styles APPLICATION_MODAL, PRIMARY_MODAL,
and SYSTEM_MODAL may be specified.
</p>
@see Shell
@see <a href=""http://www.eclipse.org/swt/examples.php"">SWT Example: ControlExample</a>
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",1347,-1348
"
Constructs a new instance of this class given only its
parent.
@param parent a shell which will be the parent of the new instance
@exception IllegalArgumentException <ul>
<li>ERROR_NULL_ARGUMENT - if the parent is null</li>
</ul>
@exception SWTException <ul>
<li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>
</ul>
",1348,-1349
"
Constructs a new instance of this class given its parent
and a style value describing its behavior and appearance.
<p>
The style value is either one of the style constants defined in
class <code>SWT</code> which is applicable to instances of this
class, or must be built by <em>bitwise OR</em>'ing together
(that is, using the <code>int</code> ""|"" operator) two or more
of those <code>SWT</code> style constants. The class description
lists the style constants that are applicable to the class.
Style bits are also inherited from superclasses.
@param parent a shell which will be the parent of the new instance
@param style the style of dialog to construct
@exception IllegalArgumentException <ul>
<li>ERROR_NULL_ARGUMENT - if the parent is null</li>
</ul>
@exception SWTException <ul>
<li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>
</ul>
@see SWT#PRIMARY_MODAL
@see SWT#APPLICATION_MODAL
@see SWT#SYSTEM_MODAL
",1349,-1350
"
Checks that this class can be subclassed.
<p>
IMPORTANT: See the comment in <code>Widget.checkSubclass()</code>.
</p>
@exception SWTException <ul>
<li>ERROR_INVALID_SUBCLASS - if this class is not an allowed subclass</li>
</ul>
@see Widget#checkSubclass
",1350,-1351
"
Throws an exception if the specified widget can not be
used as a parent for the receiver.
@exception IllegalArgumentException <ul>
<li>ERROR_NULL_ARGUMENT - if the parent is null</li>
<li>ERROR_INVALID_ARGUMENT - if the parent is disposed</li>
</ul>
@exception SWTException <ul>
<li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>
</ul>
",1351,-1352
"
Does whatever dialog specific cleanup is required, and then
uses the code in <code>SWTError.error</code> to handle the error.
@param code the descriptive error code
@see SWT#error(int)
",1352,-1353
"
Returns the receiver's parent, which must be a <code>Shell</code>
or null.
@return the receiver's parent
@exception SWTException <ul>
<li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>
<li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>
</ul>
",1353,-1354
"
Returns the receiver's style information.
<p>
Note that, the value which is returned by this method <em>may
not match</em> the value which was provided to the constructor
when the receiver was created.
</p>
@return the style bits
@exception SWTException <ul>
<li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>
<li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>
</ul>
",1354,-1355
"
Returns the receiver's text, which is the string that the
window manager will typically display as the receiver's
<em>title</em>. If the text has not previously been set,
returns an empty string.
@return the text
@exception SWTException <ul>
<li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>
<li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>
</ul>
",1355,-1356
"
Sets the receiver's text, which is the string that the
window manager will typically display as the receiver's
<em>title</em>, to the argument, which must not be null.
@param string the new text
@exception IllegalArgumentException <ul>
<li>ERROR_NULL_ARGUMENT - if the text is null</li>
</ul>
@exception SWTException <ul>
<li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>
<li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>
</ul>
",1356,-1357
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1357,-1358
"
Instances of this class provide a description of a particular
event which occurred within SWT. The SWT <em>untyped listener</em>
API uses these instances for all event dispatching.
<p>
Note: For a given event, only the fields which are appropriate
will be filled in. The contents of the fields which are not used
by the event are unspecified.
</p>
@see Listener
@see org.eclipse.swt.events.TypedEvent
@see <a href=""http://www.eclipse.org/swt/examples.php"">SWT Example: ControlExample, Listeners</a>
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",1358,-1359
"
the display where the event occurred
@since 2.0
",1359,-1360
"
the widget that issued the event
",1360,-1361
"
the type of event, as defined by the event type constants
in class <code>SWT</code>
@see org.eclipse.swt.SWT
",1361,-1362
"
the event specific detail field, as defined by the detail constants
in class <code>SWT</code>
@see org.eclipse.swt.SWT
",1362,-1363
"
the item that the event occurred in (can be null)
",1363,-1364
"
the index of the item where the event occurred
@since 3.2
",1364,-1365
"
the graphics context to use when painting
that is configured to use the colors, font and
damaged region of the control.  It is valid
only during the paint and must not be disposed
",1365,-1366
"
depending on the event type, the x offset of the bounding
rectangle of the region that requires painting or the
widget-relative, x coordinate of the pointer at the
time the mouse button was pressed or released
",1366,-1367
"
depending on the event type, the y offset of the bounding
rectangle of the  region that requires painting or the
widget-relative, y coordinate of the pointer at the
time the mouse button was pressed or released
",1367,-1368
"
the width of the bounding rectangle of the
region that requires painting
",1368,-1369
"
the height of the bounding rectangle of the
region that requires painting
",1369,-1370
"
depending on the event type, the number of following
paint events that are pending which may always be zero
on some platforms, or the number of lines or pages to
scroll using the mouse wheel, or the number of times the
mouse has been clicked
",1370,-1371
"
the time that the event occurred.
NOTE: This field is an unsigned integer and should
be AND'ed with 0xFFFFFFFFL so that it can be treated
as a signed long.
",1371,-1372
"
the button that was pressed or released; 1 for the
first button, 2 for the second button, and 3 for the
third button, etc.
",1372,-1373
"
depending on the event, the character represented by the key
that was typed.  This is the final character that results
after all modifiers have been applied.  For example, when the
user types Ctrl+A, the character value is 0x01 (ASCII SOH).
It is important that applications do not attempt to modify the
character value based on a stateMask (such as SWT.CTRL) or the
resulting character will not be correct.
",1373,-1374
"
depending on the event, the key code of the key that was typed,
as defined by the key code constants in class <code>SWT</code>.
When the character field of the event is ambiguous, this field
contains the unaffected value of the original character.  For
example, typing Ctrl+M or Enter both result in the character '\r'
but the keyCode field will also contain '\r' when Enter was typed
and 'm' when Ctrl+M was typed.
@see org.eclipse.swt.SWT
",1374,-1375
"
depending on the event, the location of key specified by the
keyCode or character. The possible values for this field are
<code>SWT.LEFT</code>, <code>SWT.RIGHT</code>, <code>SWT.KEYPAD</code>,
or <code>SWT.NONE</code> representing the main keyboard area.
<p>
The location field can be used to differentiate key events that have
the same key code and character but are generated by different keys
in the keyboard. For example, a key down event with the key code equals
to SWT.SHIFT can be generated by the left and the right shift keys in the
keyboard. The location field can only be used to determine the location
of the key code or character in the current event. It does not
include information about the location of modifiers in state
mask.
</p>
@see org.eclipse.swt.SWT#LEFT
@see org.eclipse.swt.SWT#RIGHT
@see org.eclipse.swt.SWT#KEYPAD
@since 3.6
",1375,-1376
"
depending on the event, the state of the keyboard modifier
keys and mouse masks at the time the event was generated.
@see org.eclipse.swt.SWT#MODIFIER_MASK
@see org.eclipse.swt.SWT#BUTTON_MASK
",1376,-1377
"
depending on the event, the range of text being modified.
Setting these fields only has effect during ImeComposition
events.
",1377,-1378
"
depending on the event, the new text that will be inserted.
Setting this field will change the text that is about to
be inserted or deleted.
",1378,-1379
"
Bidi segment offsets
@since 3.8
",1379,-1380
"
Characters to be applied on the segment boundaries
@since 3.8
",1380,-1381
"
depending on the event, a flag indicating whether the operation
should be allowed.  Setting this field to false will cancel the
operation.
",1381,-1382
"
a field for application use
",1382,-1383
"
An array of the touch states for the current touch event.
@since 3.7
",1383,-1384
"
If nonzero, a positive value indicates a swipe to the right,
and a negative value indicates a swipe to the left.
@since 3.7
",1384,-1385
"
If nonzero, a positive value indicates a swipe in the up direction,
and a negative value indicates a swipe in the down direction.
@since 3.7
",1385,-1386
"
The change in magnification. This value should be added to the current
scaling of an item to get the new scale factor.
@since 3.7
",1386,-1387
"
The number of degrees rotated on the track pad.
@since 3.7
",1387,-1388
"
Gets the bounds.
@return a rectangle that is the bounds.
",1388,-1389
"
Sets the bounds.
@param rect the new rectangle
",1389,-1390
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the event
",1390,-1391
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1391,-1392
"
Instances of this class implement a simple
look up mechanism that maps an event type
to a listener.  Multiple listeners for the
same event type are supported.
",1392,-1393
"
****************************************************************************
Copyright (c) 2000, 2015 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1393,-1394
"
This class is the abstract superclass of all non-windowed
user interface objects that occur within specific controls.
For example, a tree will contain tree items.
<dl>
<dt><b>Styles:</b></dt>
<dd>(none)</dd>
<dt><b>Events:</b></dt>
<dd>(none)</dd>
</dl>
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",1394,-1395
"
Maximum number of characters Windows can reliably display in one line.
Mac and Linux can display more but we are limited by windows here.
",1395,-1396
"
Constructs a new instance of this class given its parent
and a style value describing its behavior and appearance.
The item is added to the end of the items maintained by its parent.
<p>
The style value is either one of the style constants defined in
class <code>SWT</code> which is applicable to instances of this
class, or must be built by <em>bitwise OR</em>'ing together
(that is, using the <code>int</code> ""|"" operator) two or more
of those <code>SWT</code> style constants. The class description
lists the style constants that are applicable to the class.
Style bits are also inherited from superclasses.
</p>
@param parent a widget which will be the parent of the new instance (cannot be null)
@param style the style of item to construct
@exception IllegalArgumentException <ul>
<li>ERROR_NULL_ARGUMENT - if the parent is null</li>
</ul>
@exception SWTException <ul>
<li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>
</ul>
@see SWT
@see Widget#getStyle
",1396,-1397
"
Constructs a new instance of this class given its parent
and a style value describing its behavior and appearance,
and the index at which to place it in the items maintained
by its parent.
<p>
The style value is either one of the style constants defined in
class <code>SWT</code> which is applicable to instances of this
class, or must be built by <em>bitwise OR</em>'ing together
(that is, using the <code>int</code> ""|"" operator) two or more
of those <code>SWT</code> style constants. The class description
lists the style constants that are applicable to the class.
Style bits are also inherited from superclasses.
</p>
@param parent a widget which will be the parent of the new instance (cannot be null)
@param style the style of item to construct
@param index the zero-relative index at which to store the receiver in its parent
@exception IllegalArgumentException <ul>
<li>ERROR_NULL_ARGUMENT - if the parent is null</li>
<li>ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the parent (inclusive)</li>
</ul>
@exception SWTException <ul>
<li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the parent</li>
</ul>
@see SWT
@see Widget#getStyle
",1397,-1398
"
Returns the receiver's image if it has one, or null
if it does not.
@return the receiver's image
@exception SWTException <ul>
<li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>
<li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>
</ul>
",1398,-1399
"
Returns the receiver's text, which will be an empty
string if it has never been set.
@return the receiver's text
@exception SWTException <ul>
<li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>
<li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>
</ul>
",1399,-1400
"
Sets the receiver's image to the argument, which may be
null indicating that no image should be displayed.
@param image the image to display on the receiver (may be null)
@exception IllegalArgumentException <ul>
<li>ERROR_INVALID_ARGUMENT - if the image has been disposed</li>
</ul>
@exception SWTException <ul>
<li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>
<li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>
</ul>
",1400,-1401
"
Sets the receiver's text.
<p>
Note: If control characters like '\n', '\t' etc. are used
in the string, then the behavior is platform dependent.
</p>
@param string the new text
@exception IllegalArgumentException <ul>
<li>ERROR_NULL_ARGUMENT - if the text is null</li>
</ul>
@exception SWTException <ul>
<li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>
<li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>
</ul>
",1401,-1402
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1402,-1403
"
A layout controls the position and size
of the children of a composite widget.
This class is the abstract base class for
layouts.
@see Composite#setLayout(Layout)
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",1403,-1404
"
Computes and returns the size of the specified
composite's client area according to this layout.
<p>
This method computes the size that the client area
of the composite must be in order to position all
children at their preferred size inside the
composite according to the layout algorithm
encoded by this layout.
</p>
<p>
When a width or height hint is supplied, it is
used to constrain the result. For example, if a
width hint is provided that is less than the
width of the client area, the layout may choose
to wrap and increase height, clip, overlap, or
otherwise constrain the children.
</p>
@param composite a composite widget using this layout
@param wHint width (<code>SWT.DEFAULT</code> for preferred size)
@param hHint height (<code>SWT.DEFAULT</code> for preferred size)
@param flushCache <code>true</code> means flush cached layout values
@return a point containing the computed size (width, height)
@see #layout
@see Control#getBorderWidth
@see Control#getBounds
@see Control#getSize
@see Control#pack(boolean)
@see ""computeTrim, getClientArea for controls that implement them""
",1404,-1405
"
Instruct the layout to flush any cached values
associated with the control specified in the argument
<code>control</code>.
@param control a control managed by this layout
@return true if the Layout has flushed all cached information associated with control
@since 3.1
",1405,-1406
"
Lays out the children of the specified composite
according to this layout.
<p>
This method positions and sizes the children of a
composite using the layout algorithm encoded by this
layout. Children of the composite are positioned in
the client area of the composite. The position of
the composite is not altered by this method.
</p>
<p>
When the flush cache hint is true, the layout is
instructed to flush any cached values associated
with the children. Typically, a layout will cache
the preferred sizes of the children to avoid the
expense of computing these values each time the
widget is laid out.
</p>
<p>
When layout is triggered explicitly by the programmer
the flush cache hint is true. When layout is triggered
by a resize, either caused by the programmer or by the
user, the hint is false.
</p>
@param composite a composite widget using this layout
@param flushCache <code>true</code> means flush cached layout values
",1406,-1407
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1407,-1408
"
Implementers of <code>Listener</code> provide a simple
<code>handleEvent()</code> method that is used internally
by SWT to dispatch events.
<p>
After creating an instance of a class that implements this interface
it can be added to a widget using the
<code>addListener(int eventType, Listener handler)</code> method and
removed using the
<code>removeListener (int eventType, Listener handler)</code> method.
When the specified event occurs, <code>handleEvent(...)</code> will
be sent to the instance.
</p>
<p>
Classes which implement this interface are described within SWT as
providing the <em>untyped listener</em> API. Typically, widgets will
also provide a higher-level <em>typed listener</em> API, that is based
on the standard <code>java.util.EventListener</code> pattern.
</p>
<p>
Note that, since all internal SWT event dispatching is based on untyped
listeners, it is simple to build subsets of SWT for use on memory
constrained, small footprint devices, by removing the classes and
methods which implement the typed listener API.
</p>
@see Widget#addListener
@see java.util.EventListener
@see org.eclipse.swt.events
",1408,-1409
"
Sent when an event that the receiver has registered for occurs.
@param event the event which occurred
",1409,-1410
"
****************************************************************************
Copyright (c) 2000, 2016 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1410,-1411
"
Instances of this class are descriptions of monitors.
@see Display
@see <a href=""http://www.eclipse.org/swt/snippets/#monitor"">Monitor snippets</a>
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
@since 3.0
",1411,-1412
"
Prevents uninitialized instances from being created outside the package.
",1412,-1413
"
Compares the argument to the receiver, and returns true
if they represent the <em>same</em> object using a class
specific comparison.
@param object the object to compare with this object
@return <code>true</code> if the object is the same as this object and <code>false</code> otherwise
@see #hashCode()
",1413,-1414
"
Returns a rectangle describing the receiver's size and location
relative to its device. Note that on multi-monitor systems the
origin can be negative.
@return the receiver's bounding rectangle
",1414,-1415
"
Returns a rectangle which describes the area of the
receiver which is capable of displaying data.
@return the client area
",1415,-1416
"
Returns the zoom value for the monitor
@return monitor's zoom value
@since 3.107
",1416,-1417
"
Returns an integer hash code for the receiver. Any two
objects that return <code>true</code> when passed to
<code>equals</code> must return the same value for this
method.
@return the receiver's hash
@see #equals(Object)
",1417,-1418
"
****************************************************************************
Copyright (c) 2000, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1418,-1419
"
Instances of this class are used to ensure that an
application cannot interfere with the locking mechanism
used to implement asynchronous and synchronous communication
between widgets and background threads.
",1419,-1420
"
****************************************************************************
Copyright (c) 2000, 2014 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1420,-1421
"
Instances of this class provide synchronization support
for displays. A default instance is created automatically
for each display, and this instance is sufficient for almost
all applications.
<p>
<b>IMPORTANT:</b> Typical application code <em>never</em>
needs to deal with this class. It is provided only to
allow applications which require non-standard
synchronization behavior to plug in the support they
require. <em>Subclasses which override the methods in
this class must ensure that the superclass methods are
invoked in their implementations</em>
</p>
@see Display#setSynchronizer
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",1421,-1422
"
Constructs a new instance of this class.
@param display the display to create the synchronizer on
",1422,-1423
"
Removes all pending events from the receiver and inserts them into the beginning of the given
synchronizer's queue
@param toReceiveTheEvents the synchronizer that will receive the events
",1423,-1424
"
Adds the given events to the beginning of the message queue, to
be processed in order.
@param toAdd events to add. Permits null if and only if numToAdd is 0.
@param numToAdd number of events to add from the beginning of the given array.
",1424,-1425
"
Causes the <code>run()</code> method of the runnable to
be invoked by the user-interface thread at the next
reasonable opportunity. The caller of this method continues
to run in parallel, and is not notified when the
runnable has completed.
@param runnable code to run on the user-interface thread.
@see #syncExec
",1425,-1426
"
Causes the <code>run()</code> method of the runnable to
be invoked by the user-interface thread at the next
reasonable opportunity. The thread which calls this method
is suspended until the runnable completes.
@param runnable code to run on the user-interface thread.
@exception SWTException <ul>
<li>ERROR_FAILED_EXEC - if an exception occurred when executing the runnable</li>
</ul>
@see #asyncExec
",1426,-1427
"
****************************************************************************
Copyright (c) 2010, 2011 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1427,-1428
"
Instances of this class are created in response to a
touch-based input device being touched. They are found
in the <code>touches</code> field of an Event or TouchEvent.
@see org.eclipse.swt.events.TouchEvent
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
@since 3.7
",1428,-1429
"
The unique identity of the touch. Use this value to track changes to a touch
during the touch's life. Two touches may have the same identity even if they
come from different sources.
",1429,-1430
"
The object representing the input source that generated the touch.
",1430,-1431
"
The state of this touch at the time it was generated. If this field is 0
then the finger is still touching the device but has not moved
since the last <code>TouchEvent</code> was generated.
@see org.eclipse.swt.SWT#TOUCHSTATE_DOWN
@see org.eclipse.swt.SWT#TOUCHSTATE_MOVE
@see org.eclipse.swt.SWT#TOUCHSTATE_UP
",1431,-1432
"
A flag indicating that the touch is the first touch from a previous
state of no touch points. Once designated as such, the touch remains
the primary touch until all fingers are removed from the device.
",1432,-1433
"
The x location of the touch in TouchSource coordinates.
",1433,-1434
"
The y location of the touch in TouchSource coordinates.
",1434,-1435
"
Constructs a new touch state from the given inputs.
@param identity Identity of the touch
@param source Object representing the device that generated the touch
@param state One of the state constants representing the state of this touch
@param primary Whether or not the touch is the primary touch
@param x X location of the touch in screen coordinates
@param y Y location of the touch in screen coordinates
",1435,-1436
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the event
",1436,-1437
"
****************************************************************************
Copyright (c) 2010, 2018 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1437,-1438
"
Instances of this class represent sources of touch input that generate <code>Touch</code> objects.
They also provide information about the input source, which is important for interpreting the
information in the <code>Touch</code> object.
<p>
Instances of this class can be marked as direct or indirect:
<ul>
<li>When an instance is <em>direct</em>, the touch source is a touch-sensitive digitizer surface such
as a tablet or a touch screen. There is a one-to-one mapping between a touch point and a location in
a window.
</li><li>
When an instance is <em>indirect</em> (more precisely, not direct), the touch source is a track pad or
other device that normally moves the cursor, but is also able to interpret multiple touches on its surface.
In this case there is not a one-to-one mapping between the location of the touch on the device and a
location on the display because the user can remove their finger or stylus and touch another part of
the device and resume what they were doing.
</li>
</ul>
@see Touch
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
@since 3.7
",1438,-1439
"
Constructs a new touch source from the given inputs.
@param direct Is the touch source direct or indirect?
@param height height of the source in points.
@param width width of the source in points.
",1439,-1440
"
Returns the type of touch input this source generates, <code>true</code> for direct or <code>false</code> for indirect.
@return <code>true</code> if the input source is direct, or <code>false</code> otherwise
",1440,-1441
"
Returns the bounding rectangle of the device. For a direct source, this corresponds to the bounds of
the display device in pixels. For an indirect source, this contains the size of the device in points.
<p>
Note that the x and y values may not necessarily be 0 if the TouchSource is a direct source.
@return the bounding rectangle of the input source
",1441,-1442
"
Returns a string containing a concise, human-readable
description of the receiver.
@return a string representation of the event
",1442,-1443
"
****************************************************************************
Copyright (c) 2000, 2009 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1443,-1444
"
Instances of this class represent the system tray that is part
of the task bar status area on some operating systems.
<dl>
<dt><b>Styles:</b></dt>
<dd>(none)</dd>
<dt><b>Events:</b></dt>
<dd>(none)</dd>
</dl>
<p>
IMPORTANT: This class is <em>not</em> intended to be subclassed.
</p>
@see Display#getSystemTray
@see <a href=""http://www.eclipse.org/swt/snippets/#tray"">Tray, TrayItem snippets</a>
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
@since 3.0
@noextend This class is not intended to be subclassed by clients.
",1444,-1445
"
Returns the item at the given, zero-relative index in the
receiver. Throws an exception if the index is out of range.
@param index the index of the item to return
@return the item at the given index
@exception IllegalArgumentException <ul>
<li>ERROR_INVALID_RANGE - if the index is not between 0 and the number of elements in the list minus 1 (inclusive)</li>
</ul>
@exception SWTException <ul>
<li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>
<li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>
</ul>
",1445,-1446
"
Returns the number of items contained in the receiver.
@return the number of items
@exception SWTException <ul>
<li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>
<li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>
</ul>
",1446,-1447
"
Returns an array of <code>TrayItem</code>s which are the items
in the receiver.
<p>
Note: This is not the actual structure used by the receiver
to maintain its list of items, so modifying the array will
not affect the receiver.
</p>
@return the items in the receiver
@exception SWTException <ul>
<li>ERROR_WIDGET_DISPOSED - if the receiver has been disposed</li>
<li>ERROR_THREAD_INVALID_ACCESS - if not called from the thread that created the receiver</li>
</ul>
",1447,-1448
"
****************************************************************************
Copyright (c) 2000, 2016 IBM Corporation and others.
This program and the accompanying materials
are made available under the terms of the Eclipse Public License 2.0
which accompanies this distribution, and is available at
https://www.eclipse.org/legal/epl-2.0/
SPDX-License-Identifier: EPL-2.0
Contributors:
IBM Corporation - initial API and implementation
*****************************************************************************
",1448,-1449
"
Instances of this class are <em>internal SWT implementation</em>
objects which provide a mapping between the typed and untyped
listener mechanisms that SWT supports.
<p>
<b>IMPORTANT:</b> This class is <em>not</em> part of the SWT
public API. It is marked public only so that it can be shared
within the packages provided by SWT. It should never be
referenced from application code.
</p>
@see Listener
@see <a href=""http://www.eclipse.org/swt/"">Sample code and further information</a>
",1449,-1450
"
The receiver's event listener
",1450,-1451
"
Constructs a new instance of this class for the given event listener.
<p>
<b>IMPORTANT:</b> This method is <em>not</em> part of the SWT
public API. It is marked public only so that it can be shared
within the packages provided by SWT. It should never be
referenced from application code.
</p>
@param listener the event listener to store in the receiver
@noreference This method is not intended to be referenced by clients.
",1451,-1452
"
Returns the receiver's event listener.
<p>
<b>IMPORTANT:</b> This method is <em>not</em> part of the SWT
public API. It is marked public only so that it can be shared
within the packages provided by SWT. It should never be
referenced from application code.
</p>
@return the receiver's event listener
@noreference This method is not intended to be referenced by clients.
",1452,-1453
"
Handles the given event.
<p>
<b>IMPORTANT:</b> This method is <em>not</em> part of the SWT
public API. It is marked public only so that it can be shared
within the packages provided by SWT. It should never be
referenced from application code.
</p>
@param e the event to handle
@noreference This method is not intended to be referenced by clients.
",1453,-1454
